{
  "title": "Learn Basic Javascript By Building A Role Playing Game",
  "description": "A project-based course on javascript imported from freeCodeCamp.",
  "language": "javascript",
  "lessons": [
    {
      "title": "Step 1",
      "description": "JavaScript is a powerful language which allows you to build websites that are interactive. \n\n*Note*: For all remaining projects in this curriculum, you will need a basic level of knowledge in HTML and CSS. If you are new to HTML and CSS, please go through the [Responsive Web Design Certification](https://www.freecodecamp.org/learn/2022/responsive-web-design/).\n\nTo get started, create your standard HTML boilerplate with a `DOCTYPE`, `html`, `head`, and `body`, then add a `meta` tag for the `charset`. Add a `title` element and use the text `RPG - Dragon Repeller` for it. Include a `link` tag for your stylesheet to link the `styles.css` file.\n\nFinally, create a `div` element with `id` set to `game` within your `body`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your code should contain the `DOCTYPE` reference.\n\n```js\nassert(code.match(/<!DOCTYPE/gi));\n```\n\nYou should include a space after the `DOCTYPE` reference.\n\n```js\nassert(code.match(/<!DOCTYPE\\s+/gi));\n```\n\nYou should define the document type to be `html`.\n\n```js\nassert(code.match(/<!DOCTYPE\\s+html/gi));\n```\n\nYou should close the `DOCTYPE` declaration with a `>` after the type.\n\n```js\nassert(code.match(/<!DOCTYPE\\s+html\\s*>/gi));\n```\n\nYour `html` element should have an opening tag. Don't forget the `lang` attribute.\n\n```js\nassert(code.match(/<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>/gi));\n```\n\nYour `html` element should have a closing tag.\n\n```js\nassert(code.match(/<\\/html\\s*>/));\n```\n\nYour `DOCTYPE` declaration should be at the beginning of your HTML.\n\n```js\nassert(__helpers.removeHtmlComments(code).match(/^\\s*<!DOCTYPE\\s+html\\s*>/i));\n```\n\nYou should have an opening `head` tag.\n\n```js\nassert(code.match(/<head\\s*>/i));\n```\n\nYou should have a closing `head` tag.\n\n```js\nassert(code.match(/<\\/head\\s*>/i));\n```\n\nYou should have an opening `body` tag.\n\n```js\nassert(code.match(/<body\\s*>/i));\n```\n\nYou should have a closing `body` tag.\n\n```js\nassert(code.match(/<\\/body\\s*>/i));\n```\n\nThe `head` and `body` elements should be siblings.\n\n```js\nassert.match(code, /<head\\s*>.*<\\/head\\s*>.*<body\\s*>.*<\\/body\\s*>/s)\n```\n\nThe `head` element should be within the `html` element.\n\n```js\nassert.match(code, /<html[^>]*>.*<head\\s*>.*<\\/head\\s*>.*<\\/html\\s*>/s);\n```\n\nThe `body` element should be within the `html` element.\n\n```js\nassert.match(code, /<html[^>]*>.*<body\\s*>.*<\\/body\\s*>.*<\\/html\\s*>/s);\n```\n\nYour code should have a `meta` element.\n\n```js\nconst meta = document.querySelector('meta');\nassert.exists(meta);\n```\n\nYour `meta` element should have a `charset` attribute with the value `UTF-8`.\n\n```js\nassert.match(code, /<meta[\\s\\S]+?charset=('|\"|`)UTF-8\\1/i)\n```\n\nYour code should have a `title` element.\n\n```js\nconst title = document.querySelector('title');\nassert.exists(title);\n```\n\nYou should have a closing `title` tag.\n\n```js\nassert(code.match(/<\\/title\\s*>/i));\n```\n\nYour code should have a `link` element.\n\n```js\nconst link = document.querySelector('head > link');\nassert.exists(link);\n```\n\nYou should have a `div` element.\n\n```js\nconst div = document.querySelector('div');\nassert.exists(div);\n```\n\nYour `div` element should have an `id` attribute with the value `game`.\n\n```js\nconst div = document.querySelector('div');\nassert.equal(div?.id, 'game');\n```\n\nYour `div` element should be within the `body` element.\n\n```js\nconst div = document.querySelector('div');\nassert.equal(div?.parentElement?.localName, 'body');\n```"
    },
    {
      "title": "Step 11",
      "description": "In your role playing game, users will be able to track their stats, buy weapons, and fight monsters. Before you can continue with the interactive JavaScript portion of the game, you need to first create the HTML elements that will display the game information.\n\nCreate four `div` elements within your `#game` element. Give them the following respective `id` values, in order: `stats`, `controls`, `monsterStats`, and `text`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n--fcc-editable-region--\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n--fcc-editable-region--\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];"
        }
      ],
      "testCode": "You should create four new `div` elements.\n\n```js\nassert.equal(document.querySelectorAll('div')?.length, 5);\n```\n\nYou should give one of the new `div` elements an `id`  of `stats`.\n\n```js\nassert.exists(document.querySelector('div#stats'));\n```\n\nYou should give one of the new `div` elements an `id` of `controls`.\n\n```js\nassert.exists(document.querySelector('div#controls'));\n```\n\nYou should give one of the new `div` elements an `id` of `monsterStats`.\n\n```js\nassert.exists(document.querySelector('div#monsterStats'));\n```\n\nYou should give one of the new `div` elements an `id` of `text`.\n\n```js\nassert.exists(document.querySelector('div#text'));\n```\n\nYou should place the new `div` elements in the correct order.\n\n```js\nfunction __t(a, b) {\n  return document.querySelector(a)?.nextElementSibling?.getAttribute('id') === b;\n}\nassert(__t('div#stats','controls') && __t('div#controls','monsterStats') && __t('div#monsterStats','text'));\n```\n\nYou should place the new `div` elements within the `#game` element.\n\n```js\nassert.equal(document.querySelector('#game')?.children?.length, 4);\n```"
    },
    {
      "title": "Step 12",
      "description": "Create three `span` elements within your `#stats` element. Give each of them the class `stat`. Then give the first one the text `XP: 0`, the second one the text `Health: 100`, and the third one the text `Gold: 50`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n--fcc-editable-region--\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n\n      </div>\n      <div id=\"controls\"></div>\n      <div id=\"monsterStats\"></div>\n      <div id=\"text\"></div>\n    </div>\n  </body>\n--fcc-editable-region--\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];"
        }
      ],
      "testCode": "You should have three `span` elements within the `#stats` element.\n\n```js\nconst spans = document.querySelectorAll('#stats > span');\nassert.equal(spans?.length, 3);\n```\n\nYou should give the new three `span` elements a class of `stat`.\n\n```js\nassert.lengthOf(document.querySelectorAll('#stats > .stat'), 3);\n```\n\nYour first `.stat` element should have the provided text `XP: 0`.\n\n```js\nassert(document.querySelectorAll('#stats > .stat')?.[0]?.innerText === 'XP: 0');\n```\n\nYour second `.stat` element should have the provided text `Health: 100`.\n\n```js\nassert(document.querySelectorAll('#stats > .stat')?.[1]?.innerText === 'Health: 100');\n```\n\nYour third `.stat` element should have the provided text `Gold: 50`.\n\n```js\nassert(document.querySelectorAll('#stats > .stat')?.[2]?.innerText === 'Gold: 50');\n```"
    },
    {
      "title": "Step 13",
      "description": "Wrap the numbers `0`, `100`, and `50` in `span` elements, and wrap those new `span` elements in `strong` elements. Then give your new `span` elements `id` values of `xpText`, `healthText`, and `goldText`, respectively.\n\nYour answer should follow this basic structure:\n\n```html\n<span class=\"stat\">TEXT <strong><span id=\"VALUE\">TEXT</span></strong></span>\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n--fcc-editable-region--\n        <span class=\"stat\">XP: 0</span>\n        <span class=\"stat\">Health: 100</span>\n        <span class=\"stat\">Gold: 50</span>\n--fcc-editable-region--\n      </div>\n      <div id=\"controls\"></div>\n      <div id=\"monsterStats\"></div>\n      <div id=\"text\"></div>\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];"
        }
      ],
      "testCode": "You should add a `strong` element in your first `.stat` element.\n\n```js\nconst stat = document.querySelectorAll('.stat')[0];\nconst strong = stat?.querySelector('strong');\nassert.exists(strong);\n```\n\nYour first new `strong` element should have a `span` element.\n\n```js\nconst stat = document.querySelectorAll('.stat')[0];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.exists(span);\n```\n\nYour first nested `span` element should have the `id` of `xpText`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[0];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.equal(span?.id, 'xpText');\n```\n\nYour first `span` element should be wrapped around the text `0`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[0];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.equal(span.innerText.trim(), '0');\n```\n\nThe text of your first `.stat` element should still be `XP: 0`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[0];\nassert.equal(stat.innerText.trimEnd(), 'XP: 0');\n```\n\nYou should add a `strong` element in your second `.stat` element.\n\n```js\nconst stat = document.querySelectorAll('.stat')[1];\nconst strong = stat?.querySelector('strong');\nassert.exists(strong);\n```\n\nYour second new `strong` element should have a `span` element.\n\n```js\nconst stat = document.querySelectorAll('.stat')[1];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.exists(span);\n```\n\nYour second nested `span` element should have the `id` of `healthText`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[1];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.equal(span?.id, 'healthText');\n```\n\nYour second `span` element should be wrapped around the text `100`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[1];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.equal(span.innerText.trim(), '100');\n```\n\nThe text of your second `.stat` element should still be `Health: 100`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[1];\nassert.equal(stat.innerText.trimEnd(), 'Health: 100');\n```\n\nYou should add a `strong` element in your third `.stat` element.\n\n```js\nconst stat = document.querySelectorAll('.stat')[2];\nconst strong = stat?.querySelector('strong');\nassert.exists(strong);\n```\n\nYour third new `strong` element should have a `span` element.\n\n```js\nconst stat = document.querySelectorAll('.stat')[2];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.exists(span);\n```\n\nYour third nested `span` element should have the `id` of `goldText`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[2];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.equal(span?.id, 'goldText');\n```\n\nYour third `span` element should be wrapped around the text `50`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[2];\nconst strong = stat?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.equal(span.innerText.trim(), '50');\n```\n\nThe text of your third `.stat` element should still be `Gold: 50`.\n\n```js\nconst stat = document.querySelectorAll('.stat')[2];\nassert.equal(stat.innerText.trimEnd(), 'Gold: 50');\n```"
    },
    {
      "title": "Step 14",
      "description": "For your `#controls` element, create three `button` elements. The first should have the `id` set to `button1`, and the text `Go to store`. The second should have the `id` set to `button2`, and the text `Go to cave`. The third should have the `id` set to `button3`, and the text `Fight dragon`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n--fcc-editable-region--\n      <div id=\"controls\">\n\n      </div>\n--fcc-editable-region--\n      <div id=\"monsterStats\"></div>\n      <div id=\"text\"></div>\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];"
        }
      ],
      "testCode": "You should add three `button` elements to your `#controls` element.\n\n```js\nconst buttons = document.querySelectorAll('#controls > button');\nassert.exists(buttons);\nassert.equal(buttons.length, 3);\n```\n\nYour first button should have the `id` set to `button1`.\n\n```js\nconst buttons = document.querySelectorAll('#controls > button');\nconst button1 = buttons[0];\nassert.equal(button1.id, 'button1');\n```\n\nYour first button should have the text `Go to store`.\n\n```js\nconst buttons = document.querySelectorAll('#controls > button');\nconst button1 = buttons[0];\nassert.equal(button1.innerText, 'Go to store');\n```\n\nYour second button should have the `id` set to `button2`.\n\n```js\nconst buttons = document.querySelectorAll('#controls > button');\nconst button2 = buttons[1];\nassert.equal(button2.id, 'button2');\n```\n\nYour second button should have the text `Go to cave`.\n\n```js\nconst buttons = document.querySelectorAll('#controls > button');\nconst button2 = buttons[1];\nassert.equal(button2.innerText, 'Go to cave');\n```\n\nYour third button should have the `id` set to `button3`.\n\n```js\nconst buttons = document.querySelectorAll('#controls > button');\nconst button3 = buttons[2];\nassert.equal(button3.id, 'button3');\n```\n\nYour third button should have the text `Fight dragon`.\n\n```js\nconst buttons = document.querySelectorAll('#controls > button');\nconst button3 = buttons[2];\nassert.equal(button3.innerText, 'Fight dragon');\n```"
    },
    {
      "title": "Step 19",
      "description": "Similar to your `#stats` element, your `#monsterStats` element needs two `span` elements. Give them the class `stat` and give the first element the text `Monster Name: ` and the second the text `Health: `. After the text in each, add a `strong` element with an empty nested `span` element. Give the first inner `span` element an `id` of `monsterName` and the second inner `span` element an `id` of `monsterHealth`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n--fcc-editable-region--\n      <div id=\"monsterStats\">\n\n      </div>\n--fcc-editable-region--\n      <div id=\"text\"></div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "Your `#monsterStats` element should have two `span` elements.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nassert.equal(spans.length, 2);\n```\n\nYour new `span` elements should both have a `class` value of `stat`.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nassert.equal(spans[0].className, 'stat');\nassert.equal(spans[1].className, 'stat');\n```\n\nYour first `span` element should have a `strong` element with an empty nested `span` element.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nconst strong = spans[0]?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.exists(strong);\nassert.exists(span);\n```\n\nYour second `span` element should have a `strong` element with an empty nested `span` element.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nconst strong = spans[1]?.querySelector('strong');\nconst span = strong?.querySelector('span');\nassert.exists(strong);\nassert.exists(span);\n```\n\nYour first `span` element should have the text `Monster Name: `. Make sure the spacing is correct.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nassert.match(spans[0].innerHTML, /Monster Name:\\s+/);\n```\n\nYour second `span` element should have the text `Health: `. Make sure the spacing is correct.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nassert.match(spans[1].innerHTML, /Health:\\s+/);\n```\n\nYour `strong` and `span` elements should come after the text.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nassert.match(spans[0].innerHTML, /Monster Name:\\s+<strong>/);\nassert.match(spans[1].innerHTML, /Health:\\s+<strong>/);\n```\n\nYour first inner `span` element should have an `id` of `monsterName`.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nconst span = spans[0]?.querySelector('span');\nconst spanId = span?.id;\nassert.equal(spanId, 'monsterName');\n```\n\nYour second inner `span` element should have an `id` of `monsterHealth`.\n\n```js\nconst spans = document.querySelectorAll(`#monsterStats > span`);\nconst span = spans[1]?.querySelector('span');\nconst spanId = span?.id;\nassert.equal(spanId, 'monsterHealth');\n```"
    },
    {
      "title": "Step 20",
      "description": "Give your `#text` element the following text:\n\n```markup\nWelcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. \nYou are in the town square. Where do you want to go? Use the buttons above.\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n--fcc-editable-region--\n      <div id=\"text\">\n\n      </div>\n--fcc-editable-region--\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "Your `#text` element should have the above quoted text.\n\n```js\nconst text = document.querySelector('#text');\nassert.equal(text.innerText, \"Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\");\n```"
    },
    {
      "title": "Step 21",
      "description": "Now we need some quick styling. Start by giving the `body` a `background-color` set to `#0a0a23`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "--fcc-editable-region--\n\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `body` selector.\n\n```js\nconst body = new __helpers.CSSHelp(document).getStyle('body');\nassert.exists(body);\n```\n\nYour `body` selector should have a `background-color` property set to `#0a0a23`.\n\n```js\nconst background = new __helpers.CSSHelp(document).getStyle('body')?.getPropertyValue('background-color');\nassert.equal(background, 'rgb(10, 10, 35)');\n```"
    },
    {
      "title": "Step 22",
      "description": "Give the `#text` element a `background-color` of `#0a0a23`, a `color` of `#ffffff`, and `10px` of padding on all sides.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `#text` selector.\n\n```js\nconst text = new __helpers.CSSHelp(document).getStyle('#text');\nassert.exists(text);\n```\n\nYour `#text` element should have a `background-color` of `#0a0a23`.\n\n```js\nconst background = new __helpers.CSSHelp(document).getStyle('#text')?.getPropertyValue('background-color');\nassert.equal(background, 'rgb(10, 10, 35)');\n```\n\nYour `#text` element should have a `color` of `#ffffff`.\n\n```js\nconst color = new __helpers.CSSHelp(document).getStyle('#text')?.getPropertyValue('color');\nassert.equal(color, 'rgb(255, 255, 255)');\n```\n\nYour `#text` element should have `10px` of padding on all sides.\n\n```js\nconst padding = new __helpers.CSSHelp(document).getStyle('#text')?.getPropertyValue('padding');\nassert.equal(padding, '10px');\n```"
    },
    {
      "title": "Step 23",
      "description": "Give your `#game` a maximum width of `500px` and a maximum height of `400px`. Set the `background-color` to `#ffffff` and the `color` to `#ffffff`. \n\nUse margins to center it by setting the top margin to `30px`, bottom margin to `0px`, and the left and right margin to `auto`. \n\nFinally, give it `10px` of padding on all four sides.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `#game` selector.\n\n```js\nconst game = new __helpers.CSSHelp(document).getStyle('#game');\nassert.exists(game);\n```\n\nYour `#game` selector should have a `max-width` of `500px`.\n\n```js\nconst maxWidth = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('max-width');\nassert.equal(maxWidth, '500px');\n```\n\nYour `#game` selector should have a `max-height` of `400px`.\n\n```js\nconst maxHeight = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('max-height');\nassert.equal(maxHeight, '400px');\n```\n\nYour `#game` selector should have a `background-color` of `#ffffff`.\n\n```js\nconst background = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('background-color');\nassert.equal(background, 'rgb(255, 255, 255)');\n```\n\nYour `#game` selector should have a `color` of `#ffffff`.\n\n```js\nconst color = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('color');\nassert.equal(color, 'rgb(255, 255, 255)');\n```\n\nYour `#game` selector should have a `margin-top` set to `30px`.\n\n```js\nconst margin = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('margin-top');\nassert.equal(margin, '30px');\n```\n\nYour `#game` selector should have a `margin-left` set to `auto`.\n\n```js\nconst margin = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('margin-left');\nassert.equal(margin, 'auto');\n```\n\nYour `#game` selector should have a `margin-right` set to `auto`.\n\n```js\nconst margin = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('margin-right');\nassert.equal(margin, 'auto');\n```\n\n\nYour `#game` selector should have a `margin-bottom` set to `0px`.\n\n```js\nconst margin = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('margin-bottom');\nassert.equal(margin, '0px');\n```\n\nYour `#game` selector should have `10px` of padding on all sides.\n\n```js\nconst padding = new __helpers.CSSHelp(document).getStyle('#game')?.getPropertyValue('padding');\nassert.equal(padding, '10px');\n```"
    },
    {
      "title": "Step 24",
      "description": "Using a selector list (`selector1, selector2`) give both your `#controls` and `#stats` elements a `border` of `1px solid #0a0a23`, a `#0a0a23` text color, and `5px` of `padding`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `#controls, #stats` selector list.\n\n```js\nconst selector = new __helpers.CSSHelp(document).getStyle('#controls, #stats');\nassert.exists(selector);\n```\n\nYour `#controls, #stats` selector should have a `border` of `1px solid #0a0a23`.\n\n```js\nassert.equal(new __helpers.CSSHelp(document).getStyle('#controls, #stats')?.border, '1px solid rgb(10, 10, 35)');\n```\n\nYour `#controls, #stats` selector should have a `color` of `#0a0a23`.\n\n```js\nconst color = new __helpers.CSSHelp(document).getStyle('#controls, #stats')?.getPropertyValue('color');\nassert.equal(color, 'rgb(10, 10, 35)');\n```\n\nYour `#controls, #stats` selector should have `5px` of padding.\n\n```js\nconst padding = new __helpers.CSSHelp(document).getStyle('#controls, #stats')?.getPropertyValue('padding');\nassert.equal(padding, '5px');\n```"
    },
    {
      "title": "Step 26",
      "description": "For now, hide your `#monsterStats` element with the `display` property. Do not change any of the other styling.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n--fcc-editable-region--\n#monsterStats {\n\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `#monsterStats` selector.\n\n```js\nconst monsterStats = new __helpers.CSSHelp(document).getStyle('#monsterStats');\nassert.exists(monsterStats);\n```\n\nYour `#monsterStats` selector should have a `display` property of `none`.\n\n```js\nconst display = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('display');\nassert.equal(display, 'none');\n```\n\nYour `#monsterStats` selector should have a `border` of `1px solid #0a0a23`.\n\n```js\nconst border = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('border');\nassert.equal(border, '1px solid rgb(10, 10, 35)');\n```\n\nYour `#monsterStats` selector should have `5px` of padding.\n\n```js\nconst padding = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('padding');\nassert.equal(padding, '5px');\n```\n\nYour `#monsterStats` selector should have a `color` of `#ffffff`.\n\n```js\nconst color = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('color');\nassert.equal(color, 'rgb(255, 255, 255)');\n```\n\nYour `#monsterStats` selector should have a `background-color` of `#c70d0d`.\n\n```js\nconst background = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('background-color');\nassert.equal(background, 'rgb(199, 13, 13)');\n```"
    },
    {
      "title": "Step 27",
      "description": "Next, give your `.stat` elements a `padding-right` of `10px`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `.stat` selector.\n\n```js\nconst stat = new __helpers.CSSHelp(document).getStyle('.stat');\nassert.exists(stat);\n```\n\nYour `.stat` selector should have a `padding-right` of `10px`.\n\n```js\nconst paddingRight = new __helpers.CSSHelp(document).getStyle('.stat')?.getPropertyValue('padding-right');\nassert.equal(paddingRight, '10px');\n```"
    },
    {
      "title": "Step 2",
      "description": "Now you can start writing your JavaScript. Begin by creating a `script` element. This element is used to load JavaScript into your HTML file. \n\n```html\n<script>\n  // JavaScript code goes here\n</script>\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n--fcc-editable-region--\n\n--fcc-editable-region--\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        }
      ],
      "testCode": "You should have a `script` element.\n\n```js\nassert.isAtLeast(document.querySelectorAll('script').length, 1);\n```\n\nYour `script` element should have an opening tag.\n\n```js\nassert.match(code, /<script\\s*>/i);\n```\n\nYour `script` element should have a closing tag.\n\n```js\nassert.match(code, /<\\/script\\s*>/i);\n```"
    },
    {
      "title": "Step 3",
      "description": "One of the most powerful tools is your developer console. Depending on your browser, this might be opened by pressing `F12` or `Ctrl+Shift+I`. On Mac, you can press `Option + ⌘ + C` and select \"Console\". You can also click the \"Console\" button above the preview window to see our built-in console. \n\nThe developer console will include errors that are produced by your code, but you can also use it to see values of variables in your code, which is helpful for debugging.\n\nAdd a `console.log(\"Hello World\");` line between your `script` tags. Then click the \"Console\" button to open the console. You should see the text `\"Hello World\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n--fcc-editable-region--\n    <script>\n\n    </script>\n--fcc-editable-region--\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        }
      ],
      "testCode": "You should add a `console.log(\"Hello World\");` line to your code. \n\n```js\nassert.match(code, /console\\.log\\(\\s*('|\")Hello World\\1\\s*\\)\\s*;?/);\n```\n\nYour `console.log(\"Hello World\");` line should be between your `script` tags.\n\n```js\nassert.match(code, /<script\\s*>\\s*console\\.log\\(\\s*('|\")Hello World\\1\\s*\\)\\s*;?\\s*<\\/script>/);\n```"
    },
    {
      "title": "Step 4",
      "description": "Before you start writing your project code, you should move it to its own file to keep things organized. \n\nRemove your `console.log(\"Hello World\");` line. Then give your now empty `script` element a `src` attribute set to `./script.js`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n--fcc-editable-region--\n    <script>\n      console.log(\"Hello World\");\n    </script>\n--fcc-editable-region--\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        }
      ],
      "testCode": "You should not have a `console.log(\"Hello World\");` line in your code.\n\n```js\nassert.notMatch(code, /console\\.log\\(\\s*('|\")Hello World\\1\\s*\\)\\s*;/);\n```\n\nYour `script` element should have a `src` attribute set to `./script.js`.\n\n```js\nconst script = document.querySelector(\"script[data-src$='script.js']\");\nassert.exists(script);\n```"
    },
    {
      "title": "Step 5",
      "description": "Your view has been switched to your new `script.js` file. Remember that you can use the tabs above to switch between files.\n\nAdd your `console.log(\"Hello World\");` line to this file, and see it appear in your console.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should have a `console.log(\"Hello World\");` line in your code.\n\n```js\nassert.match(code, /console\\.log\\(\\s*('|\")Hello World\\1\\s*\\)\\s*;/);\n```"
    },
    {
      "title": "Step 6",
      "description": "Remove your `console.log(\"Hello World\");` line to begin writing your project code.\n\nIn the previous project, you learned how to work with variables and the `let` keyword like this:\n\n```js\nlet camperbot;\n```\n\nYou also learned how to initialize a variable with a value like this:\n\n```js\nlet age = 32;\n```\n\nUse the `let` keyword to declare a variable called `xp` and assign it the value of `0`, a number.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\nconsole.log(\"Hello World\");\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should not have a `console.log(\"Hello World\");` line in your code.\n\n```js\nassert.notMatch(code, /console\\.log\\(\\s*('|\")Hello World\\1\\s*\\)\\s*;/);\n```\n\nYou should use the `let` keyword to declare your variable.\n\n```js\nassert.match(code, /let/);\n```\n\nYou should declare a variable named `xp`.\n\n```js\nassert.match(code, /let\\s+xp/);\n```\n\n`xp` should have a value of `0`.\n\n```js\nassert.equal(xp, 0);\n```\n\nYou should initialize the `xp` variable to `0`. \n\n```js\nassert.match(code, /let\\s+xp\\s*=\\s*0\\s*;?/)\n```"
    },
    {
      "title": "Step 7",
      "description": "Initialize another variable called `health` with a value of `100`, and a variable called `gold` with a value of `50`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\nlet xp = 0;\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `let` to declare a variable called `health`.\n\n```js\nassert.match(code, /let\\s+health/);\n```\n\nYou should initialize a variable called `health` with a value of `100`.\n\n```js\nassert.match(code, /let\\s+health\\s*=\\s*100/);\n```\n\nYou should use `let` to declare a variable called `gold`.\n\n```js\nassert.match(code, /let\\s+gold/);\n```\n\nYou should initialize a variable called `gold` with a value of `50`.\n\n```js\nassert.match(code, /let\\s+gold\\s*=\\s*50/);\n```\n\n`health` should have a value of `100`.\n\n```js\nassert.equal(health, 100);\n```\n\n`gold` should have a value of `50`.\n\n```js\nassert.equal(gold, 50);\n```\n\n`xp` should still have a value of `0`.\n\n```js\nassert.equal(xp, 0);\n```"
    },
    {
      "title": "Step 8",
      "description": "Create another variable called `currentWeaponIndex` and set it to `0`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `let` to declare a variable called `currentWeaponIndex`.\n\n```js\nassert.match(code, /let\\s+currentWeaponIndex/i);\n```\n\nYou should use camelCase to name your variable.\n\n```js\nassert.match(code, /currentWeaponIndex/);\n```\n\nYour `currentWeaponIndex` variable should be set to `0`.\n\n```js\nassert.equal(currentWeaponIndex, 0);\n```\n\nYou should initialize your variable to `0`.\n\n```js\nassert.match(code, /let\\s+currentWeaponIndex\\s*=\\s*0/);\n```"
    },
    {
      "title": "Step 9",
      "description": "Declare a variable called `fighting` but do not initialize it with a value.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `let` to declare a variable `fighting`.\n\n```js\nassert.match(code, /let\\s+fighting/);\n```\n\nYour `fighting` variable should not have a value.\n\n```js\nassert.isUndefined(fighting);\n```\n\nYou should not assign a value to your `fighting` variable. \n\n```js\nassert.match(code, /let\\s+fighting\\s*;?/);\n```"
    },
    {
      "title": "Step 10",
      "description": "Declare two more variables named `monsterHealth` and `inventory`.\n\nFor your `inventory` variable, assign it the value of an array containing the string `\"stick\"`.\n\nRemember that you worked with arrays in the previous project like this:\n\n```js\nlet exampleArray = [\"first\", \"second\", \"third\"];\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `let` to declare your `monsterHealth` variable.\n\n```js\nassert.match(code, /let\\s+monsterHealth/i);\n```\n\nYou should use camelCase to name your `monsterHealth` variable.\n\n```js\nassert.match(code, /monsterHealth/);\n```\n\n`monsterHealth` should not have a value.\n\n```js\nassert.isUndefined(monsterHealth);\n```\n\nYou should not assign a value to your `monsterHealth` variable.\n\n```js\nassert.match(code, /let\\s+monsterHealth\\s*;?/);\n```\n\nYou should use `let` to declare your `inventory` variable.\n\n```js\nassert.match(code, /let\\s+inventory/i);\n```\n\nYour `inventory` variable should still be an array.\n\n```js\nassert.isArray(inventory);\n```\n\nYour `inventory` variable should only have one value.\n\n```js\nassert.lengthOf(inventory, 1);\n```\n\nYour `inventory` variable should include the string `\"stick\"`.\n\n```js\nassert.include(inventory, \"stick\");\n```"
    },
    {
      "title": "Step 15",
      "description": "JavaScript interacts with the HTML using the <dfn>Document Object Model</dfn>, or DOM. The DOM is a tree of objects that represents the HTML. You can access the HTML using the `document` object, which represents your entire HTML document.\n\nOne method for finding specific elements in your HTML is using the `querySelector()` method. The `querySelector()` method takes a CSS selector as an argument and returns the first element that matches that selector. For example, to find the `<h1>` element in your HTML, you would write:\n\n```js\nlet h1 = document.querySelector(\"h1\");\n```\n\nNote that `h1` is a string and matches the CSS selector you would use.\n\nCreate a `button1` variable and use `querySelector()` to assign it your element with the `id` of `button1`. Remember that CSS `id` selectors are prefixed with a `#`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\"></div>\n      <div id=\"text\"></div>\n    </div>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `let` to declare a `button1` variable.\n\n```js\nassert.match(code, /let\\s+button1/);\n```\n\nYou should use `document.querySelector()`.\n\n```js\nassert.match(code, /document\\.querySelector/);\n```\n\nYou should use the `\"#button1\"` selector.\n\n```js\nassert.match(code, /querySelector\\(\\s*('|\")#button1\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 17",
      "description": "`button1` is a variable that is not going to be reassigned. If you are not going to assign a new value to a variable, it is best practice to use the `const` keyword to declare it instead of the `let` keyword. This will tell JavaScript to throw an error if you accidentally reassign it.\n\nChange your `button1` variable to be declared with the `const` keyword.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\"></div>\n      <div id=\"text\"></div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\n--fcc-editable-region--\nlet button1 = document.querySelector(\"#button1\");\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `button1` variable should be declared with `const`.\n\n```js\nassert.match(code, /const\\s+button1/);\n```\n\nYour `button1` variable should still have the value of your `#button1` element.\n\n```js\nassert.deepEqual(button1, document.querySelector(\"#button1\"));\n```"
    },
    {
      "title": "Step 29",
      "description": "Just like you did with the buttons, create variables for the following `id`s and use `querySelector()` to give them the element as a value:\n\n`text`, `xpText`, `healthText`, `goldText`, `monsterStats`, and `monsterName`.\n\nRemember to declare these with the `const` keyword, and name the variables to match the `id`s.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\n--fcc-editable-region--\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare a `text` variable with `const`.\n\n```js\nassert.match(code, /const\\s+text/);\n```\n\nYour `text` variable should have the value of your `#text` element.\n\n```js\nassert.match(code, /const\\s+text\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#text\\1\\s*\\)\\s*/);\n```\n\nYou should declare a `xpText` variable with `const`.\n\n```js\nassert.match(code, /const\\s+xpText/);\n```\n\nYour `xpText` variable should have the value of your `#xpText` element.\n\n```js\nassert.match(code, /const\\s+xpText\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#xpText\\1\\s*\\)\\s*/);\n```\n\nYou should declare a `healthText` variable with `const`.\n\n```js\nassert.match(code, /const\\s+healthText/);\n```\n\nYour `healthText` variable should have the value of your `#healthText` element.\n\n```js\nassert.match(code, /const\\s+healthText\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#healthText\\1\\s*\\)\\s*/);\n```\n\nYou should declare a `goldText` variable with `const`.\n\n```js\nassert.match(code, /const\\s+goldText/);\n```\n\nYour `goldText` variable should have the value of your `#goldText` element.\n\n```js\nassert.match(code, /const\\s+goldText\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#goldText\\1\\s*\\)\\s*/);\n```\n\nYou should declare a `monsterStats` variable with `const`.\n\n```js\nassert.match(code, /const\\s+monsterStats/);\n```\n\nYour `monsterStats` variable should have the value of your `#monsterStats` element.\n\n```js\nassert.match(code, /const\\s+monsterStats\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#monsterStats\\1\\s*\\)\\s*/);\n```\n\nYou should declare a `monsterName` variable with `const`.\n\n```js\nassert.match(code, /const\\s+monsterName/);\n```\n\nYour `monsterName` variable should have the value of your `#monsterName` element.\n\n```js\nassert.match(code, /const\\s+monsterName\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#monsterName\\1\\s*\\)\\s*/);\n```"
    },
    {
      "title": "Step 35",
      "description": "In the previous project, you learned how to work with single line and multi-line comments like this:\n\n```js\n// I am a single-line comment\n\n/*\n  I am a multi-line comment\n*/\n```\n\nAdd a single-line comment that says `initialize buttons`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>     \n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n--fcc-editable-region--\n\n--fcc-editable-region--\nfunction goStore() {\n  console.log(\"Going to store.\");\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should use the `//` symbol to start a single-line comment.\n\n```js\nassert.match(code, /\\/\\//);\n```\n\nYour comment should have the text `initialize buttons`.\n\n```js\nassert.match(code, /\\/\\/\\s*initialize buttons/);\n```"
    },
    {
      "title": "Step 36",
      "description": "`button1` represents your first `button` element. These elements have a special property called `onclick`, which you can use to determine what happens when someone clicks that button.\n\nYou can access properties in JavaScript a couple of different ways. The first is with <dfn>dot notation</dfn>. Here is an example of using dot notation to set the `onclick` property of a button to a function reference.\n\n```js\nbutton.onclick = myFunction;\n```\n\nIn this example, `button` is the button element, and `myFunction` is a reference to a function. When the button is clicked, `myFunction` will be called.\n\nUse dot notation to set the `onclick` property of your `button1` to the function reference of `goStore`. Note that `button1` is already declared, so you don't need to use `let` or `const`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n--fcc-editable-region--\n// initialize buttons\n\n--fcc-editable-region--\nfunction goStore() {\n  console.log(\"Going to store.\");\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `onclick` property of `button1`.\n\n```js\nassert.match(code, /button1\\.onclick/);\n```\n\nYou should not use `let` or `const`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button1\\.onclick/);\n```\n\nYou should assign the `goStore` function reference to `button1.onclick`. Make sure not to call the function.\n\n```js\nassert.match(code, /button1\\.onclick\\s*=\\s*goStore\\s*;?\\s*$/m);\n```"
    },
    {
      "title": "Step 37",
      "description": "Using the same syntax, set the `onclick` properties of `button2` and `button3` to `goCave` and `fightDragon` respectively.\n\nOnce you have done that, open your console and try clicking the buttons on your project.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n--fcc-editable-region--\n// initialize buttons\nbutton1.onclick = goStore;\n\n--fcc-editable-region--\nfunction goStore() {\n  console.log(\"Going to store.\");\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should assign the `goStore` function reference to `button1.onclick`. Make sure not to call the function.\n\n```js\nassert.match(code, /button1\\.onclick\\s*=\\s*goStore\\s*;?\\s*$/m);\n```\n\nYou should use dot notation to access the `onclick` property of `button2`.\n\n```js\nassert.match(code, /button2\\.onclick/);\n```\n\nYou should not use `let` or `const` to assign `button2.onclick`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button2\\.onclick/);\n```\n\nYou should assign the `goCave` function reference to `button2.onclick`. Make sure not to call the function.\n\n```js\nassert.match(code, /button2\\.onclick\\s*=\\s*goCave\\s*;?\\s*$/m);\n```\n\nYou should use dot notation to access the `onclick` property of `button3`.\n\n```js\nassert.match(code, /button3\\.onclick/);\n```\n\nYou should not use `let` or `const` to assign `button3.onclick`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button3\\.onclick/);\n```\n\nYou should assign the `fightDragon` function reference to `button3.onclick`. Make sure not to call the function.\n\n```js\nassert.match(code, /button3\\.onclick\\s*=\\s*fightDragon\\s*;?\\s*$/m);\n```"
    },
    {
      "title": "Step 31",
      "description": "In the previous project, you learned how to create a function like this:\n\n```js\nfunction functionName() {\n\n}\n``` \n\nCreate an empty function named `goStore`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare `goStore` with the `function` keyword.\n\n```js\nassert.match(code, /function\\s+goStore()/);\n```\n\n`goStore` should be defined.\n\n```js\nassert.isDefined(goStore);\n```\n\n`goStore` should be a function.\n\n```js\nassert.isFunction(goStore);\n```\n\n`goStore` should be an empty function.\n\n```js\nassert.equal(goStore.toString(), \"function goStore() {}\");\n```"
    },
    {
      "title": "Step 32",
      "description": "For now, make your `goStore` function output the message `\"Going to store.\"` to the console.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n--fcc-editable-region--\nfunction goStore() {\n\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should have a `console.log(\"Going to store.\");` line in your code. \n\n```js\nassert.match(code, /console\\.log\\(\\s*('|\")Going to store\\.\\1\\s*\\)\\s*;?/);\n```\n\nYour `console.log(\"Going to store.\");` line should be in your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /console\\.log\\(\\s*('|\")Going to store\\.\\1\\s*\\)\\s*;?/);\n```"
    },
    {
      "title": "Step 33",
      "description": "Now create a `goCave` function that prints `\"Going to cave.\"` to the console.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\nfunction goStore() {\n  console.log(\"Going to store.\");\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `goCave`.\n\n```js\nassert.match(code, /function\\s+goCave/);\n```\n\n`goCave` should be a function.\n\n```js\nassert.isFunction(goCave);\n```\n\nYou should have a `console.log(\"Going to cave.\");` line in your code.\n\n```js\nassert.match(code, /console\\.log\\(\\s*('|\")Going to cave\\.\\1\\s*\\)/);\n```\n\nYour `console.log(\"Going to cave.\");` line should be inside your `goCave` function.\n\n```js\nassert.match(goCave.toString(), /console\\.log\\(\\s*('|\")Going to cave\\.\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 34",
      "description": "Now create a `fightDragon` function that prints `\"Fighting dragon.\"` to the console.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\nfunction goStore() {\n  console.log(\"Going to store.\");\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `fightDragon`.\n\n```js\nassert.match(code, /function\\s+fightDragon/);\n```\n\n`fightDragon` should be a function.\n\n```js\nassert.isFunction(fightDragon);\n```\n\nYou should have a `console.log(\"Fighting dragon.\");` line in your code.\n\n```js\nassert.match(code, /console\\.log\\(\\s*('|\")Fighting dragon\\.\\1\\s*\\)/);\n```\n\nYour `console.log(\"Fighting dragon.\");` line should be inside your `fightDragon` function.\n\n```js\nassert.match(fightDragon.toString(), /console\\.log\\(\\s*('|\")Fighting dragon\\.\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 38",
      "description": "The `innerText` property controls the text that appears in an HTML element. For example:\n\n```html\n<p id=\"info\">Demo content</p> \n```\n\n```js\nconst info = document.querySelector(\"#info\"); \ninfo.innerText = \"Hello World\"; \n```\n\nThe example above would change the text of the `p` element from `Demo content` to `Hello World`.\n\nWhen a player clicks your `Go to store` button, you want to change the buttons and text. Remove the code inside the `goStore` function and add a line that updates the text of `button1` to say `\"Buy 10 health (10 gold)\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction goStore() {\n  console.log(\"Going to store.\");\n}\n--fcc-editable-region--\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should not have a `console.log(\"Going to store.\");` line in your code.\n\n```js\nassert.notMatch(code, /console\\.log\\(\\s*('|\")Going to store\\.\\1\\s*\\)/);\n```\n\nYou should use dot notation to access the `innerText` property of `button1`.\n\n```js\nassert.match(code, /button1\\.innerText/);\n```\n\nYou should not use `let` or `const` to access the `innerText` property of `button1`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button1\\.innerText/);\n```\n\nYou should update the `innerText` property of `button1` to be `Buy 10 health (10 gold)`.\n\n```js\nassert.match(code, /button1\\.innerText\\s*=\\s*('|\")Buy 10 health \\(10 gold\\)\\1/);\n```\n\nYou should update the `innerText` property within your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /button1\\.innerText\\s*=\\s*('|\")Buy 10 health \\(10 gold\\)\\1/);\n```"
    },
    {
      "title": "Step 39",
      "description": "Now, add a line that updates the text of `button2` to say `\"Buy weapon (30 gold)\"` and update the text of `button3` to say `\"Go to town square\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n}\n--fcc-editable-region--\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `innerText` property of `button2`.\n\n```js\nassert.match(code, /button2\\.innerText/);\n```\n\nYou should not use `let` or `const` to access the `innerText` property of `button2`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button2\\.innerText/);\n```\n\nYou should update the `innerText` property of `button2` to be `\"Buy weapon (30 gold)\"`.\n\n```js\nassert.match(code, /button2\\.innerText\\s*=\\s*('|\")Buy weapon \\(30 gold\\)\\1/);\n```\n\nYou should update the `innerText` property within your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /button2\\.innerText\\s*=\\s*('|\")Buy weapon \\(30 gold\\)\\1/);\n```\n\nYou should use dot notation to access the `innerText` property of `button3`.\n\n```js\nassert.match(code, /button3\\.innerText/);\n```\n\nYou should not use `let` or `const` to access the `innerText` property of `button3`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button3\\.innerText/);\n```\n\nYou should update the `innerText` property of `button3` to be `\"Go to town square\"`.\n\n```js\nassert.match(code, /button3\\.innerText\\s*=\\s*('|\")Go to town square\\1/);\n```\n\nYou should update the `innerText` property within your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /button3\\.innerText\\s*=\\s*('|\")Go to town square\\1/);\n```"
    },
    {
      "title": "Step 40",
      "description": "You will also need to update the functions that run when the buttons are clicked again.\n\nIn your `goStore()` function, update the `onclick` property for each button to run `buyHealth`, `buyWeapon`, and `goTown`, respectively.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n}\n--fcc-editable-region--\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `onclick` property of `button1`.\n\n```js\nassert.match(goStore.toString(), /button1\\.onclick/);\n```\n\nYou should not use `let` or `const` to access the `onclick` property of `button1`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button1\\.onclick/);\n```\n\nYou should set the `onclick` property of `button1` to be `buyHealth`.\n\n```js\nassert.match(code, /button1\\.onclick\\s*=\\s*buyHealth/);\n```\n\nYou should set the `onclick` property of `button1` in your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /button1\\.onclick\\s*=\\s*buyHealth/);\n```\n\nYou should use dot notation to access the `onclick` property of `button2`.\n\n```js\nassert.match(goStore.toString(), /button2\\.onclick/);\n```\n\nYou should not use `let` or `const` to access the `onclick` property of `button2`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button2\\.onclick/);\n```\n\nYou should set the `onclick` property of `button2` to be `buyWeapon`.\n\n```js\nassert.match(code, /button2\\.onclick\\s*=\\s*buyWeapon/);\n```\n\nYou should set the `onclick` property of `button2` in your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /button2\\.onclick\\s*=\\s*buyWeapon/);\n```\n\nYou should use dot notation to access the `onclick` property of `button3`.\n\n```js\nassert.match(goStore.toString(), /button3\\.onclick/);\n```\n\nYou should not use `let` or `const` to access the `onclick` property of `button3`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+button3\\.onclick/);\n```\n\nYou should set the `onclick` property of `button3` to be `goTown`.\n\n```js\nassert.match(code, /button3\\.onclick\\s*=\\s*goTown/);\n```\n\nYou should set the `onclick` property of `button3` in your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /button3\\.onclick\\s*=\\s*goTown/);\n```"
    },
    {
      "title": "Step 41",
      "description": "Now you need to modify your display text. Change the `innerText` property of the `text` variable to be `\"You enter the store.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  \n}\n--fcc-editable-region--\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `innerText` property of `text`.\n\n```js\nassert.match(code, /text\\.innerText/);\n```\n\nYou should not use `let` or `const` to access the `innerText` property of `text`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+text\\.innerText/);\n```\n\nYou should update the `innerText` property of `text` to be `\"You enter the store.\"`.\n\n```js\nassert.match(code, /text\\.innerText\\s*=\\s*('|\")You enter the store.\\1/);\n```\n\nYou should update the `innerText` property within your `goStore` function.\n\n```js\nassert.match(goStore.toString(), /text\\.innerText\\s*=\\s*('|\")You enter the store.\\1/);\n```"
    },
    {
      "title": "Step 42",
      "description": "Create three new empty functions called `buyHealth`, `buyWeapon`, and `goTown`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare `buyHealth` with the `function` keyword.\n\n```js\nassert.match(code, /function\\s+buyHealth/);\n```\n\nYou should declare `buyWeapon` with the `function` keyword.\n\n```js\nassert.match(code, /function\\s+buyWeapon/);\n```\n\nYou should declare `goTown` with the `function` keyword.\n\n```js\nassert.match(code, /function\\s+goTown/);\n```\n\n`buyHealth` should be an empty function.\n\n```js\nassert.equal(buyHealth.toString(), 'function buyHealth() {}');\n```\n\n`buyWeapon` should be an empty function.\n\n```js\nassert.equal(buyWeapon.toString(), 'function buyWeapon() {}');\n```\n\n`goTown` should be an empty function.\n\n```js\nassert.equal(goTown.toString(), 'function goTown() {}');\n```"
    },
    {
      "title": "Step 43",
      "description": "Move your `goTown` function above your `goStore` function. Then copy and paste the contents of the `goStore` function into the `goTown` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n--fcc-editable-region--\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}\n\nfunction goTown() {\n\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `goTown` function should come before your `goStore` function.\n\n```js\nconst goTown = code.split(\" \").indexOf(\"goTown()\");\nconst goStore = code.split(\" \").indexOf(\"goStore()\");\nassert.isBelow(goTown, goStore);\n```\n\nYour `goTown` function should have the same contents as your `goStore` function.\n\n```js\nconst goTownString = goTown.toString().replace(\"goTown\", \"\");\nconst goStoreString = goStore.toString().replace(\"goStore\", \"\");\nassert.equal(goTownString, goStoreString);\n```"
    },
    {
      "title": "Step 44",
      "description": "In your `goTown` function, change your `button` elements' `innerText` properties to be `\"Go to store\"`, `\"Go to cave\"`, and `\"Fight dragon\"`. Update your `onclick` properties to be `goStore`, `goCave`, and `fightDragon`, respectively.\n\nFinally, update `innerText` property of your `text` to be `\"You are in the town square. You see a sign that says Store.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction goTown() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n--fcc-editable-region--\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should set the `button1.innerText` property to be `\"Go to store\"` in your `goTown` function.\n\n```js\nassert.match(goTown.toString(), /button1\\.innerText\\s*=\\s*('|\")Go to store\\1/);\n```\n\nYou should set the `button2.innerText` property to be `\"Go to cave\"` in your `goTown` function.\n\n```js\nassert.match(goTown.toString(), /button2\\.innerText\\s*=\\s*('|\")Go to cave\\1/);\n```\n\nYou should set the `button3.innerText` property to be `\"Fight dragon\"` in your `goTown` function.\n\n```js\nassert.match(goTown.toString(), /button3\\.innerText\\s*=\\s*('|\")Fight dragon\\1/);\n```\n\nYou should set the `button1.onclick` property to be `goStore` in your `goTown` function.\n\n```js\nassert.match(goTown.toString(), /button1\\.onclick\\s*=\\s*goStore/);\n```\n\nYou should set the `button2.onclick` property to be `goCave` in your `goTown` function.\n\n```js\nassert.match(goTown.toString(), /button2\\.onclick\\s*=\\s*goCave/);\n```\n\nYou should set the `button3.onclick` property to be `fightDragon` in your `goTown` function.\n\n```js\nassert.match(goTown.toString(), /button3\\.onclick\\s*=\\s*fightDragon/);\n```\n\nYou should set the `text.innerText` property to be `\"You are in the town square. You see a sign that says Store.\"` in your `goTown` function.\n\n```js\nassert.match(goTown.toString(), /text\\.innerText\\s*=\\s*('|\")You are in the town square. You see a sign that says Store\\.\\1/);\n```"
    },
    {
      "title": "Step 45",
      "description": "You need to wrap the text `Store` in double quotes. Because your string is already wrapped in double quotes, you'll need to escape the quotes around `Store`. You can escape them with a backslash `\\`.  Here is an example:\n\n```js\nconst escapedString = \"Naomi likes to play \\\"Zelda\\\" sometimes.\";\n```\n\nWrap the text `Store` in double quotes within your `text.innerText` line.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says Store.\";\n}\n--fcc-editable-region--\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should wrap the text `Store` in double quotes.\n\n```js\nassert.match(goTown.toString(), /text\\.innerText\\s*=\\s*\"You are in the town square. You see a sign that says \\\\\"Store\\\\\".\"/);\n```"
    },
    {
      "title": "Step 46",
      "description": "You have repetition in the `goTown` and `goStore` functions. Repetition in your code is a sign that you need another function.\n\nIn the previous project, you learned how to work with function parameters like this:\n\n```js\nfunction myFunction(param) {\n  console.log(param);\n}\n```\n\nFunction parameters act as placeholders for values that you pass to the function when you call it.\n\nCreate an empty `update` function that takes a parameter called `location`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `update`.\n\n```js\nassert.match(code, /function\\s+update/);\n```\n\nYour `update` function should take a parameter called `location`.\n\n```js\nassert.match(update.toString(), /update\\(\\s*location\\s*\\)/);\n```\n\nYour `update` function should be empty.\n\n```js\nassert.equal(update.toString(), function update(location) {});\n```"
    },
    {
      "title": "Step 47",
      "description": "In your role playing game, you will be able to visit different locations like the **store**, the **cave**, and the **town square**. You will need to create a data structure that will hold the different locations. \n\nUse `const` to create a variable called `locations` and assign it an empty array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\n\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should use `const` to declare `locations`.\n\n```js\nassert.match(code, /const\\s+locations/);\n```\n\n`locations` should be an array.\n\n\n```js\nassert.isArray(locations);\n```\n\n`locations` should be empty.\n\n```js\nassert.equal(locations.length, 0);\n```"
    },
    {
      "title": "Step 54",
      "description": "Your `locations` array will hold different locations like the **store**, the **cave**, and the **town square**. Each location will be represented as an object.\n\nInside your `locations` array, add an object. Inside that object add a key called `name` with a value of `\"town square\"`.\n\nRemember to follow this syntax:\n\n```js\n{\n  key: value\n}\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\nconst locations = [\n  \n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your first value of `locations` should be an object.\n\n```js\nassert.isObject(locations[0]);\n```\n\nYour first value of `locations` should have a `name` property.\n\n```js\nassert.isDefined(locations[0].name);\n```\n\nYour first value of `locations` should have a `name` property with a value of `\"town square\"`.\n\n```js\nassert.equal(locations[0].name, \"town square\");\n```"
    },
    {
      "title": "Step 55",
      "description": "Just like array values, object properties are separated by a comma. Add a comma after your `name` property and add a `button text` property with the value of an empty array. \n\nSince the property name has a space in it, you will need to surround it with quotes.\n\n```js\n{\n  name: \"Naomi\",\n  \"favorite color\": \"purple\"\n}\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\"\n  }\n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your first `locations` value should be an object.\n\n```js\nassert.isObject(locations[0]);\n```\n\nYour first `locations` value should have a `button text` property.\n\n```js\nassert.isDefined(locations[0][\"button text\"]);\n```\n\nYour first `locations` value should have a `button text` property with a value that is an array.\n\n```js\nassert.isArray(locations[0][\"button text\"]);\n```\n\nYour first `locations` value should have a `button text` property with a value that is an empty array.\n\n```js\nassert.equal(locations[0][\"button text\"].length, 0);\n```\n\nYou should not remove or change the `name` property.\n\n```js\nassert.equal(locations[0].name, \"town square\");\n```"
    },
    {
      "title": "Step 56",
      "description": "Give your empty `button text` array three string elements. Use the three strings being assigned to the button `innerText` properties in the `goTown` function. Remember that array values are separated by commas.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": []\n  }\n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your `button text` array should have three elements.\n\n```js\nassert.lengthOf(locations[0][\"button text\"], 3);\n```\n\nYour `button text` array should have three strings.\n\n```js\nassert.isString(locations[0][\"button text\"][0]);\nassert.isString(locations[0][\"button text\"][1]);\nassert.isString(locations[0][\"button text\"][2]);\n```\n\nThe first value in the `button text` array should be `\"Go to store\"`.\n\n```js\nassert.equal(locations[0][\"button text\"][0], \"Go to store\");\n```\n\nThe second value in the `button text` array should be `\"Go to cave\"`.\n\n```js\nassert.equal(locations[0][\"button text\"][1], \"Go to cave\");\n```\n\nThe third value in the `button text` array should be `\"Fight dragon\"`.\n\n```js\nassert.equal(locations[0][\"button text\"][2], \"Fight dragon\");\n```"
    },
    {
      "title": "Step 57",
      "description": "Create another property in your object called `button functions`. Give this property an array containing the three functions assigned to the `onclick` properties in the `goTown` function. Remember that these functions are variables, not strings, and should not be wrapped in quotes.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"]\n  }\n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your first `locations` object should have a `button functions` property.\n\n```js\nassert.isDefined(locations[0][\"button functions\"]);\n```\n\nYour `button functions` property should be an array.\n\n```js\nassert.isArray(locations[0][\"button functions\"]);\n```\n\nYour `button functions` property should have three values in it.\n\n```js\nassert.lengthOf(locations[0][\"button functions\"], 3);\n```\n\nYour first `button functions` array value should be the function `goStore`.\n\n```js\nassert.equal(locations[0][\"button functions\"][0], goStore);\n```\n\nYour second `button functions` array value should be the function `goCave`.\n\n```js\nassert.equal(locations[0][\"button functions\"][1], goCave);\n```\n\nYour third `button functions` array value should be the function `fightDragon`.\n\n```js\nassert.equal(locations[0][\"button functions\"][2], fightDragon);\n```"
    },
    {
      "title": "Step 58",
      "description": "Add one final property to the object named `text`. Give this property the same string value as the one assigned to `text.innerText` in the `goTown` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon]\n  }\n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your first `locations` value should have a `text` property.\n\n```js\nassert.isDefined(locations[0][\"text\"]);\n```\n\nYour `text` property should be a string.\n\n```js\nassert.isString(locations[0][\"text\"]);\n```\n\nYour `text` property should have the value `\"You are in the town square. You see a sign that says \\\"Store\\\".\"`\n\n```js\nassert.equal(locations[0][\"text\"], \"You are in the town square. You see a sign that says \\\"Store\\\".\");\n```"
    },
    {
      "title": "Step 59",
      "description": "Add a second object to your `locations` array (remember to separate them with a comma). Following the pattern you used in the first object, create the same properties but use the values from the `goStore` function. Set the `name` property to `store`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  }\n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your `locations` array should have two values.\n\n```js\nassert.lengthOf(locations, 2);\n```\n\nBoth `locations` values should be objects.\n\n\n```js\nassert.isObject(locations[0]);\nassert.isObject(locations[1]);\n```\n\nYour second `locations` object should have a `name` property with the value of `store`.\n\n```js\nassert.equal(locations[1].name, \"store\");\n```\n\nYour second `locations` object should have a `button text` property which is an array.\n\n```js\nassert.isArray(locations[1][\"button text\"]);\n```\n\nYour `button text` property should have the string values `\"Buy 10 health (10 gold)\"`, `\"Buy weapon (30 gold)\"`, and `\"Go to town square\"`.\n\n```js\nassert.equal(locations[1][\"button text\"][0], \"Buy 10 health (10 gold)\");\nassert.equal(locations[1][\"button text\"][1], \"Buy weapon (30 gold)\");\nassert.equal(locations[1][\"button text\"][2], \"Go to town square\");\n```\n\nYour second `locations` object should have a `button functions` property which is an array.\n\n```js\nassert.isArray(locations[1][\"button functions\"]);\n```\n\nYour `button functions` property should have the function values `buyHealth`, `buyWeapon`, and `goTown`.\n\n```js\nassert.equal(locations[1][\"button functions\"][0], buyHealth);\nassert.equal(locations[1][\"button functions\"][1], buyWeapon);\nassert.equal(locations[1][\"button functions\"][2], goTown);\n```\n\nYour second `locations` object should have a `text` property which is a string.\n\n```js\nassert.isString(locations[1].text);\n```\n\nYour second `locations` object should have a `text` property with the value of `\"You enter the store.\"`.\n\n```js\nassert.equal(locations[1].text, \"You enter the store.\");\n```\n\nYou should not modify the first `locations` object.\n\n```js\nassert.deepEqual(locations[0], {\n  name: \"town square\",\n  \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n  \"button functions\": [goStore, goCave, fightDragon],\n  text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n});\n```"
    },
    {
      "title": "Step 60",
      "description": "Now you can consolidate some of your code. Start by copying the code from inside the `goTown` function and paste it into your `update` function. Then, remove all the code from inside the `goTown` and `goStore` functions.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n--fcc-editable-region--\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your `update` function should set `button1.innerText` to `\"Go to store\"`.\n\n```js\nassert.match(update.toString(), /button1\\.innerText\\s*=\\s*('|\")Go to store\\1/);\n```\n\nYour `update` function should set `button2.innerText` to `\"Go to cave\"`.\n\n```js\nassert.match(update.toString(), /button2\\.innerText\\s*=\\s*('|\")Go to cave\\1/);\n```\n\nYour `update` function should set `button3.innerText` to `\"Fight dragon\"`.\n\n```js\nassert.match(update.toString(), /button3\\.innerText\\s*=\\s*('|\")Fight dragon\\1/);\n```\n\nYour `update` function should set `button1.onclick` to `goStore`.\n\n```js\nassert.match(update.toString(), /button1\\.onclick\\s*=\\s*goStore/);\n```\n\nYour `update` function should set `button2.onclick` to `goCave`.\n\n```js\nassert.match(update.toString(), /button2\\.onclick\\s*=\\s*goCave/);\n```\n\nYour `update` function should set `button3.onclick` to `fightDragon`.\n\n```js\nassert.match(update.toString(), /button3\\.onclick\\s*=\\s*fightDragon/);\n```\n\nYour `update` function should set `text.innerText` to `\"You are in the town square. You see a sign that says \\\"Store\\\".\"`.\n\n```js\nassert.match(update.toString(), /text\\.innerText\\s*=\\s*\"You are in the town square. You see a sign that says \\\\\"Store\\\\\"\\.\"/);\n```\n\nYour `goTown` function should be empty.\n\n```js\nassert.match(goTown.toString(), /function goTown\\(\\s*\\) \\{\\}/);\n```\n\nYour `goStore` function should be empty.\n\n```js\nassert.match(goStore.toString(), /function goStore\\(\\s*\\) \\{\\}/);\n```"
    },
    {
      "title": "Step 61",
      "description": "Instead of assigning the `innerText` and `onclick` properties to specific strings and functions, the `update` function will use data from the `location` that is passed into it. First, that data needs to be passed.\n\nInside the `goTown` function, call the `update` function. Here is an example of calling a function named `myFunction`:\n\n```js\nmyFunction();\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\n--fcc-editable-region--\nfunction goTown() {\n\n}\n--fcc-editable-region--\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should call the `update` function in the `goTown` function.\n\n```js\nassert.match(goTown.toString(), /update\\(\\s*\\)/);\n```\n\nDon't forget your ending semicolon.\n\n```js\nassert.match(goTown.toString(), /update\\(\\s*\\)\\s*;/);\n```"
    },
    {
      "title": "Step 62",
      "description": "Now it is time to use your `update` function. Pass in your `locations` array into the `update` function call.\n\nYou pass arguments by including them within the parentheses of the function call. For example, calling `myFunction` with an `arg` argument would look like:\n\n```js\nmyFunction(arg)\n```\n\nPass your `locations` array into the `update` call.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\n--fcc-editable-region--\nfunction goTown() {\n  update();\n}\n--fcc-editable-region--\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should pass the `locations` array into the `update` call.\n\n```js\nassert.match(goTown.toString(), /update\\(\\s*locations\\s*\\)\\s*;?/);\n```"
    },
    {
      "title": "Step 63",
      "description": "The `locations` array contains two locations: the `\"town square\"` and the `\"store\"`. Currently you are passing that entire array into the `update` function.\n\nPass in only the first element of the `locations` array by adding `[0]` at the end of the variable. For example: `myFunction(arg[0]);`.\n\nThis is called <dfn>bracket notation</dfn>. Values in an array are accessed by index. Indices are numerical values and start at `0` - this is called zero-based indexing. `arg[0]` would be the first element in the `arg` array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\n--fcc-editable-region--\nfunction goTown() {\n  update(locations);\n}\n--fcc-editable-region--\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should use bracket notation with `locations`.\n\n```js\nassert.match(code, /locations\\s*\\[/);\n```\n\nYou should access the first object in the `locations` array. Remember that arrays are zero-based.\n\n```js\nassert.match(code, /locations\\s*\\[\\s*0\\s*\\]/);\n```\n\nYou should pass the first object in the `locations` array into the `update` function.\n\n```js\nassert.match(code, /update\\(\\s*locations\\s*\\[\\s*0\\s*\\]\\s*\\)\\s*;?/);\n```\n\nThis call should still be in your `goTown()` function.\n\n```js\nassert.match(goTown.toString(), /update\\(\\s*locations\\s*\\[\\s*0\\s*\\]\\s*\\)\\s*;?/);\n```"
    },
    {
      "title": "Step 64",
      "description": "Now your `update` function needs to use the argument you pass into it.\n\nInside the `update` function, change the value of the `button1.innerText` assignment to be `location[\"button text\"]`. That way, you use bracket notation to get the `\"button text\"` property of the `location` object passed into the function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction update(location) {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n--fcc-editable-region--\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your `update` function should use bracket notation to get the `\"button text\"` property of the `location` object passed into the function.\n\n```js\nassert.match(update.toString(), /location\\[('|\")button text\\1\\]/);\n```\n\nYou should assign the value of the `\"button text\"` property of the `location` object to the `innerText` property of `button1`.\n\n```js\nassert.match(update.toString(), /button1\\.innerText\\s*=\\s*location\\s*\\[\\s*('|\")button text\\1\\s*\\]/);\n```"
    },
    {
      "title": "Step 65",
      "description": "`location[\"button text\"]` is an array with three elements. Change the `button1.innerText` assignment to be `location[\"button text\"][0]` which represents the first element of the array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction update(location) {\n  button1.innerText = location[\"button text\"];\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n--fcc-editable-region--\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should access the first element of the `\"button text\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /location\\s*\\[\\s*('|\")button text\\1\\s*\\]\\s*\\[\\s*0\\s*\\]/);\n```\n\nYou should set the `button1.innerText` property to be the first element of the `\"button text\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /button1\\.innerText\\s*=\\s*location\\s*\\[\\s*('|\")button text\\1\\s*\\]\\s*\\[\\s*0\\s*\\]/);\n```"
    },
    {
      "title": "Step 66",
      "description": "Now update `button2.innerText` and `button3.innerText` to be assigned the second and third values of the `\"button text\"` array, respectively.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the  town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n--fcc-editable-region--\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should access the second element of the `\"button text\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /location\\s*\\[\\s*('|\")button text\\1\\s*\\]\\s*\\[\\s*1\\s*\\]/);\n```\n\nYou should set the `button2.innerText` property to be the second element of the `\"button text\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /button2\\.innerText\\s*=\\s*location\\s*\\[\\s*('|\")button text\\1\\s*\\]\\s*\\[\\s*1\\s*\\]/);\n```\n\nYou should access the third element of the `\"button text\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /location\\s*\\[\\s*('|\")button text\\1\\s*\\]\\s*\\[\\s*2\\s*\\]/);\n```\n\nYou should set the `button3.innerText` property to be the third element of the `\"button text\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /button3\\.innerText\\s*=\\s*location\\s*\\[\\s*('|\")button text\\1\\s*\\]\\s*\\[\\s*2\\s*\\]/);\n```"
    },
    {
      "title": "Step 67",
      "description": "Following the same pattern as you did for the button text, update the three buttons' `onclick` assignments to be the first, second, and third values of the `\"button functions\"` array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store.\\\"\";\n}\n--fcc-editable-region--\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should access the first element of the `\"button functions\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /location\\s*\\[\\s*('|\")button functions\\1\\s*\\]\\s*\\[\\s*0\\s*\\]/);\n```\n\nYou should set the `button1.onclick` property to be the first element of the `\"button functions\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /button1\\.onclick\\s*=\\s*location\\s*\\[\\s*('|\")button functions\\1\\s*\\]\\s*\\[\\s*0\\s*\\]/);\n```\n\nYou should access the second element of the `\"button functions\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /location\\s*\\[\\s*('|\")button functions\\1\\s*\\]\\s*\\[\\s*1\\s*\\]/);\n```\n\nYou should set the `button2.onclick` property to be the second element of the `\"button functions\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /button2\\.onclick\\s*=\\s*location\\s*\\[\\s*('|\")button functions\\1\\s*\\]\\s*\\[\\s*1\\s*\\]/);\n```\n\nYou should access the third element of the `\"button functions\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /location\\s*\\[\\s*('|\")button functions\\1\\s*\\]\\s*\\[\\s*2\\s*\\]/);\n```\n\nYou should set the `button3.onclick` property to be the third element of the `\"button functions\"` property of the `location` parameter.\n\n```js\nassert.match(update.toString(), /button3\\.onclick\\s*=\\s*location\\s*\\[\\s*('|\")button functions\\1\\s*\\]\\s*\\[\\s*2\\s*\\]/);\n```"
    },
    {
      "title": "Step 68",
      "description": "Finally, update the `text.innerText` assignment to equal the `text` from the `location` object. However, instead of using bracket notation, use <dfn>dot notation</dfn>.\n\nHere is an example of accessing the `name` property of an object called `person`:\n\n```js\nperson.name\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n--fcc-editable-region--\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `text` property of the `location` object.\n\n```js\nassert.match(update.toString(), /location\\.text/);\n```\n\nYou should set the `text.innerText` property to be the `text` property of the `location` object.\n\n```js\nassert.match(update.toString(), /text\\.innerText\\s*=\\s*location\\.text/);\n```"
    },
    {
      "title": "Step 69",
      "description": "Now update your `goStore` function to call the `update` function. Pass the second element of the `locations` array as your argument.\n\nTo make sure your refactoring is correct, try clicking your first button again. You should see the same changes to your webpage that you saw earlier.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\n--fcc-editable-region--\nfunction goStore() {\n\n}\n--fcc-editable-region--\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your `goStore` function should call the `update` function.\n\n```js\nassert.match(goStore.toString(), /update\\(/);\n```\n\nYour `goStore` function should pass the second element of the `locations` array as your argument to `update()`.\n\n```js\nassert.match(goStore.toString(), /update\\(\\s*locations\\s*\\[\\s*1\\s*\\]\\s*\\)/);\n```"
    },
    {
      "title": "Step 70",
      "description": "Create two more empty functions named `fightSlime` and `fightBeast`. These functions will be used in your upcoming `cave` object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "`fightSlime` should be a function.\n\n```js\nassert.isFunction(fightSlime);\n```\n\n`fightBeast` should be a function.\n\n```js\nassert.isFunction(fightBeast);\n```\n\n`fightSlime` should be empty.\n\n```js\nassert.match(fightSlime.toString(), /function fightSlime\\(\\s*\\) \\{\\}/);\n```\n\n`fightBeast` should be empty.\n\n```js\nassert.match(fightBeast.toString(), /function fightBeast\\(\\s*\\) \\{\\}/);\n```"
    },
    {
      "title": "Step 71",
      "description": "Add a third object to the `locations` array. Give it the same properties as the other two objects.\n\nSet `name` to `cave`. Set `button text` to an array with the strings `\"Fight slime\"`, `\"Fight fanged beast\"`, and `\"Go to town square\"`. Set the `\"button functions\"` to an array with the variables `fightSlime`, `fightBeast`, and `goTown`. Set the `text` property to `\"You enter the cave. You see some monsters.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n--fcc-editable-region--\n\n--fcc-editable-region--\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should have three values in your `locations` array.\n\n```js\nassert.lengthOf(locations, 3);\n```\n\nYour third `locations` value should be an object.\n\n```js\nassert.isObject(locations[2]);\n```\n\nYour third `locations` object should have a `name` property with the value of `\"cave\"`.\n\n```js\nassert.equal(locations[2].name, \"cave\");\n```\n\nYour third `locations` object should have a `\"button text\"` property which is an array.\n\n```js\nassert.isArray(locations[2][\"button text\"]);\n```\n\nYour `\"button text\"` property should have the string values `\"Fight slime\"`, `\"Fight fanged beast\"`, and `\"Go to town square\"`.\n\n```js\nassert.equal(locations[2][\"button text\"][0], \"Fight slime\");\nassert.equal(locations[2][\"button text\"][1], \"Fight fanged beast\");\nassert.equal(locations[2][\"button text\"][2], \"Go to town square\");\n```\n\nYour third `locations` object should have a `\"button functions\"` property which is an array.\n\n```js\nassert.isArray(locations[2][\"button functions\"]);\n```\n\nYour `\"button functions\"` property should have the function values `fightSlime`, `fightBeast`, and `goTown`.\n\n```js\nassert.equal(locations[2][\"button functions\"][0], fightSlime);\nassert.equal(locations[2][\"button functions\"][1], fightBeast);\nassert.equal(locations[2][\"button functions\"][2], goTown);\n```\n\nYour third `locations` object should have a `text` property which is a string.\n\n```js\nassert.isString(locations[2].text);\n```\n\nYour third `locations` object should have a `text` property with the value of `\"You enter the cave. You see some monsters.\"`.\n\n```js\nassert.equal(locations[2].text, \"You enter the cave. You see some monsters.\");\n```"
    },
    {
      "title": "Step 72",
      "description": "Now that you have a `\"cave\"` location object, update your `goCave` function to call `update` and pass that new `\"cave\"` location. Remember that this is the third element in your `locations` array.\n\nDon't forget to remove your `console.log` call!",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\n--fcc-editable-region--\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n--fcc-editable-region--\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use bracket notation to access the third element in your `locations` array.\n\n```js\nassert.match(code, /locations\\s*\\[\\s*2\\s*\\]/);\n```\n\nYou should pass the third element in your `locations` array to `update`.\n\n```js\nassert.match(code, /update\\(\\s*locations\\s*\\[\\s*2\\s*\\]\\s*\\)/);\n```\n\nYou should call `update` with the third element in your `locations` array in your `goCave` function.\n\n```js\nassert.match(goCave.toString(), /update\\(\\s*locations\\s*\\[\\s*2\\s*\\]\\s*\\)/);\n```\n\nYou should not have the `console.log` statement in your `goCave` function.\n\n```js\nassert.notMatch(goCave.toString(), /console\\.log/);\n```"
    },
    {
      "title": "Step 73",
      "description": "Now that your `\"store\"` and `\"cave\"` locations are complete, you can code the actions the player takes at those locations. Inside the `buyHealth` function, set `gold` equal to `gold` minus `10`.\n\nFor example, here is how you would set `num` equal to `5` less than `num`: `num = num - 5;`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should subtract `10` from `gold`.\n\n```js\nassert.match(code, /gold\\s*=\\s*gold\\s*-\\s*10/);\n```\n\nYour `buyHealth` function should reduce `gold` by `10`.\n\n```js\ngold = 10;\nbuyHealth();\nassert.equal(gold, 0);\n```"
    },
    {
      "title": "Step 74",
      "description": "After the `gold` is updated, add a line to set `health` equal to `health` plus `10`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n  gold = gold - 10;\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should add `10` to `health`.\n\n```js\nassert.match(code, /health\\s*=\\s*health\\s*\\+\\s*10/);\n```\n\nYour `buyHealth` function should increase `health` by `10`.\n\n```js\nhealth = 10;\nbuyHealth();\nassert.equal(health, 20);\n```"
    },
    {
      "title": "Step 75",
      "description": "There is a shorthand way to add or subtract from a variable called <dfn>compound assignment</dfn>. For example, changing `num = num + 5` to compound assignment would look like `num += 5`.\n\nUpdate both lines inside your `buyHealth` function to use compound assignment.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n  gold = gold - 10;\n  health = health + 10;\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should change `gold` to use compound assignment.\n\n```js\nassert.notMatch(code, /gold\\s*=\\s*gold\\s*-\\s*10/);\n```\n\nYou should change `health` to use compound assignment.\n\n```js\nassert.notMatch(code, /health\\s*=\\s*health\\s*\\+\\s*10/);\n```\n\nYour `buyHealth` function should still update the values.\n\n```js\ngold = 10;\nhealth = 10;\nbuyHealth();\nassert.equal(gold, 0);\nassert.equal(health, 20);\n```"
    },
    {
      "title": "Step 76",
      "description": "Now that you are updating the `gold` and `health` variables, you need to display those new values on the game screen. You have retrieved the `healthText` and `goldText` elements in a prior step.\n\nAfter your assignment lines, assign the `innerText` property of `goldText` to be the variable `gold`. Use the same pattern to update `healthText` with the `health` variable.\n\nYou can test this by clicking your `\"Go to store\"` button, followed by your `\"Buy Health\"` button.\n\n**Note:** Your answer should only be two lines of code.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n  gold -= 10;\n  health += 10;\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `buyHealth` function should update the text of `healthText` to be the value of `health`.\n\n```js\nhealth = 10;\nbuyHealth();\nconst target = document.querySelector('#healthText');\nassert.equal(target.innerText, '20');\n```\n\nYour `buyHealth` function should update the text of `goldText` to be the value of `gold`.\n\n```js\ngold = 10;\nbuyHealth();\nconst target = document.querySelector('#goldText');\nassert.equal(target.innerText, '0');\n```"
    },
    {
      "title": "Step 77",
      "description": "What if the player doesn't have enough gold to buy health? You should use an `if` statement to check if the player has enough gold to buy health. \n\nIn the previous project, you learned how to work with `if` statements like this:\n\n```js\nconst num = 5;\nif (num >= 3) {\n  console.log(\"This code will run because num is greater than or equal to 3.\");\n}\n```\n\nStart by placing all of the code in your `buyHealth` function inside an `if` statement. For the `if` statement condition, check if `gold` is greater than or equal to `10`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n  gold -= 10;\n  health += 10;\n  goldText.innerText = gold;\n  healthText.innerText = health;\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `buyHealth` function should have an `if` statement.\n\n```js\nassert.match(buyHealth.toString(), /if/);\n```\n\nYour `if` statement should check if `gold` is greater than or equal to `10`.\n\n```js\nassert.match(buyHealth.toString(), /if\\s*\\(\\s*gold\\s*>=\\s*10\\s*\\)/);\n```\n\nAll of your `buyHealth` code should be inside the `if` statement.\n\n```js\nassert.match(buyHealth.toString(), /if\\s*\\(\\s*gold\\s*>=\\s*10\\s*\\)\\s*{\\s*gold\\s*-=\\s*10\\s*;?\\s*health\\s*\\+=\\s*10\\s*;?\\s*goldText\\.innerText\\s*=\\s*gold\\s*;?\\s*healthText\\.innerText\\s*=\\s*health\\s*;?\\s*}/);\n```"
    },
    {
      "title": "Step 78",
      "description": "Now when a player tries to buy health, it will only work if they have enough money. If they do not, nothing will happen. Add an `else` statement where you can put code to run if a player does not have enough money.\n\nIn the previous project, you learned how to work with `else` statements like this:\n\n```js\nif (num >= 5) {\n\n} else {\n\n}\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the  town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  }\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `buyHealth` function should have an `else` statement.\n\n```js\nassert.match(buyHealth.toString(), /else/);\n```\n\nYour `else` statement should come after your `if` statement.\n\n```js\nconst split = buyHealth.toString().split(/\\s/);\nassert.isAbove(split.indexOf('else'), split.indexOf('if'));\n```"
    },
    {
      "title": "Step 79",
      "description": "Inside the `else` statement, set `text.innerText` to equal `\"You do not have enough gold to buy health.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n\n  }\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `buyHealth` function should set `text.innerText` to equal `\"You do not have enough gold to buy health.\"`.\n\n```js\nassert.match(buyHealth.toString(), /text\\.innerText\\s*=\\s*('|\")You do not have enough gold to buy health\\.\\1/);\n```\n\nYour `buyHealth` function should update `text.innerText` when `gold` is less than `10`.\n\n```js\ngold = 5;\nhealth = 10;\nbuyHealth();\nassert.equal(text.innerText, 'You do not have enough gold to buy health.');\n```"
    },
    {
      "title": "Step 80",
      "description": "Use `const` to create a `weapons` variable above your `locations` array. Assign it an empty array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\n\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use `const` to declare your `weapons` variable.\n\n```js\nassert.match(code, /const\\s+weapons/i);\n```\n\nYour `weapons` variable should be an array.\n\n```js\nassert.isArray(weapons);\n```\n\nYour `weapons` variable should be empty.\n\n```js\nassert.equal(weapons.length, 0);\n```"
    },
    {
      "title": "Step 81",
      "description": "Just like your `locations` array, your `weapons` array will hold objects. Add four objects to the `weapons` array, each with two properties: `name` and `power`. The first should have the `name` set to `\"stick\"` and the `power` set to `5`. The second should be `\"dagger\"` and `30`. The third, `\"claw hammer\"` and `50`. The fourth, `\"sword\"` and `100`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\n--fcc-editable-region--\nconst weapons = [];\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `weapons` array should have four values.\n\n```js\nassert.lengthOf(weapons, 4);\n```\n\nYour `weapons` array should have four objects.\n\n```js\nassert.isObject(weapons[0]);\nassert.isObject(weapons[1]);\nassert.isObject(weapons[2]);\nassert.isObject(weapons[3]);\n```\n\nYour first `weapons` object should have the `name` set to `\"stick\"` and the `power` set to `5`.\n\n```js\nassert.equal(weapons[0].name, 'stick');\nassert.equal(weapons[0].power, 5);\n```\n\nYour second `weapons` object should have the `name` set to `\"dagger\"` and the `power` set to `30`.\n\n```js\nassert.equal(weapons[1].name, 'dagger');\nassert.equal(weapons[1].power, 30);\n```\n\nYour third `weapons` object should have the `name` set to `\"claw hammer\"` and the `power` set to `50`.\n\n```js\nassert.equal(weapons[2].name, 'claw hammer');\nassert.equal(weapons[2].power, 50);\n```\n\nYour fourth `weapons` object should have the `name` set to `\"sword\"` and the `power` set to `100`.\n\n```js\nassert.equal(weapons[3].name, 'sword');\nassert.equal(weapons[3].power, 100);\n```"
    },
    {
      "title": "Step 82",
      "description": "Inside your `buyWeapon` function, add an `if` statement to check if `gold` is greater than or equal to `30`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `buyWeapon` function should have an `if` statement.\n\n```js\nassert.include(buyWeapon.toString(), 'if');\n```\n\nYour `if` statement should check if `gold` is greater than or equal to `30`.\n\n```js\nassert.match(buyWeapon.toString(), /if\\s*\\(\\s*gold\\s*>=\\s*30\\s*\\)/);\n```"
    },
    {
      "title": "Step 83",
      "description": "Similar to your `buyHealth` function, set `gold` equal to `30` less than its current value. Make sure this is inside your `if` statement.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use compound assignment to subtract `30` from `gold`.\n\n```js\nassert.match(buyWeapon.toString(), /gold\\s*-=\\s*30/);\n```\n\nYour `buyWeapon` function should reduce `gold` by `30`.\n\n```js\ngold = 30;\nbuyWeapon();\nassert.equal(gold, 0);\n```\n\nYour code should be in your `if` statement.\n\n```js\ngold = 20;\nbuyWeapon();\nassert.equal(gold, 20);\n```"
    },
    {
      "title": "Step 84",
      "description": "The value of the `currentWeaponIndex` variable corresponds to an index in the `weapons` array. The player starts with a `\"stick\"`, since `currentWeaponIndex` starts at `0` and `weapons[0]` is the `\"stick\"` weapon.\n\nIn the `buyWeapon` function, use compound assignment to add `1` to `currentWeaponIndex` - the user is buying the next weapon in the `weapons` array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use compound assignment to add one to `currentWeaponIndex`.\n\n```js\nassert.match(buyWeapon.toString(), /currentWeaponIndex\\s*\\+=\\s*1/);\n```\n\nYour `buyWeapon` function should increase `currentWeaponIndex` by `1`.\n\n```js\ngold = 30;\ncurrentWeaponIndex = 0;\nbuyWeapon();\nassert.equal(currentWeaponIndex, 1);\n```\n\nYour code should be in your `if` statement.\n\n```js\ngold = 20;\ncurrentWeaponIndex = 0;\nbuyWeapon();\nassert.equal(currentWeaponIndex, 0);\n```"
    },
    {
      "title": "Step 85",
      "description": "In the previous project, you learned how to use the increment operator to increase a variable by `1`.\n\n```js\nlet num = 5;\nnum++;\n// prints 6\nconsole.log(num); \n```\n\nChange your `currentWeaponIndex` assignment to use the increment operator.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex += 1;\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use the increment operator to increase `currentWeaponIndex` by `1`.\n\n```js\nassert.match(buyWeapon.toString(), /currentWeaponIndex\\s*\\+\\s*\\+/);\n```\n\nYou should not use compound assignment to increase `currentWeaponIndex` by `1`.\n\n```js\nassert.notMatch(buyWeapon.toString(), /currentWeaponIndex\\s*\\+=\\s*1/);\n```"
    },
    {
      "title": "Step 86",
      "description": "Now update the `goldText` element to display the new value of `gold`, and update the `text` element to display `\"You now have a new weapon.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should update the `innerText` property of the `goldText` element to be `gold`.\n\n```js\nassert.match(buyWeapon.toString(), /goldText\\.innerText\\s*=\\s*gold/);\n```\n\nYou should update the `innerText` property of the `text` element to be `\"You now have a new weapon.\"`.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You now have a new weapon\\.\\1/);\n```"
    },
    {
      "title": "Step 87",
      "description": "You should tell the player what weapon they bought. In between the two lines you just wrote, use `let` to initialize a new variable called `newWeapon`. Set this to equal `weapons`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    \n    text.innerText = \"You now have a new weapon.\";\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `buyWeapon` function should have a variable named `newWeapon`.\n\n```js\nassert.match(buyWeapon.toString(), /newWeapon/);\n```\n\nYou should use `let` to declare `newWeapon`.\n\n```js\nassert.match(code, /let\\s+newWeapon/);\n```\n\n`newWeapon` should be initialised to have the value of `weapons`. Don't forget your semicolon.\n\n```js\nassert.match(buyWeapon.toString(), /newWeapon\\s*=\\s*weapons\\s*;/);\n```\n\n`newWeapon` should be declared before you modify `text`.\n\n```js\nconst splitBySpaces = buyWeapon.toString().split(/\\s+/);\nconst textLocation = splitBySpaces.indexOf('text.innerText');\nconst newWeaponIndex = splitBySpaces.indexOf('newWeapon');\nconst newWeaponLocation = newWeaponIndex !== -1 ? newWeaponIndex : textLocation;\nassert.isBelow(newWeaponLocation, textLocation);\n```"
    },
    {
      "title": "Step 88",
      "description": "Use bracket notation to access an object within the `weapons` array and assign it to your `newWeapon` variable. Place the variable `currentWeaponIndex` within the brackets.\n\nWhen you use a variable in bracket notation, you are accessing the property or index by the *value* of that variable.\n\nFor example, this code uses the `index` variable to access a value of `array`.\n\n```js\nlet value = array[index];\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons;\n    text.innerText = \"You now have a new weapon.\";\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should update `newWeapon` to have the value of `weapons[currentWeaponIndex]`.\n\n```js\nassert.match(buyWeapon.toString(), /newWeapon\\s*=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]/);\n```"
    },
    {
      "title": "Step 89",
      "description": "`weapons[currentWeaponIndex]` is an object. Use dot notation to get the `name` property of that object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons[currentWeaponIndex];\n    text.innerText = \"You now have a new weapon.\";\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should update `newWeapon` to have the value of `weapons[currentWeaponIndex].name`.\n\n```js\nassert.match(buyWeapon.toString(), /newWeapon\\s*=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.name\\s*;?/);\n```"
    },
    {
      "title": "Step 90",
      "description": "In the previous project, you learned how to work with the concatenation operator to insert variables into a string like this:\n\n```js\nconst organization = \"freeCodeCamp\";\n\n// \"Hello, our name is freeCodeCamp.\"\n\"Hello, our name is \" + organization + \".\";\n```\n\nUpdate the string `\"You now have a new weapon.\"` to `\"You now have a \"` followed by the name of the new weapon, and remember to end the sentence with a period.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons[currentWeaponIndex].name;\n    text.innerText = \"You now have a new weapon.\";\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should update the `text.innerText` assignment to start with the string `\"You now have a \"`.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You now have a \\1/);\n```\n\nYou should use the concatenation operator to add `newWeapon` to the end of the `text.innerText` string.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You now have a \\1\\s*\\+\\s*newWeapon/);\n```\n\nYou should use the concatenation operator to end your `text.innerText` string with a `.`.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You now have a \\1\\s*\\+\\s*newWeapon\\s*\\+\\s*('|\")\\.\\2/);\n```"
    },
    {
      "title": "Step 91",
      "description": "Back at the beginning of this project, you created the `inventory` array. Add the `newWeapon` to the end of the `inventory` array using the `push()` method.\n\nIn the previous project, you learned how to work with the `push` method like this:\n\n```js\nconst myArray = [];\nmyArray.push(\"new item\");\n// myArray is now [\"new item\"]\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons[currentWeaponIndex].name;\n    text.innerText = \"You now have a \" + newWeapon + \".\";\n    \n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use the `push` method on `inventory`.\n\n```js\nassert.match(buyWeapon.toString(), /inventory\\.push/)\n```\n\nYou should `push` the value of `newWeapon` to the `inventory` array.\n\n```js\nassert.match(buyWeapon.toString(), /inventory\\.push\\s*\\(\\s*newWeapon\\s*\\)/)\n```\n\nYour `buyWeapon` function should add the value of `newWeapon` to the `inventory` array.\n\n```js\ninventory = [];\ncurrentWeaponIndex = 0;\nbuyWeapon();\nassert.deepEqual(inventory, [\"dagger\"]);\n```"
    },
    {
      "title": "Step 92",
      "description": "Up until now, any time `text.innerText` was updated, the old text was erased. This time, use the `+=` operator to add text to the end of `text.innerText`.\n\nAdd the string `\" In your inventory you have: \"` - include the spaces at the beginning and the end.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons[currentWeaponIndex].name;\n    text.innerText = \"You now have a \" + newWeapon + \".\";\n    inventory.push(newWeapon);\n    \n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should add a new line with `text.innerText`.\n\n```js\nconst matches = buyWeapon.toString().match(/text\\.innerText/g);\nassert.lengthOf(matches, 2);\n```\n\nYou should use the `+=` operator to add to `text.innerText`.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*\\+=\\s*/)\n```\n\nYou should add the string `\" In your inventory you have: \"` to the end of `text.innerText`. Mind the spaces!\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*\\+=\\s*('|\")\\sIn your inventory you have:\\s\\1/)\n```"
    },
    {
      "title": "Step 93",
      "description": "At the end of the second `text.innerText` string you just added, use the concatenation operator to add the contents of `inventory` to the string.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons[currentWeaponIndex].name;\n    text.innerText = \"You now have a \" + newWeapon + \".\";\n    inventory.push(newWeapon);\n    text.innerText += \" In your inventory you have: \";\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should not change the `\" In your inventory you have: \"` string.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*\\+=\\s*('|\")\\sIn your inventory you have:\\s\\1/)\n```\n\nYou should use the concatenation operator `+` to add the contents of `inventory` to the string.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*\\+=\\s*('|\")\\sIn your inventory you have:\\s\\1\\s*\\+\\s*inventory/)\n```"
    },
    {
      "title": "Step 94",
      "description": "Add an `else` statement to your `buyWeapon` function. In that statement, set `text.innerText` to equal `\"You do not have enough gold to buy a weapon.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons[currentWeaponIndex].name;\n    text.innerText = \"You now have a \" + newWeapon + \".\";\n    inventory.push(newWeapon);\n    text.innerText += \" In your inventory you have: \" + inventory;\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should add an `else` statement to your `buyWeapon` function.\n\n```js\nassert.match(buyWeapon.toString(), /else/);\n```\n\nYour `else` statement should come after your `if` statement.\n\n```js\nconst split = buyWeapon.toString().split(/\\s|\\n/);\nassert.isAbove(split.indexOf('else'), split.indexOf('if'));\n```\n\nYou should set `text.innerText` to `\"You do not have enough gold to buy a weapon.\"`.\n\n```js\nassert.match(buyWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You do not have enough gold to buy a weapon.\\1/);\n```\n\nYour `else` statement should set `text.innerText` to `\"You do not have enough gold to buy a weapon.\"`.\n\n```js\ngold = 20;\nbuyWeapon();\nassert.equal(text.innerText, 'You do not have enough gold to buy a weapon.');\n```"
    },
    {
      "title": "Step 95",
      "description": "Once a player has the best weapon, they cannot buy another one. Wrap all of the code in your `buyWeapon` function inside another `if` statement. The condition should check if `currentWeaponIndex` is less than `3` - the index of the last weapon.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (gold >= 30) {\n    gold -= 30;\n    currentWeaponIndex++;\n    goldText.innerText = gold;\n    let newWeapon = weapons[currentWeaponIndex].name;\n    text.innerText = \"You now have a \" + newWeapon + \".\";\n    inventory.push(newWeapon);\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"You do not have enough gold to buy a weapon.\";\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should have a new `if` statement that checks if `currentWeaponIndex` is less than `3`.\n\n```js\nassert.match(buyWeapon.toString(), /currentWeaponIndex\\s*\\<\\s*3/)\n```\n\nYour existing `if` statement should be within your new `if` statement.\n\n```js\ncurrentWeaponIndex = 5;\ngold = 50;\nbuyWeapon();\nassert.equal(gold, 50);\n```\n\nYour existing `else` statement should be within your new `if` statement.\n\n```js\ncurrentWeaponIndex = 5;\ngold = 10;\nbuyWeapon();\nassert.notEqual(text.innerText, \"You do not have enough gold to buy a weapon.\");\n```"
    },
    {
      "title": "Step 96",
      "description": "Arrays have a `length` property that returns the number of items in the array. You may want to add new values to the `weapons` array in the future.\n\nChange your `if` condition to check if `currentWeaponIndex` is less than the length of the `weapons` array. An example of checking the length of an array `myArray` would look like `myArray.length`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (currentWeaponIndex < 3) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use the `length` property on the `weapons` array.\n\n```js\nassert.match(buyWeapon.toString(), /weapons\\.length/);\n```\n\nYour `if` statement should check if `currentWeaponIndex` is less than `weapons.length`.\n\n```js\nassert.match(buyWeapon.toString(), /currentWeaponIndex\\s*<\\s*weapons\\.length/);\n```"
    },
    {
      "title": "Step 98",
      "description": "When you were testing your function, you should have seen an error message in the console. This error is due to the condition in the `buyWeapon` function.\n\nThe `currentWeaponIndex` variable is the index of the `weapons` array, but array indexing starts at zero. The index of the last element in an array is one less than the length of the array.\n\nChange the `if` condition to check `weapons.length - 1`, instead of `weapons.length`.\n\nTest out your `buyWeapon` function again to see the error message disappear.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">250</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 250;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should update the condition to subtract `1` from `weapons.length`.\n\n```js\nassert.match(buyWeapon.toString(), /weapons\\.length\\s*-\\s*1/);\n```\n\nYour condition should check if `currentWeaponIndex` is less than `weapons.length - 1`.\n\n```js\nassert.match(buyWeapon.toString(), /currentWeaponIndex\\s*<\\s*weapons\\.length\\s*-\\s*1/);\n```"
    },
    {
      "title": "Step 99",
      "description": "If the player has purchased all of the weapons in the `weapons` array, the player should not be able to purchase any more and a message should be displayed.\n\nAdd an `else` statement for your outer `if` statement. Inside this new `else` statement, set `text.innerText` to `\"You already have the most powerful weapon!\"`.\n\nTest your `buyWeapon` function again to make sure the message is displayed when the player has the most powerful weapon.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">250</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 250;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should have another `else` statement in your `buyWeapon` function.\n\n```js\nconst matches = buyWeapon.toString().match(/else/g);\nassert.equal(matches.length, 2);\n```\n\nYou should set `text.innerText` to `\"You already have the most powerful weapon!\"`.\n\n```js\nassert.match(buyWeapon.toString(), /('|\")You already have the most powerful weapon!\\1/);\n```\n\nYou should modify your `text.innerText` to `\"You already have the most powerful weapon!\"` within your outer `else` statement.\n\n```js\ncurrentWeaponIndex = 5;\nbuyWeapon();\nassert.equal(text.innerText, \"You already have the most powerful weapon!\");\n```"
    },
    {
      "title": "Step 101",
      "description": "Once a player has the most powerful weapon, you can give them the ability to sell their old weapons.\n\nIn the outer `else` statement, set `button2.innerText` to `\"Sell weapon for 15 gold\"`. Also set `button2.onclick` to the function name `sellWeapon`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\n--fcc-editable-region--\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should set the value of `button2.innerText`.\n\n```js\nassert.match(buyWeapon.toString(), /button2\\.innerText/);\n```\n\nYou should set the value of `button2.innerText` to `\"Sell weapon for 15 gold\"`.\n\n```js\nassert.match(buyWeapon.toString(), /button2\\.innerText\\s*=\\s*('|\")Sell weapon for 15 gold\\1\\s*;?/);\n```\n\nYou should set the value of `button2.onclick`.\n\n```js\nassert.match(buyWeapon.toString(), /button2\\.onclick/);\n```\n\nYou should set the value of `button2.onclick` to `sellWeapon`.\n\n```js\nassert.match(buyWeapon.toString(), /button2\\.onclick\\s*=\\s*sellWeapon\\s*;?/);\n```"
    },
    {
      "title": "Step 102",
      "description": "Create an empty `sellWeapon` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use the `function` keyword to declare a `sellWeapon` variable.\n\n```js\nassert.isFunction(sellWeapon);\n```\n\n`sellWeapon` should be an empty function.\n\n```js\nassert.match(sellWeapon.toString(), /sellWeapon\\(\\s*\\)\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 103",
      "description": "Players should not be able to sell their only weapon. Inside the `sellWeapon` function, add an `if` statement with a condition that checks if the length of the `inventory` array is greater than `1`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\nfunction sellWeapon() {\n\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `sellWeapon` function should have an `if` statement.\n\n```js\nassert.match(sellWeapon.toString(), /if/);\n```\n\nYour `if` statement should check if `inventory.length` is greater than `1`.\n\n```js\nassert.match(sellWeapon.toString(), /if\\s*\\(\\s*inventory\\.length\\s*>\\s*1\\s*\\)/);\n```"
    },
    {
      "title": "Step 104",
      "description": "Inside the `if` statement, set `gold` equal to `15` more than its current value. Also update `goldText.innerText` to the new value.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use compound assignment to increase `gold` by `15`.\n\n```js\nassert.match(sellWeapon.toString(), /gold\\s*\\+=\\s*15/);\n```\n\nYou should set `goldText.innerText` to `gold`.\n\n```js\nassert.match(sellWeapon.toString(), /goldText\\.innerText\\s*=\\s*gold/);\n```\n\nYour code should be in your `if` statement.\n\n```js\ninventory = [\"Naomi\"];\ngold = 0\nsellWeapon();\nassert.equal(gold, 0);\n```"
    },
    {
      "title": "Step 105",
      "description": "The next step is to create a variable called `currentWeapon`.\n\n```js\nlet num = 1;\nif (num === 1) {\n  let num = 2; // this num is scoped to the if statement\n  console.log(num); // expected output: 2\n}\nconsole.log(num); // expected output: 1 (the global variable)\n```\n\nUse the `let` keyword to create a variable named `currentWeapon`. Don't assign it a value yet.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use `let` to declare a `currentWeapon` variable.\n\n```js\nassert.match(sellWeapon.toString(), /currentWeapon/);\n```"
    },
    {
      "title": "Step 106",
      "description": "In the previous project, you learned how to work with the `shift()` method to remove the first element from an array like this:\n\n```js\nconst myArray = [\"first\", \"second\", \"third\"];\nconst firstElement = myArray.shift();\n// myArray is now [\"second\", \"third\"]\n```\n\nUse the `shift()` method to take the first element from the `inventory` array and assign it to your `currentWeapon` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon;\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `sellWeapon` function should use the `shift()` method.\n\n```js\nassert.match(sellWeapon.toString(), /shift\\(\\s*\\)/);\n```\n\nYou should use the `shift()` method on the `inventory` array.\n\n```js\nassert.match(sellWeapon.toString(), /inventory\\.shift\\(\\s*\\)/);\n```\n\nYou should assign the value of `inventory.shift()` to your `currentWeapon` variable.\n\n```js\nassert.match(sellWeapon.toString(), /currentWeapon\\s*=\\s*inventory\\.shift\\(\\s*\\)/);\n```"
    },
    {
      "title": "Step 107",
      "description": "After your `currentWeapon`, use the concatenation operator to set `text.innerText` to the string `\"You sold a \"`, then `currentWeapon`, then the string `\".\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should use the assignment operator with `text.innerText`.\n\n```js\nassert.match(sellWeapon.toString(), /text\\.innerText\\s*=/);\n```\n\nYou should add `\"You sold a \"` to `text.innerText`. Spacing is important.\n\n```js\nassert.match(sellWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You sold a \\1/);\n```\n\nYou should add the value of `currentWeapon` to the `\"You sold a \"` string. Use the concatenation operator to do this on the same line.\n\n```js\nassert.match(sellWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You sold a\\s\\1\\s*\\+\\s*currentWeapon/);\n```\n\nYou should add the string `\".\"` to the value of `currentWeapon`. Use the concatenation operator to do this on the same line.\n\n```js\nassert.match(sellWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")You sold a \\1\\s*\\+\\s*currentWeapon\\s+\\+\\s+('|\")\\.\\2/);\n```\n\nYour `text.innerText` should update to the proper string.\n\n```js\ninventory = [\"first\", \"second\"];\ntext.innerText = \"Hello\";\nsellWeapon();\nassert.equal(text.innerText, \"You sold a first.\");\n```"
    },
    {
      "title": "Step 108",
      "description": "Now use the `+=` operator to add the string `\" In your inventory you have: \"` and the contents of `inventory` to the `text.innerText`. Make sure to include the space at the beginning and end of the `\" In your inventory you have: \"` string.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "You should add another `text.innerText` line.\n\n```js\nconst matches = sellWeapon.toString().match(/text\\.innerText/g);\nassert.equal(matches.length, 2);\n```\n\nYou should use compound assignment on `text.innerText`.\n\n```js\nconst matches = sellWeapon.toString().match(/text\\.innerText\\s*\\+=/g);\nassert.equal(matches.length, 1);\n```\n\nYou should add the string `\" In your inventory you have: \"` to the second `text.innerText` line. Spacing matters.\n\n```js\nassert.match(sellWeapon.toString(), /text\\.innerText\\s*\\+=\\s*('|\") In your inventory you have: \\1/);\n```\n\nYou should use the concatenation operator to add the value of `inventory` to the end of your second `text.innerText` line.\n\n```js\nassert.match(sellWeapon.toString(), /text\\.innerText\\s*\\+=\\s*('|\") In your inventory you have: \\1\\s*\\+\\s*inventory/);\n```"
    },
    {
      "title": "Step 109",
      "description": "Use an `else` statement to run when the `inventory` length is not more than one. Set the `text.innerText` to say `\"Don't sell your only weapon!\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\n--fcc-editable-region--\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  }\n}\n--fcc-editable-region--\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `sellWeapon` function should have an `else` statement.\n\n```js\nassert.match(sellWeapon.toString(), /else/);\n```\n\nYou should set `text.innerText` to `\"Don't sell your only weapon!\"`.\n\n```js\nassert.match(sellWeapon.toString(), /text\\.innerText\\s*=\\s*('|\")Don't sell your only weapon!\\1/);\n```\n\nYour new `text.innerText` line should be in your `else` statement.\n\n```js\ninventory = [\"Naomi\"];\nsellWeapon();\nassert.equal(text.innerText, \"Don't sell your only weapon!\");\n```"
    },
    {
      "title": "Step 110",
      "description": "Now you can start the code to fight monsters. To keep your code organized, your `fightDragon` function has been moved for you to be near the other `fight` functions.\n\nBelow your `weapons` array, define a `monsters` variable and assign it an array. Set that array to have three objects, each with a `name`, `level`, and `health` properties. The first object's values should be `\"slime\"`, `2`, and `15`, in order. The second should be `\"fanged beast\"`, `8`, and `60`. The third should be `\"dragon\"`, `20`, and `300`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\n--fcc-editable-region--\n\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}"
        }
      ],
      "testCode": "You should use `const` to declare a `monsters` variable.\n\n```js\nassert.match(code, /const\\s+monsters/);\n```\n\nYour `monsters` variable should be an array.\n\n```js\nassert.isArray(monsters);\n```\n\nYour `monsters` variable should have 3 values.\n\n```js\nassert.lengthOf(monsters, 3);\n```\n\nYour `monsters` array should have 3 objects.\n\n```js\nassert(monsters.every(val => typeof val === \"object\"));\n```\n\nThe first value in your `monsters` array should be an object with a `name` property set to `\"slime\"`.\n\n```js\nassert.equal(monsters[0].name, \"slime\");\n```\n\nThe first value in your `monsters` array should be an object with a `level` property set to `2`.\n\n```js\nassert.equal(monsters[0].level, 2);\n```\n\nThe first value in your `monsters` array should be an object with a `health` property set to `15`.\n\n```js\nassert.equal(monsters[0].health, 15);\n```\n\nThe second value in your `monsters` array should be an object with a `name` property set to `\"fanged beast\"`.\n\n```js\nassert.equal(monsters[1].name, \"fanged beast\");\n```\n\nThe second value in your `monsters` array should be an object with a `level` property set to `8`.\n\n```js\nassert.equal(monsters[1].level, 8);\n```\n\nThe second value in your `monsters` array should be an object with a `health` property set to `60`.\n\n```js\nassert.equal(monsters[1].health, 60);\n```\n\nThe third value in your `monsters` array should be an object with a `name` property set to `\"dragon\"`.\n\n```js\nassert.equal(monsters[2].name, \"dragon\");\n```\n\nThe third value in your `monsters` array should be an object with a `level` property set to `20`.\n\n```js\nassert.equal(monsters[2].level, 20);\n```\n\nThe third value in your `monsters` array should be an object with a `health` property set to `300`.\n\n```js\nassert.equal(monsters[2].health, 300);\n```\n\nYou should not add any extra properties to your objects.\n\n```js\nassert.deepEqual(monsters, [\n  {name: \"slime\", level: 2, health: 15},\n  {name: \"fanged beast\", level: 8, health: 60},\n  {name: \"dragon\", level: 20, health: 300}\n])\n```"
    },
    {
      "title": "Step 111",
      "description": "Fighting each type of monster will use similar logic. Create an empty function called `goFight` to manage this logic.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `goFight`.\n\n```js\nassert.match(code, /function\\s+goFight/);\n```\n\n`goFight` should be an empty function.\n\n```js\nassert.match(goFight.toString(), /goFight\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 112",
      "description": "In your `fightSlime` function, set `fighting` equal to `0` - the index of `slime` in the `monsters` array. Remember that you already declared `fighting` earlier in your code, so you do not need `let` or `const` here.\n\nOn the next line, call the `goFight` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\n--fcc-editable-region--\nfunction fightSlime() {\n\n}\n--fcc-editable-region--\n\nfunction fightBeast() {\n\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction goFight() {\n\n}"
        }
      ],
      "testCode": "You should set `fighting` equal to `0`.\n\n```js\nassert.match(fightSlime.toString(), /fighting\\s*=\\s*0\\s*;?/);\n```\n\nYou should not use `let` or `const`.\n\n```js\nassert.notMatch(fightSlime.toString(), /let|const/);\n```\n\nYou should call the `goFight` function.\n\n```js\nassert.match(fightSlime.toString(), /goFight\\(\\s*\\)\\s*;?/);\n```"
    },
    {
      "title": "Step 113",
      "description": "Following the same pattern as the `fightSlime` function, use that code in the `fightBeast` and `fightDragon` functions. Remember that `beast` is at index `1` and `dragon` is at index `2`. Also, remove the `console.log` call from your `fightDragon` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\n--fcc-editable-region--\nfunction fightBeast() {\n\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n--fcc-editable-region--\n\nfunction goFight() {\n\n}"
        }
      ],
      "testCode": "You should set `fighting` to `1` in your `fightBeast` function.\n\n```js\nassert.match(fightBeast.toString(), /fighting\\s*=\\s*1\\s*;?/);\n```\n\nYou should set `fighting` to `2` in your `fightDragon` function.\n\n```js\nassert.match(fightDragon.toString(), /fighting\\s*=\\s*2\\s*;?/);\n```\n\nYou should remove the `console.log` from your `fightDragon` function.\n\n```js\nassert.notMatch(fightDragon.toString(), /console\\.log/);\n```"
    },
    {
      "title": "Step 114",
      "description": "At the end of your code, create two empty functions named `attack` and `dodge`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `attack`.\n\n```js\nassert.match(code, /function\\s+attack/);\n```\n\n`attack` should be an empty function.\n\n```js\nassert.match(attack.toString(), /attack\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);\n```\n\nYou should use the `function` keyword to declare `dodge`.\n\n```js\nassert.match(code, /function\\s+dodge/);\n```\n\n`dodge` should be an empty function.\n\n```js\nassert.match(dodge.toString(), /dodge\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 115",
      "description": "Add a new object to the end of the `locations` array, following the same properties as the rest of the objects. Set `name` to `\"fight\"`, `\"button text\"` to an array with `\"Attack\"`, `\"Dodge\"`, and `\"Run\"`, `\"button functions\"` to an array with `attack`, `dodge`, and `goTown`, and `text` to `\"You are fighting a monster.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n\n}\n\nfunction attack() {\n\n}\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "Your `locations` array should have 4 values in it.\n\n```js\nassert.lengthOf(locations, 4);\n```\n\nYour new value should be an object.\n\n```js\nassert.isObject(locations[3]);\n```\n\nYour new object should have a `name` property set to `\"fight\"`.\n\n```js\nassert.equal(locations[3].name, \"fight\");\n```\n\nYour new object should have a `\"button text\"` property set to an array with the strings `\"Attack\"`, `\"Dodge\"`, and `\"Run\"`.\n\n```js\nassert.deepEqual(locations[3][\"button text\"], [\"Attack\", \"Dodge\", \"Run\"]);\n```\n\nYour new object should have a `\"button functions\"` property set to an array with the variables `attack`, `dodge`, and `goTown`.\n\n```js\nassert.deepEqual(locations[3][\"button functions\"], [attack, dodge, goTown]);\n```\n\nYour new object should have a `text` property set to `\"You are fighting a monster.\"`.\n\n```js\nassert.equal(locations[3].text, \"You are fighting a monster.\");\n```"
    },
    {
      "title": "Step 116",
      "description": "In the `goFight` function, call your `update` function with the fourth object in `locations` as an argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\n--fcc-editable-region--\nfunction goFight() {\n\n}\n--fcc-editable-region--\n\nfunction attack() {\n\n}\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should call `update` in your `goFight` function.\n\n```js\nassert.match(goFight.toString(), /update/);\n```\n\nYou should pass the fourth object in your `locations` array to your `update` call.\n\n```js\nassert.match(goFight.toString(), /update\\(\\s*locations\\s*\\[\\s*3\\s*\\]\\s*\\)/);\n```"
    },
    {
      "title": "Step 117",
      "description": "Below your `update` call, set the `monsterHealth` to be the health of the current monster. You can get this value by accessing the `health` property of `monsters[fighting]` with dot notation.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\n--fcc-editable-region--\nfunction goFight() {\n  update(locations[3]);\n\n}\n--fcc-editable-region--\n\nfunction attack() {\n\n}\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use bracket notation to access the `monsters` array at the `fighting` index.\n\n```js\nassert.match(goFight.toString(), /monsters\\s*\\[\\s*fighting\\s*\\]/);\n```\n\nYou should assign the value of the `health` property of `monsters[fighting]` to the `monsterHealth` variable.\n\n```js\nassert.match(goFight.toString(), /monsterHealth\\s*=\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*(\\.health|\\[\\s*('|\")health\\2\\s*\\])/);\n```"
    },
    {
      "title": "Step 118",
      "description": "By default, the HTML element that shows the monster's stats has been hidden with CSS. When the player clicks the \"Fight dragon\" button, the monster's stats should be displayed. You can accomplish this by using the <dfn>style</dfn> and <dfn>display</dfn> properties on the `monsterStats` element.\n\nThe `style` property is used to access the inline style of an element and the `display` property is used to set the visibility of an element.\n\nHere is an example of how to update the display for a paragraph element:\n\n```js\nconst paragraph = document.querySelector('p');\nparagraph.style.display = 'block';\n```\n\nDisplay the `monsterStats` element by updating the `display` property of the `style` property to `block`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\n--fcc-editable-region--\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n\n}\n--fcc-editable-region--\n\nfunction attack() {\n\n}\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `style` property of `monsterStats`.\n\n```js\nassert.match(goFight.toString(), /monsterStats\\.style/);\n```\n\nYou should use dot notation to access the `display` property of the `style` property.\n\n```js\nassert.match(goFight.toString(), /monsterStats\\.style\\.display/);\n```\n\nYou should set the `display` property to `block`.\n\n```js\nassert.match(goFight.toString(), /monsterStats\\.style\\.display\\s*=\\s*('|\")block\\1/);\n```"
    },
    {
      "title": "Step 119",
      "description": "Now, you will need to update the text for the current monster's name and health.\n\nStart by assigning `monsters[fighting].name` to the `innerText` property of `monsterName`. Then, assign `monsterHealth` to the `innerText` property of `monsterHealthText`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\n--fcc-editable-region--\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n\n}\n--fcc-editable-region--\n\nfunction attack() {\n\n}\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `innerText` property of `monsterName`.\n\n```js\nassert.match(goFight.toString(), /monsterName\\.innerText/);\n```\n\nYou should assign `monsters[fighting].name` to `monsterName.innerText`.\n\n```js\nassert.match(goFight.toString(), /monsterName\\.innerText\\s*=\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.name/);\n```\n\nYou should use dot notation to access the `innerText` property of `monsterHealthText`.\n\n```js\nassert.match(goFight.toString(), /monsterHealthText\\.innerText/);\n```\n\nYou should assign `monsterHealth` to `monsterHealthText.innerText`.\n\n```js\nassert.match(goFight.toString(), /monsterHealthText\\.innerText\\s*=\\s*monsterHealth|monsterHealthText\\.innerText\\s*=\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.health/);\n```"
    },
    {
      "title": "Step 120",
      "description": "Now you can build the `attack` function. First, update the `text` message to say `\"The <monster name> attacks.\"`, replacing `<monster name>` with the name of the monster. Remember you can use the concatenation operator for this.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n\n}\n--fcc-editable-region--\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `innerText` property of `text`.\n\n```js\nassert.match(attack.toString(), /text\\.innerText/);\n```\n\nYou should assign the string `\"The \"` to `innerText` property of `text`.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*=\\s*('|\")The \\1/);\n```\n\nYou should use the concatenation operator to add the value of `monsters[fighting].name` to the string `\"The \"`.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*=\\s*('|\")The \\1\\s*\\+\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.name/);\n```\n\nYou should use the concatenation operator to add the string `\" attacks.\"` to the `monsters[fighting].name` string.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*=\\s*('|\")The \\1\\s*\\+\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.name\\s*\\+\\s*('|\") attacks\\.\\2/);\n```"
    },
    {
      "title": "Step 121",
      "description": "On a new line, use the addition assignment operator(`+=`), to add the string `\" You attack it with your <weapon>.\"` to the `text` value, replacing `<weapon>` with the player's current weapon. Additionally, remember that this line of text starts with a space so it will properly display.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n\n}\n--fcc-editable-region--\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `innerText` property of `text` on a new line.\n\n```js\nconst match = attack.toString().match(/text\\.innerText/g);\nassert.lengthOf(match, 2);\n```\n\nYou should use compound assignment with `text.innerText`.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*\\+=/);\n```\n\nYou should add the string `\" You attack it with your \"` to the `text.innerText` value. Remember that spacing matters.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*\\+=\\s*('|\") You attack it with your \\1/);\n```\n\nYou should use the concatenation operator to add the current weapon to the string. You can get the current weapon with `weapons[currentWeaponIndex].name`.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*\\+=\\s*('|\") You attack it with your \\1\\s*\\+\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.name/);\n```\n\nYou should use the concatenation operator to end your string with `\".\"`.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*\\+=\\s*('|\") You attack it with your \\1\\s*\\+\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.name\\s*\\+\\s*('|\")\\.\\2/);\n```"
    },
    {
      "title": "Step 122",
      "description": "Next, set `health` to equal `health` minus the monster's level. Remember you can get this from the `monsters[fighting].level` property.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n\n}\n--fcc-editable-region--\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use compound assignment with `health`.\n\n```js\nassert.match(attack.toString(), /health\\s*-=/);\n```\n\nYou should subtract the monster's current level from `health`.\n\n```js\nassert.match(attack.toString(), /health\\s*-=\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.level/);\n```"
    },
    {
      "title": "Step 123",
      "description": "Set `monsterHealth` to `monsterHealth` minus the power of the player's current weapon. \n\nRemember that you can access the power of the player's current weapon using `weapons[currentWeaponIndex].power`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n\n}\n--fcc-editable-region--\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use compound assignment to modify the `monsterHealth` variable.\n\n```js\nassert.match(attack.toString(), /monsterHealth\\s*-=/);\n```\n\nYou should use bracket notation with `currentWeaponIndex` to access `weapons`.\n\n```js\nassert.lengthOf(attack.toString().match(/weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]/g), 2);\n```\n\nYou should use dot notation to access the `power` property of `weapons[currentWeaponIndex]`.\n\n```js\nassert.match(attack.toString(), /weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.power/);\n```\n\nYou should subtract the `power` of the current weapon from `monsterHealth`.\n\n```js\nassert.match(attack.toString(), /monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.power/);\n```"
    },
    {
      "title": "Step 124",
      "description": "The `Math` object in JavaScript contains static properties and methods for mathematical constants and functions. One of those is `Math.random()`, which generates a random number from `0` (inclusive) to `1` (exclusive). Another is `Math.floor()`, which rounds a given number down to the nearest integer.\n\nUsing these, you can generate a random number within a range. For example, this generates a random number between `1` and `5`: `Math.floor(Math.random() * 5) + 1;`.\n\nFollowing this pattern, use the addition operator (`+`) to add a random number between `1` and the value of `xp` to your `monsterHealth -= weapons[currentWeaponIndex].power`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  --fcc-editable-region--\n  monsterHealth -= weapons[currentWeaponIndex].power;\n  --fcc-editable-region--\n}\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should use the same `monsterHealth` line you already wrote.\n\n```js\nassert.lengthOf(attack.toString().match(/monsterHealth/g), 1);\n```\n\nYou should add to the `weapons[currentWeaponIndex].power` value.\n\n```js\nassert.match(attack.toString(), /monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.power\\s*\\+/);\n```\n\nYou should use `Math.floor()`.\n\n```js\nassert.match(attack.toString(), /Math\\.floor/);\n```\n\nYou should use `Math.random()`.\n\n```js\nassert.match(attack.toString(), /Math\\.random/);\n```\n\nYou should multiply `Math.random()` by the value of `xp`.\n\n```js\nassert.match(attack.toString(), /Math\\.random\\(\\s*\\)\\s*\\*\\s*xp/);\n```\n\nYou should use `Math.floor()` to round the result of `Math.random() * xp` down.\n\n```js\nassert.match(attack.toString(), /Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*.*\\)/);\n```\n\nYou should add `1` to the result of `Math.floor()`.\n\n```js\nassert.match(attack.toString(), /Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*(\\+\\s*1\\s*\\)|\\)\\s*\\+\\s*1)/);\n```\n\nYou should add the result of `Math.floor(Math.random() * xp) + 1` to the result of `weapons[currentWeaponIndex].power`.\n\n```js\nassert.match(attack.toString(), /monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.power\\s*\\+\\s*Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*(\\+\\s*1\\s*\\)|\\)\\s*\\+\\s*1)/);\n```"
    },
    {
      "title": "Step 125",
      "description": "Update `healthText.innerText` and `monsterHealthText.innerText` to equal `health` and `monsterHealth`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  \n}\n--fcc-editable-region--\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should update `healthText.innerText`.\n\n```js\nassert.match(attack.toString(), /healthText\\.innerText/);\n```\n\nYou should set `healthText.innerText` to `health`.\n\n```js\nassert.match(attack.toString(), /healthText\\.innerText\\s*=\\s*health/);\n```\n\nYou should update `monsterHealthText.innerText`.\n\n```js\nassert.match(attack.toString(), /monsterHealthText\\.innerText/);\n```\n\nYou should set `monsterHealthText.innerText` to `monsterHealth`.\n\n```js\nassert.match(attack.toString(), /monsterHealthText\\.innerText\\s*=\\s*monsterHealth/);\n```"
    },
    {
      "title": "Step 126",
      "description": "Add an `if` statement to check if `health` is less than or equal to `0`. If it is, call the `lose` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  \n}\n--fcc-editable-region--\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "Your `attack` function should have an `if` statement.\n\n```js\nassert.match(attack.toString(), /if/);\n```\n\nYour `if` statement should check if `health` is less than or equal to `0`.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*health\\s*<=\\s*0\\s*\\)/);\n```\n\nYour `if` statement should call the `lose` function.\n\n```js\nassert.match(attack.toString(), /lose\\(\\s*\\)/);\n```"
    },
    {
      "title": "Step 127",
      "description": "You can make an `else` statement conditional by using `else if`. Here's an example:\n\n```js\nif (num > 10) {\n\n} else if (num < 5) {\n\n}\n```\n\nAt the end of your `if` statement, add an `else if` statement to check if `monsterHealth` is less than or equal to `0`. In your `else if`, call the `defeatMonster` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  }\n}\n--fcc-editable-region--\n\nfunction dodge() {\n\n}"
        }
      ],
      "testCode": "You should have an `else if` statement.\n\n```js\nassert.match(attack.toString(), /else\\s+if/);\n```\n\nYour `else if` statement should check if `monsterHealth` is less than or equal to `0`.\n\n```js\nassert.match(attack.toString(), /else\\s+if\\s*\\(\\s*monsterHealth\\s*<=\\s*0\\s*\\)/);\n```\n\nYour `else if` statement should call the `defeatMonster` function.\n\n```js\nassert.match(attack.toString(), /else\\s+if\\s*\\(\\s*monsterHealth\\s*<=\\s*0\\s*\\)\\s*(\\{\\s*)?defeatMonster(\\s*\\})?/);\n```"
    },
    {
      "title": "Step 128",
      "description": "At the end of your code, create the `defeatMonster` and `lose` functions. Leave them empty for now.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `defeatMonster`.\n\n```js\nassert.match(code, /function\\s+defeatMonster/);\n```\n\n`defeatMonster` should be an empty function.\n\n```js\nassert.match(defeatMonster.toString(), /defeatMonster\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);\n```\n\nYou should use the `function` keyword to declare `lose`.\n\n```js\nassert.match(code, /function\\s+lose/);\n```\n\n`lose` should be an empty function.\n\n```js\nassert.match(lose.toString(), /lose\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 129",
      "description": "Inside the `dodge` function, set `text.innerText` equal to the string `\"You dodge the attack from the <monster>\"`. Replace `<monster>` with the name of the monster, using the `name` property.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\n--fcc-editable-region--\nfunction dodge() {\n\n}\n--fcc-editable-region--\n\nfunction defeatMonster() {\n\n}\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "You should assign the string `\"You dodge the attack from the \"` to the `text.innerText` property. Remember that spacing matters.\n\n```js\nassert.match(dodge.toString(), /text\\.innerText\\s*=\\s*('|\")You dodge the attack from the \\1/);\n```\n\nYou should use the concatenation operator to add the name of the monster to the end of the string. You can get this with `monsters[fighting].name`.\n\n```js\nassert.match(dodge.toString(), /text\\.innerText\\s*=\\s*('|\")You dodge the attack from the \\1\\s*\\+\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.name/);\n```"
    },
    {
      "title": "Step 130",
      "description": "In your `defeatMonster` function, set `gold` equal to `gold` plus the monster's level times `6.7`. Remember you can get the monster's level by using `monsters[fighting].level`.\n\nHere is an example of setting `num` to `num` plus `5` * `8`: `num += 5 * 8`. Use `Math.floor()` to round the result down.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\n--fcc-editable-region--\nfunction defeatMonster() {\n\n}\n--fcc-editable-region--\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "You should use compound assignment to modify `gold`.\n\n```js\nassert.match(defeatMonster.toString(), /gold\\s*\\+=/);\n```\n\nYou should use `Math.floor()` to round the result of the monster's level times `6.7`.\n\n```js\nassert.match(defeatMonster.toString(), /(Math\\.floor\\(\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.level\\s*\\*\\s*6\\.7\\s*\\))|(Math\\.floor\\(\\s*6\\.7\\s*\\*\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.level\\s*\\))/);\n```\n\nYou should add the result of `Math.floor(monsters[fighting].level * 6.7)` to `gold`.\n\n```js\nassert.match(defeatMonster.toString(), /gold\\s*\\+=\\s*((Math\\.floor\\(\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.level\\s*\\*\\s*6\\.7\\s*\\))|(Math\\.floor\\(\\s*6\\.7\\s*\\*\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.level\\s*\\)))/);\n```"
    },
    {
      "title": "Step 131",
      "description": "Set `xp` to `xp` plus the monster's level.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\n--fcc-editable-region--\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n\n}\n--fcc-editable-region--\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "You should use compound assignment to modify `xp`.\n\n```js\nassert.match(defeatMonster.toString(), /xp\\s*\\+=/);\n```\n\nYou should add the monster's level to `xp`.\n\n```js\nassert.match(defeatMonster.toString(), /xp\\s*\\+=\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.level/);\n```"
    },
    {
      "title": "Step 132",
      "description": "Now update `goldText` and `xpText` to display the updated values.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\n--fcc-editable-region--\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  \n}\n--fcc-editable-region--\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "You should update `goldText.innerText` to the value of `gold`.\n\n```js\nassert.match(defeatMonster.toString(), /goldText\\.innerText\\s*=\\s*gold/);\n```\n\nYou should update `xpText.innerText` to the value of `xp`.\n\n```js\nassert.match(defeatMonster.toString(), /xpText\\.innerText\\s*=\\s*xp/);\n```"
    },
    {
      "title": "Step 133",
      "description": "Finish the `defeatMonster` function by calling the `update` function with `locations[4]` as the argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\n--fcc-editable-region--\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  \n}\n--fcc-editable-region--\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "You should call the `update` function.\n\n```js\nassert.match(defeatMonster.toString(), /update/);\n```\n\nYou should pass `locations[4]` as the argument.\n\n```js\nassert.match(defeatMonster.toString(), /update\\(\\s*locations\\s*\\[\\s*4\\s*\\]\\s*\\)/);\n```"
    },
    {
      "title": "Step 134",
      "description": "Your `locations` array doesn't have a fifth element, so `locations[4]` doesn't work.\n\nAdd a new object at the end of the `locations` array, following the same structure as the other objects. Set `name` to `\"kill monster\"`, set `\"button text\"` to an array with three `\"Go to town square\"` strings, set `\"button functions\"` to an array with three `goTown` variables, and set `text` to `\"The monster screams Arg! as it dies. You gain experience points and find gold.\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\n--fcc-editable-region--\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  }\n];\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "Your `locations` array should have five values.\n\n```js\nassert.lengthOf(locations, 5);\n```\n\nYour fifth `locations` value should be an object.\n\n```js\nassert.isObject(locations[4]);\n```\n\nYour fifth `locations` value should have a `name` property with the value `\"kill monster\"`.\n\n```js\nassert.equal(locations[4].name, 'kill monster');\n```\n\nYour fifth `locations` value should have a `\"button text\"` array with three `\"Go to town square\"` strings.\n\n```js\nassert.deepEqual(locations[4][\"button text\"], ['Go to town square', 'Go to town square', 'Go to town square']);\n```\n\nYour fifth `locations` value should have a `\"button functions\"` array with three `goTown` variables.\n\n```js\nassert.deepEqual(locations[4][\"button functions\"], [goTown, goTown, goTown]);\n```\n\nYour fifth `locations` value should have a `text` property with the value `\"The monster screams Arg! as it dies. You gain experience points and find gold.\"`.\n\n```js\nassert.equal(locations[4].text, 'The monster screams Arg! as it dies. You gain experience points and find gold.');\n```"
    },
    {
      "title": "Step 135",
      "description": "The word `\"Arg!\"` should have quotes around it. Besides escaping quotes, there is another way you can include quotation marks inside a string.\n\nChange the double quotes around the string `\"The monster screams Arg! as it dies. You gain experience points and find gold.\"` to single quotes `'`, then add double quotes around `\"Arg!\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n--fcc-editable-region--\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: \"The monster screams Arg! as it dies. You gain experience points and find gold.\"\n  }\n--fcc-editable-region--\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "You should use single quotes around the string.\n\n```js\nassert.match(code, /'The monster screams \"?Arg!\"? as it dies. You gain experience points and find gold.'/);\n```\n\nYou should use double quotes around `\"Arg!\"`.\n\n```js\nassert.equal(locations[4].text, 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.');\n```"
    },
    {
      "title": "Step 136",
      "description": "After a monster is defeated, the monster's stat box should no longer display.\n\nOn the first line of the `update` function, use `monsterStats.style.display` to change the `display` value to `none`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\n--fcc-editable-region--\nfunction update(location) {\n\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n--fcc-editable-region--\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n\n}"
        }
      ],
      "testCode": "You should use `monsterStats.style.display` in the `update` function.\n\n```js\nassert.match(update.toString(), /monsterStats\\.style\\.display/);\n```\n\nYou should set `monsterStats.style.display` to `none`.\n\n```js\nassert.match(update.toString(), /monsterStats\\.style\\.display\\s*=\\s*('|\")none\\1/);\n```\n\nYou should add your code in the first line of the `update` function.\n\n```js\nassert.match(update.toString(), /update\\s*\\(\\s*location\\s*\\)\\s*\\{\\s*monsterStats\\.style\\.display\\s*=\\s*('|\")none\\1/);\n```"
    },
    {
      "title": "Step 137",
      "description": "In the `lose` function, call the `update` function and pass in the sixth object of your `locations` array. Note that you haven't created this object just yet.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\n--fcc-editable-region--\nfunction lose() {\n\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should call the `update` function inside the `lose` function.\n\n```js\nassert.match(lose.toString(), /update\\(/);\n```\n\nYour `update` function should have `locations[5]` for the argument.\n\n```js\nassert.match(lose.toString(), /update\\(\\s*locations\\s*\\[\\s*5\\s*\\]\\s*\\)/);\n```"
    },
    {
      "title": "Step 138",
      "description": "At the end of your code, create a `restart` function. Inside this function, set `xp` to `0`, `health` to `100`, `gold` to `50`, `currentWeaponIndex` to `0`, and set `inventory` to an array with the string `stick`.\n\nAlso update the `innerText` properties of `goldText`, `healthText`, and `xpText` to their current values.\n\nFinally, call the `goTown()` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `restart`.\n\n```js\nassert.match(code, /function\\s+restart/);\n```\n\nYour `restart` function should set `xp` to `0`.\n\n```js\nassert.match(restart.toString(), /xp\\s*=\\s*0/);\n```\n\nYour `restart` function should set `health` to `100`.\n\n```js\nassert.match(restart.toString(), /health\\s*=\\s*100/);\n```\n\nYour `restart` function should set `gold` to `50`.\n\n```js\nassert.match(restart.toString(), /gold\\s*=\\s*50/);\n```\n\nYour `restart` function should set `currentWeaponIndex` to `0`.\n\n```js\nassert.match(restart.toString(), /currentWeaponIndex\\s*=\\s*0/);\n```\n\nYour `restart` function should set `inventory` to an array with the string `\"stick\"`.\n\n```js\nassert.match(restart.toString(), /inventory\\s*=\\s*\\[\\s*('|\")stick\\1\\s*\\]/);\n```\n\nYour `restart` function should call the `goTown()` function.\n\n```js\nassert.match(restart.toString(), /goTown\\(\\s*\\)/);\n```\n\nYou should set `goldText.innerText` to the value of `gold`.\n\n```js\nassert.match(restart.toString(), /goldText\\.innerText\\s*=\\s*gold/);\n```\n\nYou should set `healthText.innerText` to the value of `health`.\n\n```js\nassert.match(restart.toString(), /healthText\\.innerText\\s*=\\s*health/);\n```\n\nYou should set `xpText.innerText` to the value of `xp`.\n\n```js\nassert.match(restart.toString(), /xpText\\.innerText\\s*=\\s*xp/);\n```"
    },
    {
      "title": "Step 140",
      "description": "Back to your `attack` function - inside the `else if` block, create another `if` and `else` statement. If the player is fighting the dragon (`fighting` would be `2`), call the `winGame` function. Move the `defeatMonster()` call to the `else` block.\n\nFor this step, you will need to use the strict equality (`===`) operator to check if `fighting` is equal to `2`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should add a new `if` statement in your `else if` block.\n\n```js\nconst block = attack.toString().split(\"else if\");\nassert.include(block[1], \"if\");\n```\n\nYour new `if` statement should check if `fighting` is strictly equal to `2`.\n\n```js\nconst block = attack.toString().split(\"else if\");\nassert.match(block[1], /if\\s*\\(\\s*fighting\\s*===\\s*2\\s*\\)/);\n```\n\nYou should call the `winGame` function in your `if` block.\n\n```js\nconst block = attack.toString().split(\"else if\");\nassert.match(block[1], /if\\s*\\(\\s*fighting\\s*===\\s*2\\s*\\)\\s*(\\{\\s*)?winGame\\(\\s*\\)(\\s*\\})?/);\n```\n\nYou should add an `else` block.\n\n```js\nconst block = attack.toString().split(\"else if\");\nassert.include(block[1], \"else\");\n```\n\nYour `else` block should call the `defeatMonster` function.\n\n```js\nconst block = attack.toString().split(\"else if\");\nassert.match(block[1], /else\\s*(\\{\\s*)?defeatMonster\\(\\s*\\)(\\s*\\})?/);\n```"
    },
    {
      "title": "Step 142",
      "description": "After the `lose` function, create a function called `winGame`. Inside the `winGame` function, call the `update` function and pass in `locations[6]`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `winGame`.\n\n```js\nassert.match(code, /function\\s+winGame/);\n```\n\nYour `winGame` function should call the `update` function and pass in `locations[6]`.\n\n```js\nassert.match(winGame.toString(), /update\\s*\\(\\s*locations\\s*\\[\\s*6\\s*\\]\\s*\\)/);\n```"
    },
    {
      "title": "Step 143",
      "description": "Add another object in the `locations` array. Everything should be the same as the `lose` object, except the `name` should be `\"win\"` and the `text` should be `\"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n--fcc-editable-region--\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  }\n--fcc-editable-region--\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should have seven values in the `locations` array.\n\n```js\nassert.lengthOf(locations, 7);\n```\n\nYour seventh `locations` value should be an object.\n\n```js\nassert.isObject(locations[6]);\n```\n\nYour seventh `locations` value should have a `name` property with the value `\"win\"`.\n\n```js\nassert.equal(locations[6].name, 'win');\n```\n\nYour seventh `locations` value should have a `button text` array with three `\"REPLAY?\"` strings.\n\n```js\nassert.deepEqual(locations[6][\"button text\"], ['REPLAY?', 'REPLAY?', 'REPLAY?']);\n```\n\nYour seventh `locations` value should have a `button functions` array with three `restart` variables.\n\n```js\nassert.deepEqual(locations[6][\"button functions\"], [restart, restart, restart]);\n```\n\nYour seventh `locations` value should have a `text` property with the value `\"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\"`.\n\n```js\nassert.equal(locations[6].text, 'You defeat the dragon! YOU WIN THE GAME! &#x1F389;');\n```"
    },
    {
      "title": "Step 144",
      "description": "While your game is feature-complete at this stage, there are things you can do to make it more fun and engaging. To get started, you'll give `monsters` a dynamic attack value.\n\nInside your `attack` function, change your `health -= monsters[fighting].level;` line to `health -= getMonsterAttackValue(monsters[fighting].level);`. This sets `health` equal to `health` minus the return value of the `getMonsterAttackValue` function, and passes the `level` of the monster as an argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should update your `health` line to be `health -= getMonsterAttackValue(monsters[fighting].level);`.\n\n```js\nassert.match(attack.toString(), /health\\s*-=\\s*getMonsterAttackValue\\(\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\.level\\s*\\)/);\n```"
    },
    {
      "title": "Step 145",
      "description": "Below your `attack` function, create an empty function named `getMonsterAttackValue`. It should take `level` as a parameter.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `getMonsterAttackValue`.\n\n```js\nassert.match(code, /function\\s+getMonsterAttackValue/);\n```\n\nYour `getMonsterAttackValue` should take `level` as a parameter.\n\n```js\nassert.match(code, /getMonsterAttackValue\\s*\\(\\s*level\\s*\\)/);\n```"
    },
    {
      "title": "Step 146",
      "description": "The attack of the monster will be based on the monster's `level` and the player's `xp`. In the `getMonsterAttackValue` function, use `const` to create a variable called `hit`. Assign it the equation `(level * 5) - (Math.floor(Math.random() * xp));`.\n\nThis will set the monster's attack to five times their `level` minus a random number between `0` and the player's `xp`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\n\n}\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use `const` to declare the variable `hit`.\n\n```js\nassert.match(code, /const\\s+hit/);\n```\n\nYou should use the equation `(level * 5) - (Math.floor(Math.random() * xp))`.\n\n```js\nassert.match(getMonsterAttackValue, /(level\\s*\\*\\s*5)\\s*-\\s*(Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\))/);\n```\n\nYou should set `hit` to the value of `(level * 5) - (Math.floor(Math.random() * xp))`.\n\n```js\nassert.match(code, /hit\\s*=\\s*\\(\\s*level\\s*\\*\\s*5\\s*\\)\\s*-\\s*\\(\\s*Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\)/);\n```"
    },
    {
      "title": "Step 147",
      "description": "Log the value of `hit` to the console to use in debugging. Remember that you can do this with `console.log()`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n}\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use the `console.log()` function to log the value of `hit`.\n\n```js\nassert.match(getMonsterAttackValue.toString(), /console\\.log\\(\\s*hit\\s*\\)/);\n```"
    },
    {
      "title": "Step 148",
      "description": "In the previous project, you learned how to work with the `return` keyword to return a value from a function like this:\n\n```js\nfunction add(num1, num2) {\n  return num1 + num2;\n}\n```\n\nUse the `return` keyword to return the value of `hit` at the end of the function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n}\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use the `return` keyword to return the value of `hit`.\n\n```js\nassert.match(getMonsterAttackValue, /return\\s+hit/);\n```\n\nYour function should return the expected value.\n\n```js\nxp = 0;\nassert.equal(getMonsterAttackValue(1), 5);\n```"
    },
    {
      "title": "Step 149",
      "description": "If you play the game in its current state you might notice a bug. If your `xp` is high enough, the `getMonsterAttackValue` function will return a negative number, which will actually add to your total health when fighting a monster! You can fix this issue by using a <dfn>ternary operator</dfn> to ensure negative values are not returned.\n\nThe ternary operator is a conditional operator and can be used as a one-line `if-else` statement. The syntax is: `condition ? expressionIfTrue : expressionIfFalse`.\n\nHere is an example of returning a value using an `if-else` statement and a refactored example using a ternary operator:\n\n```js\n// if-else statement\nif (score > 0) {\n  return score\n} else {\n  return default_score\n}\n\n// ternary operator\nreturn score > 0 ? score : default_score\n```\n\nIn `getMonsterAttackValue`, change `return hit` to a ternary operator that returns `hit` if `hit` is greater than `0`, or returns `0` if it is not.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit;\n}\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use a ternary to change the `return` value if `hit` is greater than `0`.\n\n```js\nassert.match(getMonsterAttackValue.toString(), /return\\s+hit\\s*>\\s*0/);\n```\n\nYou should use a ternary to return `hit` if `hit` is greater than `0`\n\n```js\nassert.match(getMonsterAttackValue.toString(), /return\\s+hit\\s*>\\s*0\\s*\\?\\s*hit/);\n```\n\nYou should use a ternary to return `0` if `hit` is not greater than `0`.\n\n```js\nassert.match(getMonsterAttackValue.toString(), /return\\s+hit\\s*>\\s*0\\s*\\?\\s*hit\\s*:\\s*0/);\n```"
    },
    {
      "title": "Step 150",
      "description": "In your `attack` function, find the line of code that updates the `monsterHealth` variable and place it within an `if` block with a condition that calls the `isMonsterHit` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n--fcc-editable-region--\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should add an `if` statement.\n\n```js\nassert.lengthOf(attack.toString().match(/if/g), 4)\n```\n\nYour `if` statement should call `isMonsterHit` in the condition.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*isMonsterHit\\s*\\(\\s*\\)/)\n```\n\nYou should place your `monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1` into your `if` block.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*isMonsterHit\\s*\\(\\s*\\)\\s*\\)\\s*\\{\\s*monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.power\\s*\\+\\s*Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\+\\s*1/)\n```"
    },
    {
      "title": "Step 151",
      "description": "Add an `else` statement to the first `if` statement inside your `attack()` function. In the `else` statement, use the `+=` operator to add the text `\" You miss.\"` to the end of `text.innerText`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n--fcc-editable-region--\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should add an `else` block after your `if (isMonsterHit())` block.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*isMonsterHit\\(\\s*\\)\\s*\\)\\s*\\{\\s*monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.power\\s*\\+\\s*Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\+\\s*1\\s*;?\\s*\\}\\s*else/)\n```\n\nYou should add the text `\" You miss.\"` to the end of `text.innerText`. Remember to use compound assignment and make sure there is a space before the word `You`.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*isMonsterHit\\(\\s*\\)\\s*\\)\\s*\\{\\s*monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\.power\\s*\\+\\s*Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\+\\s*1\\s*;?\\s*\\}\\s*else\\s*\\{\\s*text\\.innerText\\s*\\+=\\s*('|\")\\sYou miss\\.\\1/)\n```"
    },
    {
      "title": "Step 152",
      "description": "Now create the `isMonsterHit` function. This will return a <dfn>boolean</dfn> value (true or false) to be used in your `if` statement. Return the result of the comparison `Math.random() > .2`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `isMonsterHit`.\n\n```js\nassert.match(code, /function\\s+isMonsterHit/);\n```\n\nYour `isMonsterHit` function should return the result of the comparison `Math.random() > .2`.\n\n```js\nassert.match(isMonsterHit.toString(), /return\\s+Math\\.random\\(\\s*\\)\\s*>\\s*0?\\.2/);\n```"
    },
    {
      "title": "Step 153",
      "description": "The player should hit if either `Math.random() > .2` **or** if the player's health is less than `20`.\n\nAt the end of your `return` statement, use the <dfn>logical OR</dfn> operator `||` and check if `health` is less than `20`.\n\nThe logical OR operator will use the first value if it is truthy – that is, anything apart from `NaN`, `null`, `undefined`, `0`, `-0`, `0n`, `\"\"`, and `false`. Otherwise, it will use the second value.\n\nFor example: `num < 10 || num > 20`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\n--fcc-editable-region--\nfunction isMonsterHit() {\n  return Math.random() > .2;\n}\n--fcc-editable-region--\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "Your `isMonsterHit` function should use the logical OR operator.\n\n```js\nassert.match(isMonsterHit.toString(), /\\|\\|/);\n```\n\nYour logical OR operator should use `health < 20` as the fallback value.\n\n```js\nassert.match(isMonsterHit.toString(), /\\|\\|\\s*health\\s*<\\s*20/);\n```\n\nYour function should return the result of the comparison `Math.random() > .2` **or** `health < 20`.\n\n```js\nassert.match(isMonsterHit.toString(), /return\\s+Math\\.random\\(\\s*\\)\\s*>\\s*0?\\.2\\s*\\|\\|\\s*health\\s*<\\s*20/);\n```"
    },
    {
      "title": "Step 154",
      "description": "On every attack, there should be a chance that the player's weapon breaks. At the end of the `attack` function, add an empty `if` statement with the condition `Math.random() <= .1`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n\n}\n--fcc-editable-region--\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should add an `if` statement to your `attack` function.\n\n```js\nconst ifs = attack.toString().match(/if/g);\nassert.lengthOf(ifs, 5);\n```\n\nYour new `if` statement should check `Math.random() <= .1`.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*Math\\.random\\(\\s*\\)\\s*<=\\s*0?\\.1\\s*\\)/);\n```"
    },
    {
      "title": "Step 155",
      "description": "Use the `+=` operator to add `\" Your <weapon> breaks.\"`, with a space in front of `Your`, to the end of `text.innerText`. Replace `<weapon>` with the last item in the `inventory` array using `inventory.pop()`, which will remove the last item in the array AND return it so it appears in your string.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1) {\n\n  }\n}\n--fcc-editable-region--\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use the compound assignment operator to modify `text.innerText`.\n\n```js\nconst concat = attack.toString().match(/\\+=/g);\nassert.lengthOf(concat, 3);\n```\n\nYou should use the `pop` method on the `inventory` array.\n\n```js\nassert.match(attack.toString(), /inventory\\.pop\\(\\s*\\)/);\n```\n\nYou should add `\" Your \"`, with a space before and after it, to `text.innerText`.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*\\+=\\s*('|\")\\sYour\\s\\1/);\n```\n\nYou should add the return value of `inventory.pop()` to the `\" Your \"` string.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*\\+=\\s*('|\")\\sYour\\s\\1\\s*\\+\\s*inventory\\.pop\\(\\s*\\)/);\n```\n\nYou should add `\" breaks.\"`, with a space in front of it, to the end of your string.\n\n```js\nassert.match(attack.toString(), /text\\.innerText\\s*\\+=\\s*('|\")\\sYour\\s\\1\\s*\\+\\s*inventory\\.pop\\(\\s*\\)\\s*\\+\\s*('|\")\\sbreaks\\.\\2/);\n```"
    },
    {
      "title": "Step 156",
      "description": "Remember that the increment operator `++` can be used to increase a variable's value by `1`. There is also a <dfn>decrement operator</dfn> `--` that can be used to decrease a variable's value by `1`. For example :\n\n```js\nlet num = 10;\nnum--;\nconsole.log(num); // Output: 9\n```\n\nDecrement the value of `currentWeaponIndex` in your `if` statement, after you update the text.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n\n  }\n}\n--fcc-editable-region--\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use the decrement operator.\n\n```js\nassert.match(attack.toString(), /--/);\n```\n\nYou should decrement `currentWeaponIndex` in your `if` statement.\n\n```js\nassert.match(attack.toString(), /(currentWeaponIndex\\s*--\\s*;?\\s*}\\s*})$/);\n```"
    },
    {
      "title": "Step 157",
      "description": "We don't want a player's only weapon to break. The logical AND operator checks if two statements are true.\n\nUse the <dfn>logical AND</dfn> operator `&&` to add a second condition to your `if` statement. The player's weapon should only break if `inventory.length` does not equal (`!==`) one.\n\nHere is an example of an `if` statement with two conditions:\n\n```js\nif (firstName === \"Quincy\" && lastName === \"Larson\") {\n\n}\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\n--fcc-editable-region--\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n--fcc-editable-region--\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should not modify the existing condition in your `if` statement.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*Math\\.random\\(\\s*\\)\\s*\\<=\\s*\\.1/);\n```\n\nYou should use the logical AND operator `&&`.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*Math\\.random\\(\\s*\\)\\s*\\<=\\s*\\.1\\s*&&/);\n```\n\nYou should use the logical AND operator to check if `inventory.length` does not equal `1`.\n\n```js\nassert.match(attack.toString(), /if\\s*\\(\\s*Math\\.random\\(\\s*\\)\\s*\\<=\\s*\\.1\\s*&&\\s*inventory\\.length\\s*\\!\\=\\=\\s*1\\s*\\)/);\n```"
    },
    {
      "title": "Step 158",
      "description": "Now you can add a small easter egg (hidden feature) to your game.\n\nCreate a new function called `easterEgg` which calls the `update` function with `locations[7]` as the argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `easterEgg`.\n\n```js\nassert.match(code, /function\\s+easterEgg\\s*/);\n```\n\n`easterEgg` should call the `update` function.\n\n```js\nassert.match(easterEgg.toString(), /update\\(/);\n```\n\n`easterEgg` should call the `update` function with `locations[7]` as the argument.\n\n```js\nassert.match(easterEgg.toString(), /update\\(\\s*locations\\s*\\[\\s*7\\s*\\]\\s*\\)/);\n```"
    },
    {
      "title": "Step 159",
      "description": "Create an empty `pick` function with a parameter named `guess`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `pick`.\n\n```js\nassert.match(code, /function\\s+pick\\s*/);\n```\n\n`pick` should take a parameter named `guess`.\n\n```js\nassert.match(pick.toString(), /pick\\s*\\(\\s*guess\\s*\\)/);\n```"
    },
    {
      "title": "Step 160",
      "description": "Create two new functions named `pickTwo` and `pickEight`.\n\nInside each of those, call the `pick()` function and pass either `2` or `8` as the argument depending on the function name.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nfunction pick(guess) {\n\n}"
        }
      ],
      "testCode": "You should use the `function` keyword to declare `pickTwo`.\n\n```js\nassert.match(code, /function\\s+pickTwo\\s*/);\n```\n\nYou should use the `function` keyword to declare `pickEight`.\n\n```js\nassert.match(code, /function\\s+pickEight\\s*/);\n```\n\n`pickTwo` should call the `pick` function.\n\n```js\nassert.match(pickTwo.toString(), /pick\\(/);\n```\n\n`pickTwo` should call the `pick` function with `2` as the argument.\n\n```js\nassert.match(pickTwo.toString(), /pick\\(\\s*2\\s*\\)/);\n```\n\n`pickEight` should call the `pick` function.\n\n```js\nassert.match(pickEight.toString(), /pick\\(/);\n```\n\n`pickEight` should call the `pick` function with `8` as the argument.\n\n```js\nassert.match(pickEight.toString(), /pick\\(\\s*8\\s*\\)/);\n```"
    },
    {
      "title": "Step 161",
      "description": "Add another object to your `locations` array. Set `name` to `\"easter egg\"`, set `\"button text\"` to an array with the strings `\"2\"`, `\"8\"`, and `\"Go to town square?\"`, set `\"button functions\"` to an array with the variables `pickTwo`, `pickEight`, and `goTown`, and `text` to `\"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n--fcc-editable-region--\n\n--fcc-editable-region--\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\nfunction pick(guess) {\n\n}"
        }
      ],
      "testCode": "Your `locations` array should have 8 values.\n\n```js\nassert.lengthOf(locations, 8);\n```\n\nYour eighth `locations` value should be an object.\n\n```js\nassert.isObject(locations[7]);\n```\n\nYour eighth `locations` value should have a `name` property with the value `\"easter egg\"`.\n\n```js\nassert.equal(locations[7].name, \"easter egg\");\n```\n\nYour eighth `locations` value should have a `\"button text\"` array with the strings `\"2\"`, `\"8\"`, and `\"Go to town square?\"`.\n\n```js\nassert.deepEqual(locations[7][\"button text\"], [\"2\", \"8\", \"Go to town square?\"]);\n```\n\nYour eighth `locations` value should have a `\"button functions\"` an array with the variables `pickTwo`, `pickEight`, and `goTown`.\n\n```js\nassert.deepEqual(locations[7][\"button functions\"], [pickTwo, pickEight, goTown]);\n```\n\nYour eighth `locations` value should have a `text` property with the value `\"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"`.\n\n```js\nassert.equal(locations[7].text, \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\");\n```"
    },
    {
      "title": "Step 162",
      "description": "Inside `pick`, use `const` to initialize a variable named `numbers` and set it to an empty array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeapon].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeapon].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `pick` function should initialize `numbers` to an empty array `[]`.\n\n```js\nassert.match(pick.toString(), /numbers\\s*=\\s*\\[\\s*\\]/);\n```"
    },
    {
      "title": "Step 163",
      "description": "After your `numbers` array, create a `while` loop that runs as long as `numbers.length` is less than `10`.\n\nIn the previous project, you learned how to work with `while` loops like this:\n\n```js\nwhile (condition) {\n  // code to run\n}\n```",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  \n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `pick` function should have a `while` loop.\n\n```js\nassert.match(pick.toString(), /while\\s*\\(/);\n```\n\nYour `while` loop should run while `numbers.length < 10`.\n\n```js\nassert.match(pick.toString(), /while\\s*\\(\\s*numbers\\.length\\s*<\\s*10\\s*\\)/);\n```"
    },
    {
      "title": "Step 164",
      "description": "Inside your `while` loop, push a random number between `0` and `10` to the end of the `numbers` array. You can create this random number with `Math.floor(Math.random() * 11)`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n\n  }\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `push` method to add a random number to the end of the `numbers` array.\n\n```js\nassert.match(pick.toString(), /numbers\\.push\\(/);\n```\n\nYou should use `Math.floor(Math.random() * 11)` to create the random number.\n\n```js\nassert.match(pick.toString(), /Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*11\\s*\\)/);\n```\n\nYou should `push` the result of `Math.floor(Math.random() * 11)` to the end of the `numbers` array.\n\n```js\nassert.match(pick.toString(), /numbers\\.push\\(\\s*Math\\.floor\\(\\s*Math\\.random\\(\\s*\\)\\s*\\*\\s*11\\s*\\)\\s*\\)/);\n```"
    },
    {
      "title": "Step 165",
      "description": "After the `while` loop, set `text.innerText` to equal `\"You picked <someGuess>. Here are the random numbers:\"`. Replace `<someGuess>` with the `guess` function parameter.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should set `text.innerText` to the string `\"You picked \"`. Remember that spacing matters.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*=\\s*('|\")You picked \\1/);\n```\n\nYou should use the concatenation operator to add the value of the `guess` parameter to your `\"You picked \"` string.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*=\\s*('|\")You picked \\1\\s*\\+\\s*guess/);\n```\n\nYou should use the concatenation operator to add the string `\". Here are the random numbers:\"` to your `\"You picked \" + guess` string.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*=\\s*('|\")You picked \\1\\s*\\+\\s*guess\\s*\\+\\s*('|\")\\.\\sHere are the random numbers:\\2/);\n```"
    },
    {
      "title": "Step 166",
      "description": "At the end of the string, before the final quote, insert the new line escape character `\\n`. This will cause the next part you add to `text.innerText` to appear on a new line.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\";\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should add the new line escape character `\\n` to your `\". Here are the random numbers:\"` string.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*=\\s*('|\")You picked \\1\\s*\\+\\s*guess\\s*\\+\\s*('|\")\\.\\sHere are the random numbers:\\\\n\\2/);\n```"
    },
    {
      "title": "Step 167",
      "description": "In the previous project, you learned how to work with `for` loops like this:\n\n```js\nfor (let i = 0; i < 5; i++) {\n  // code to run\n}\n```\n\n`for` loops are declared with three expressions separated by semicolons: `for (a; b; c)`, where `a` is the initialization expression, `b` is the condition, and `c` is the final expression.\n\nIn this step, create a `for` loop where `i` is initialized to `0`, the loop runs as long as `i` is less than `10`, and `i` is incremented by `1` after each iteration using the increment operator `++`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\\n\";\n  \n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `for` loop initialization should have `i` initialized to `0`.\n\n```js\nassert.match(pick.toString(), /for\\s*\\(\\s*(let|var)\\s+i\\s*=\\s*0\\s*;/)\n```\n\nYour loop condition should run as long as `i` is less than `10`.\n\n```js\nassert.match(pick.toString(), /for\\s*\\(\\s*(let|var)\\s+i\\s*=\\s*0\\s*;\\s*i\\s*<\\s*10\\s*;/)\n```\n\nYour loop should increment `i` by `1` after each iteration. Remember to use the increment operator `++`.\n\n```js\nassert.match(pick.toString(), /for\\s*\\(\\s*(let|var)\\s+i\\s*=\\s*0\\s*;\\s*i\\s*<\\s*10\\s*;\\s*i\\+\\+\\s*\\)/)\n```"
    },
    {
      "title": "Step 168",
      "description": "Now you can write the logic to run in the loop. Inside your `for` loop, use the `+=` operator to add to the end of `text.innerText`. Add the number at index `i` of the `numbers` array, using `numbers[i]`. Then add a new line, using the escape sequence you used earlier.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\\n\";\n  for (let i = 0; i < 10; i++) {\n\n  }\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use compound assignment to add to the end of `text.innerText`.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*\\+=/);\n```\n\nYou should use bracket notation to access `numbers[i]`.\n\n```js\nassert.match(pick.toString(), /numbers\\s*\\[\\s*i\\s*\\]/);\n```\n\nYou should add `numbers[i]` to your `text.innerText` value.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*\\+=\\s*numbers\\s*\\[\\s*i\\s*\\]/);\n```\n\nYou should add a new-line character after the `numbers[i]` value. Remember that you can do this with `\\n`.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*\\+=\\s*numbers\\s*\\[\\s*i\\s*\\]\\s*\\+\\s*('|\")\\\\n\\1/);\n```"
    },
    {
      "title": "Step 169",
      "description": "The `.includes()` method determines if an array contains an element and will return either `true` or `false`.\n\nHere is an example of the `.includes()` syntax:\n\n```js\nconst numbersArray = [1, 2, 3, 4, 5]\nconst number = 3\n\nif (numbersArray.includes(number)) {\n  console.log(\"The number is in the array.\")\n}\n```\n\nAfter your `for` loop, add an `if` statement to check if the `guess` is in the `numbers` array. You can use the `.includes()` method to check if the array contains the `guess`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\\n\";\n  for (let i = 0; i < 10; i++) {\n    text.innerText += numbers[i] + \"\\n\";\n  }\n\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `pick` function should have an `if` statement.\n\n```js\nconst split = code.split(/text\\.innerText\\s*\\+=\\s*numbers/)?.[1]?.split(/\\}/)?.[1];\nassert.match(split, /if/);\n```\n\nInside your `if` statement, check if the `guess` is in the `numbers` array using the `.includes()` method.\n\n```js\nconst split = code.split(/text\\.innerText\\s*\\+=\\s*numbers/)?.[1]?.split(/\\}/)?.[1];\nassert.match(split, /if\\s*\\(\\s*numbers\\.includes\\(\\s*guess\\s*\\)\\s*\\)/);\n```"
    },
    {
      "title": "Step 170",
      "description": "Inside the `if` statement, add the string `\"Right! You win 20 gold!\"` to the end of `text.innerText`. Also, add `20` to the value of `gold` and update the `goldText.innerText`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\\n\";\n  for (let i = 0; i < 10; i++) {\n    text.innerText += numbers[i] + \"\\n\";\n  }\n  if (numbers.includes(guess)) {\n\n  }\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use compound assignment to add the string `\"Right! You win 20 gold!\"` to the end of `text.innerText`.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*\\+=\\s*('|\")Right! You win 20 gold!\\1/);\n```\n\nYou should use compound assignment to add `20` to the value of `gold`.\n\n```js\nassert.match(pick.toString(), /gold\\s*\\+=\\s*20/);\n```\n\nYou should update the `goldText.innerText` to reflect the new value of `gold`.\n\n```js\nassert.match(pick.toString(), /goldText\\.innerText\\s*\\=\\s*gold/);\n```"
    },
    {
      "title": "Step 171",
      "description": "Now add an `else` statement. Inside, add `\"Wrong! You lose 10 health!\"` to the end of `text.innerText`. Subtract `10` from `health` and update `healthText.innerText`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\\n\";\n  for (let i = 0; i < 10; i++) {\n    text.innerText += numbers[i] + \"\\n\";\n  }\n  if (numbers.includes(guess)) {\n    text.innerText += \"Right! You win 20 gold!\";\n    gold += 20;\n    goldText.innerText = gold;\n  }\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should add an `else` block.\n\n```js\nassert.match(pick.toString(), /else\\s*\\{/);\n```\n\nYour `else` block should use compound assignment to add `\"Wrong! You lose 10 health!\"` to the end of `text.innerText`.\n\n```js\nassert.match(pick.toString(), /text\\.innerText\\s*\\+=\\s*('|\")Wrong! You lose 10 health!\\1/);\n```\n\nYour `else` block should use compound assignment to subtract `10` from `health`.\n\n```js\nassert.match(pick.toString(), /health\\s*-=\\s*10/);\n```\n\nYour `else` block should update the `healthText.innerText` to reflect the new value of `health`.\n\n```js\nassert.match(pick.toString(), /healthText\\.innerText\\s*=\\s*health/);\n```"
    },
    {
      "title": "Step 172",
      "description": "Since you subtracted health from the player, you need to check if the player's `health` is less than or equal to `0`. If it is, call the `lose` function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeaponIndex--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\n--fcc-editable-region--\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\\n\";\n  for (let i = 0; i < 10; i++) {\n    text.innerText += numbers[i] + \"\\n\";\n  }\n  if (numbers.includes(guess)) {\n    text.innerText += \"Right! You win 20 gold!\";\n    gold += 20;\n    goldText.innerText = gold;\n  } else {\n    text.innerText += \"Wrong! You lose 10 health!\";\n    health -= 10;\n    healthText.innerText = health;\n\n  }\n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `pick` function should have `if` statement nested in the `else` body.\n\n```js\nconst elsePart = code.split(/function\\s+pick\\s*\\(\\s*guess\\s*\\)/)?.[1]?.split(/else\\s*\\{/)?.[1]?.split(/\\}/)?.[0];\nassert.match(elsePart, /if/);\n```\n\nYour `if` statement should check if the player's `health` is less than or equal to `0`.\n\n```js\nassert.match(pick.toString(), /if\\s*\\(\\s*health\\s*<=\\s*0\\s*\\)/);\n```\n\nYour `if` statement in the `else` body should call the `lose` function.\n\n```js\nconst nestedIf = code.split(/function\\s+pick\\s*\\(\\s*guess\\s*\\)/)?.[1]?.split(/else\\s*\\{/)?.[1]?.split(/\\}/)?.[0]?.split(/if\\s*\\(\\s*health\\s*<=\\s*0\\s*\\)\\s*\\{/)?.[1];\nassert.match(nestedIf, /lose\\(\\s*\\)/);\n```"
    },
    {
      "title": "Step 173",
      "description": "Looking at your `\"kill monster\"` object, `\"button functions\"` currently has three `goTown` variables. Replace the third one with `easterEgg` - this is how a player will access the hidden feature of the game. Do not change the `\"button text\"`.\n\nWith this, your RPG game is complete! You can now play around - can you defeat the dragon?",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeapon = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n--fcc-editable-region--\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n--fcc-editable-region--\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  },\n  { \n    name: \"win\", \n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n    \"button functions\": [restart, restart, restart], \n    text: \"You defeat the dragon! YOU WIN THE GAME! &#x1F389;\" \n  },\n  {\n    name: \"easter egg\",\n    \"button text\": [\"2\", \"8\", \"Go to town square?\"],\n    \"button functions\": [pickTwo, pickEight, goTown],\n    text: \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerHTML = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeapon < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeapon++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeapon].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeapon].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeapon].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeapon--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeapon = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\nfunction pick(guess) {\n  const numbers = [];\n  while (numbers.length < 10) {\n    numbers.push(Math.floor(Math.random() * 11));\n  }\n  text.innerText = \"You picked \" + guess + \". Here are the random numbers:\\n\";\n  for (let i = 0; i < 10; i++) {\n    text.innerText += numbers[i] + \"\\n\";\n  }\n  if (numbers.includes(guess)) {\n    text.innerText += \"Right! You win 20 gold!\";\n    gold += 20;\n    goldText.innerText = gold;\n  } else {\n    text.innerText += \"Wrong! You lose 10 health!\";\n    health -= 10;\n    healthText.innerText = health;\n    if (health <= 0) {\n      lose();\n    }\n  }\n}"
        }
      ],
      "testCode": "You should update your fifth `locations` object to have a `\"button functions\"` property of `[goTown, goTown, easterEgg]`.\n\n```js\nassert.deepEqual(locations[4][\"button functions\"], [goTown, goTown, easterEgg]);\n```"
    },
    {
      "title": "Step 16",
      "description": "We have run into a slight problem. You are trying to query your page for a button element, but your `script` tag is in the `head` of your HTML. This means your code runs before the browser has finished reading the HTML, and your `document.querySelector()` will not see the button - because the browser hasn't processed it yet.\n\nTo fix this, move your `script` element out of the `head` element, and place it at the end of your `body` element (just before the closing `</body>` tag).",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n--fcc-editable-region--\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\"></div>\n      <div id=\"text\"></div>\n    </div>\n\n  </body>\n--fcc-editable-region--\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nlet button1 = document.querySelector(\"#button1\");"
        }
      ],
      "testCode": "Your `script` element should not be in your `head` element.\n\n```js\nconst script = document.querySelector('script[data-src$=\"script.js\"]');\nassert.notEqual(script.parentElement.tagName, \"HEAD\");\n```\n\nYour `script` element should come at the end of your `body` element.\n\n```js\nconst script = document.querySelector('script[data-src$=\"script.js\"]');\nconst lastChild = document.querySelector('body').lastElementChild;\nassert.equal(script, lastChild);\n```"
    },
    {
      "title": "Step 139",
      "description": "In the `locations` array, add another object at the end. Set the `name` property to `\"lose\"`, set `\"button text\"` to an array with three `\"REPLAY?\"` strings, set `\"button functions\"` to an array with three `restart` variables, and set `text` to `\"You die. &#x2620;\"`. \n\nIn a later step, you will update the code for the `&#x2620;` emoticon text to properly display on the page.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n--fcc-editable-region--\n\n--fcc-editable-region--\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    defeatMonster();\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should have six values in the `locations` array.\n\n```js\nassert.lengthOf(locations, 6);\n```\n\nYour sixth `locations` value should be an object.\n\n```js\nassert.isObject(locations[5]);\n```\n\nYour sixth `locations` value should have a `name` property with the value `\"lose\"`.\n\n```js\nassert.equal(locations[5].name, 'lose');\n```\n\nYour sixth `locations` value should have a `\"button text\"` array with three `\"REPLAY?\"` strings.\n\n```js\nassert.deepEqual(locations[5][\"button text\"], ['REPLAY?', 'REPLAY?', 'REPLAY?']);\n```\n\nYour sixth `locations` value should have a `\"button functions\"` array with three `restart` variables.\n\n```js\nassert.deepEqual(locations[5][\"button functions\"], [restart, restart, restart]);\n```\n\nYour sixth `locations` value should have a `text` property with the value `\"You die. &#x2620;\"`.\n\n```js\nassert.equal(locations[5].text, 'You die. &#x2620;');\n```"
    },
    {
      "title": "Step 25",
      "description": "Give your `#monsterStats` element the same `border` and `padding` as your `#stats` element. Set its color to `#ffffff` and give it a `#c70d0d` background.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `#monsterStats` selector.\n\n```js\nconst monsterStats = new __helpers.CSSHelp(document).getStyle('#monsterStats');\nassert.exists(monsterStats);\n```\n\nYour `#monsterStats` selector should have a `border` of `1px solid #0a0a23`.\n\n```js\nconst border = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('border');\nassert.equal(border, '1px solid rgb(10, 10, 35)');\n```\n\nYour `#monsterStats` selector should have `5px` of padding.\n\n```js\nconst padding = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('padding');\nassert.equal(padding, '5px');\n```\n\nYour `#monsterStats` selector should have a `color` of `#ffffff`.\n\n```js\nconst color = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('color');\nassert.equal(color, 'rgb(255, 255, 255)');\n```\n\nYour `#monsterStats` selector should have a `background-color` of `#c70d0d`.\n\n```js\nconst background = new __helpers.CSSHelp(document).getStyle('#monsterStats')?.getPropertyValue('background-color');\nassert.equal(background, 'rgb(199, 13, 13)');\n```"
    },
    {
      "title": "Step 18",
      "description": "Use `querySelector()` to get the other two `button` elements using their `id`s: `button2` and `button3`. Store them in variables called `button2` and `button3`. Remember to use `const`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\"></div>\n      <div id=\"text\"></div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\n--fcc-editable-region--\nconst button1 = document.querySelector(\"#button1\");\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare a `button2` variable with `const`.\n\n```js\nassert.match(code, /const\\s+button2/);\n```\n\nYour `button2` variable should have the value of your `\"#button2\"` element.\n\n```js\nassert.match(code, /const\\s+button2\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#button2\\1\\s*\\)/);\n```\n\nYou should declare a `button3` variable with `const`.\n\n```js\nassert.match(code, /const\\s+button3/);\n```\n\nYour `button3` variable should have the value of your `\"#button3\"` element.\n\n```js\nassert.match(code, /const\\s+button3\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#button3\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 30",
      "description": "Finally, use `querySelector()` to get the `#monsterHealth` element. Because you have already declared a `monsterHealth` variable earlier, you need to use a different variable name for this element.\n\nDeclare a new variable with the `const` keyword and name it `monsterHealthText`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\n--fcc-editable-region--\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare a `monsterHealthText` variable with `const`.\n\n```js\nassert.match(code, /const\\s+monsterHealthText/);\n```\n\nYour `monsterHealthText` variable should have the value of your `#monsterHealth` element.\n\n```js\nassert.deepEqual(monsterHealthText, document.querySelector('#monsterHealth'));\n```"
    },
    {
      "title": "Step 28",
      "description": "Finally, you will need to add some styles for your buttons. Start by setting the `cursor` property to `pointer`. Then set the text `color` to `#0a0a23` and the `background-color` to `#feac32`.\n\nThen set the `background-image` property to `linear-gradient(#fecc4c, #ffac33)`. Lastly, set the `border` to `3px solid #feac32`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector(\"#button1\");\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");"
        }
      ],
      "testCode": "You should have a `button` selector.\n\n```js\nconst btn = new __helpers.CSSHelp(document).getStyle('button');\nassert.exists(btn);\n```\n\nYour `button` selector should have a `cursor` property set to `pointer`.\n\n```js\nconst cursor = new __helpers.CSSHelp(document).getStyle('button')?.getPropertyValue('cursor');\nassert.equal(cursor, 'pointer');\n```\n\nYour `button` selector should have a `color` property set to `#0a0a23`.\n\n```js\nconst color = new __helpers.CSSHelp(document).getStyle('button')?.getPropertyValue('color');\nassert.equal(color, 'rgb(10, 10, 35)');\n```\n\nYour `button` selector should have a `background-color` property set to `#feac32`.\n\n```js\nconst backgroundColor = new __helpers.CSSHelp(document).getStyle('button')?.getPropertyValue('background-color');\nassert.equal(backgroundColor, 'rgb(254, 172, 50)');\n```\n\nYour `button` selector should have a `background-image` property set to `linear-gradient(#fecc4c, #ffac33)`.\n\n```js\nconst backgroundImage = new __helpers.CSSHelp(document).getStyle('button')?.getPropertyValue('background-image');\nassert.equal(backgroundImage, 'linear-gradient(rgb(254, 204, 76), rgb(255, 172, 51))');\n```\n\nYour `button` selector should have a `border` property set to `3px solid #feac32`.\n\n```js\nconst border = new __helpers.CSSHelp(document).getStyle('button')?.getPropertyValue('border');\nassert.equal(border, '3px solid rgb(254, 172, 50)');\n```"
    },
    {
      "title": "Step 141",
      "description": "In order for the `&#x2620;` emoticon text to properly display on the page, you will need to use the <dfn>innerHTML</dfn> property. \n\nThe `innerHTML` property allows you to access or modify the content inside an HTML element using JavaScript. \n \nHere is an example of updating the content for this paragraph element using the `innerHTML`  property.\n\n```html\n<p id=\"demo\">This is a paragraph.</p>\n```\n\n```js\ndocument.querySelector(\"#demo\").innerHTML = \"Hello, innerHTML!\";\n```\n \nIn the `update` function, change `text.innerText` to `text.innerHTML`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  },\n  {\n    name: \"fight\",\n    \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n    \"button functions\": [attack, dodge, goTown],\n    text: \"You are fighting a monster.\"\n  },\n  {\n    name: \"kill monster\",\n    \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n    \"button functions\": [goTown, goTown, goTown],\n    text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n  },\n  {\n    name: \"lose\",\n    \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n    \"button functions\": [restart, restart, restart],\n    text: \"You die. &#x2620;\"\n  }\n\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  --fcc-editable-region--\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n  --fcc-editable-region--\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeaponIndex].name + \".\";\n  health -= monsters[fighting].level;\n  monsterHealth -= weapons[currentWeaponIndex].power + Math.floor(Math.random() * xp) + 1;\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n   if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    if (fighting === 2) {\n      winGame();\n    } else {\n      defeatMonster();\n    }\n  }\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeaponIndex = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}"
        }
      ],
      "testCode": "You should use dot notation to access the `innerHTML` property of `text`.\n\n```js\nassert.match(code, /text\\.innerHTML/);\n```\n\nYou should not use `let` or `const` to access the `innerHTML` property of `text`.\n\n```js\nassert.notMatch(code, /(let|const)\\s+text.innerHTML/);\n```\n\nYou should set `innerHTML` equal to the `text` property of `location`.\n\n```js\nassert.match(code, /text\\.innerHTML\\s*=\\s*location\\.text/);\n```"
    },
    {
      "title": "Step 48",
      "description": "Before you can begin to build out your `locations` array, you will first need to learn about <dfn>objects</dfn>. Objects are an important data type in JavaScript. The next few steps will be dedicated to learning about them so you will better understand how to apply them in your project.\n\nObjects are non primitive data types that store key-value pairs. Non primitive data types are mutable data types that are not `undefined`, `null`, `boolean`, `number`, `string`, or `symbol`. Mutable means that the data can be changed after it is created.\n\nHere is the basic syntax for an object:\n\n```js\n{\n  key: value\n}\n```\n\nYou will learn about keys and values in the next few steps. \n\nFor now, create a `const` variable called `cat` and assign it an empty object `{}`.\n\nBelow that `cat` variable, add a `console.log(cat)` statement to see the object in the console.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [];\n--fcc-editable-region--\n\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should have a `const` variable called `cat`.\n\n```js\nassert.match(code, /const\\s+cat\\s*=/);\n```\n\nYou should assign an empty object to the `cat` variable.\n\n```js\nassert.deepEqual(cat, {});\n```\n\nYou should have a `console.log` statement that logs the `cat` object.\n\n```js\nassert.match(code, /console\\.log\\(cat\\)/);\n```"
    },
    {
      "title": "Step 49",
      "description": "Objects are similar to arrays, except that instead of using indexes to access and modify their data, you access the data in objects through properties.\n\nProperties consist of a key and a value. The key is the name of the property, and the value is the data stored in the property.\n\nHere is an example of an object with a single property:\n\n```js\nconst obj = {\n  name: \"Quincy Larson\"\n};\n```\n\nInside your `cat` object, add a new property. The key should be `name` and the value should be the string `\"Whiskers\"`.\n\nOpen up the console to see the updates to your object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [];\n--fcc-editable-region--\nconst cat = {\n\n}\n--fcc-editable-region--\nconsole.log(cat)\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your `cat` object should have a key called `name`.\n\n```js\nassert.property(cat, \"name\");\n```\n\nYour `cat` object should have a `name` property with a value of `\"Whiskers\"`.\n\n```js\nassert.propertyVal(cat, \"name\", \"Whiskers\");\n```\n\nYour `cat` object should have one property.\n\n```js\nassert.lengthOf(Object.keys(cat), 1);\n```"
    },
    {
      "title": "Step 51",
      "description": "There are two ways to access the properties of an object: dot notation (`.`) and bracket notation (`[]`), similar to an array.\n\nDot notation is what you use when you know the name of the property you're trying to access ahead of time.\n\n```js\nobject.property;\n```\n\nHere is a sample of using dot notation (`.`) to read the `name` property of the `developer` object:\n\n```js\nconst developer = {\n  name: \"Jessica\",\n}\n\n// Output: Jessica\nconsole.log(developer.name); \n```\n\nUpdate your console statement to access the `name` property of the `cat` object using dot notation.\n\nOpen up the console to see the `name` of `\"Whiskers\"` logged to the console.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [];\nconst cat = {\n  name: \"Whiskers\",\n  \"Number of legs\": 4,\n}\n--fcc-editable-region--\nconsole.log(cat)\n--fcc-editable-region--\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your console statement should now have the value of `cat.name`.\n\n```js\nassert.match(code, /console.log\\(\\s*cat\\.name\\s*\\)/);\n```"
    },
    {
      "title": "Step 52",
      "description": "The second way to access the properties of an object is bracket notation (`[]`). If the property of the object you are trying to access has a space in its name, you will need to use bracket notation.\n\n```js\nobjectName[\"property name\"];\n```\n\nHere is a sample of using bracket notation to read an object's property:\n\n```js\nconst spaceObj = {\n  \"Space Name\": \"Kirk\",\n};\n\nspaceObj[\"Space Name\"]; // \"Kirk\"\n```\n\nUpdate your console statement to use bracket notation to access the property `\"Number of legs\"` of the `cat` object.\n\nOpen up the console to see the output.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [];\n\nconst cat = {\n  name: \"Whiskers\",\n  \"Number of legs\": 4,\n}\n--fcc-editable-region--\nconsole.log(cat.name);\n--fcc-editable-region--\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your console statement should now have the value of `cat[\"Number of legs\"]`.\n\n```js\nassert.match(code, /console.log\\(\\s*cat\\[('|\")Number\\s+of\\s+legs\\1\\]\\s*\\)/);\n```"
    },
    {
      "title": "Step 50",
      "description": "If the property name (key) of an object has a space in it, you will need to use single or double quotes around the name. \n\nHere is an example of an object with a property name that has a space:\n\n```js\nconst spaceObj = {\n  \"Space Name\": \"Kirk\",\n};\n```\n\nIf you tried to write a key without the quotes, it would throw an error:\n\n```js\nconst spaceObj = {\n  // Throws an error\n  Space Name: \"Kirk\",\n}; \n\n```\n\nAdd a new property with a key of `\"Number of legs\"` and value of `4` to the `cat` object.\n\nOpen up the console to see the output.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [];\n--fcc-editable-region--\nconst cat = {\n  name: \"Whiskers\",\n};\n--fcc-editable-region--\nconsole.log(cat)\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "Your `cat` object should have a key called `\"Number of legs\"`.\n\n```js\nassert.property(cat, \"Number of legs\");\n```\n\nYour `cat` object should have a `\"Number of legs\"` property with a value of `4`.\n\n```js\nassert.propertyVal(cat, \"Number of legs\", 4);\n```\n\nYour `cat` object should have two properties.\n\n```js\nassert.lengthOf(Object.keys(cat), 2);\n```"
    },
    {
      "title": "Step 53",
      "description": "Later on in the curriculum, you will dive deeper into objects. But for now, it is time to apply what you have learned to your role playing game.\n\nStart by deleting your `cat` object and console statement.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst locations = [];\n\n--fcc-editable-region--\nconst cat = {\n  name: \"Whiskers\",\n  \"Number of legs\": 4,\n}\nconsole.log(cat[\"Number of legs\"]);\n--fcc-editable-region--\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n\n}\n\nfunction goTown() {\n  button1.innerText = \"Go to store\";\n  button2.innerText = \"Go to cave\";\n  button3.innerText = \"Fight dragon\";\n  button1.onclick = goStore;\n  button2.onclick = goCave;\n  button3.onclick = fightDragon;\n  text.innerText = \"You are in the town square. You see a sign that says \\\"Store\\\".\";\n}\n\nfunction goStore() {\n  button1.innerText = \"Buy 10 health (10 gold)\";\n  button2.innerText = \"Buy weapon (30 gold)\";\n  button3.innerText = \"Go to town square\";\n  button1.onclick = buyHealth;\n  button2.onclick = buyWeapon;\n  button3.onclick = goTown;\n  text.innerText = \"You enter the store.\";\n}\n\nfunction goCave() {\n  console.log(\"Going to cave.\");\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n\n}\n\nfunction buyWeapon() {\n\n}"
        }
      ],
      "testCode": "You should remove your `cat` object.\n\n```js\nassert.notInclude(code, \"const cat = {\");\n```\n\nYou should remove your console statement.\n\n```js\nassert.notInclude(code, \"console.log(cat[\\\"Number of legs\\\"]);\");\n```"
    },
    {
      "title": "Step 97",
      "description": "Now it is time to test your `buyWeapon` function. Right now, the `gold` amount is set to `50`. But to properly see the results of your `buyWeapon` function, the amount should be set to something higher. \n\nUpdate the `gold` amount to `250`. \n\n*NOTE*: The HTML has already been updated to reflect this change.\n\nTo test your `buyWeapon` function, open up the console. Then click on the `\"Go to store\"` button followed by the `\"Buy weapon (30 gold)\"` button four times.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">250</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\n--fcc-editable-region--\nlet gold = 50;\n--fcc-editable-region--\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  }\n}\n\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `gold` amount should be set to `250`.\n\n```js\nassert.strictEqual(gold, 250);\n```"
    },
    {
      "title": "Step 100",
      "description": "Now that you are finished testing that portion of the `buyWeapon` function, you can set your `gold` variable back to `50`.\n\n*Note*: The HTML has already been updated to reflect the original value of `gold`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "let xp = 0;\nlet health = 100;\n--fcc-editable-region--\nlet gold = 250;\n--fcc-editable-region--\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n  }\n}\n\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}"
        }
      ],
      "testCode": "Your `gold` variable should be set to `50`.\n\n```js\nassert.equal(gold, 50);\n```"
    }
  ]
}