{
  "title": "Review Js Fundamentals By Building A Gradebook App",
  "description": "A project-based course on javascript imported from freeCodeCamp.",
  "language": "javascript",
  "lessons": [
    {
      "title": "Step 1",
      "description": "A teacher has finished grading their students' tests and needs your help to calculate the average score for the class.\n\nComplete the `getAverage` function which takes in an array of test scores and returns the average score.\n\nThe average is calculated by adding up all the scores and dividing by the total number of scores.\n\n```md\naverage = sum of all scores / total number of scores\n```\n\nA couple of function calls have been provided for you so you can test out your code.\n\n**Tips**\n\n- You can use a loop to iterate over the `scores` array and add up all the scores.\n- You can use the `length` property to get the total number of scores.",
      "files": [
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\nfunction getAverage(scores) {\n\n}\n\nconsole.log(getAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89]));\nconsole.log(getAverage([45, 87, 98, 100, 86, 94, 67, 88, 94, 95]));\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `getAverage` function should return a number.\n\n```js\nassert.strictEqual(typeof getAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89]), 'number');\n```\n\n`getAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89])` should return `71.7`.\n\n```js\nassert.strictEqual(getAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89]), 71.7);\n```\n\n`getAverage([45, 87, 98, 100, 86, 94, 67, 88, 94, 95])` should return `85.4`.\n\n```js\nassert.strictEqual(getAverage([45, 87, 98, 100, 86, 94, 67, 88, 94, 95]), 85.4);\n```\n\n`getAverage([38, 99, 87, 100, 100, 100, 100, 100, 100, 100])` should return `92.4`.\n\n```js\nassert.strictEqual(getAverage([38, 99, 87, 100, 100, 100, 100, 100, 100, 100]), 92.4);\n```\n\nYour `getAverage` function should return the average score of the test scores.\n\n```js\nassert.strictEqual(getAverage([52, 56, 60, 65, 70, 75, 80, 85, 90, 95]), 72.8);\nassert.strictEqual(getAverage([45, 50, 55, 60, 65, 70, 75, 80, 85, 90]), 67.5);\nassert.strictEqual(getAverage([38, 42, 46, 50, 54, 58, 62, 66, 70, 74]), 56);\n```"
    },
    {
      "title": "Step 2",
      "description": "Now the teacher needs your help converting the student score to a letter grade.\n\nComplete the `getGrade` function that takes a number `score` as a parameter. Your function should return a string representing a letter grade based on the score.\n\nHere are the scores and their corresponding letter grades:\n\n| Score Range | Grade   |\n| ----------- | ------- |\n| `100`       | `\"A++\"` |\n| `90 - 99`   | `\"A\"`   |\n| `80 - 89`   | `\"B\"`   |\n| `70 - 79`   | `\"C\"`   |\n| `60 - 69`   | `\"D\"`   |\n| `0 - 59`    | `\"F\"`   |\n\n\n**Tips**\n\n- Remember that you learned about conditional statements (`if`, `else if`, and `else`).\n- Remember that you learned about comparison operators (`>`, `<`, `>=`, `<=`, `===`).\n- Remember that you learned about the logical AND operator (`&&`).",
      "files": [
        {
          "name": "script.js",
          "language": "js",
          "content": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n--fcc-editable-region--\nfunction getGrade(score) {\n\n}\n\nconsole.log(getGrade(96));\nconsole.log(getGrade(82));\nconsole.log(getGrade(56));\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `getGrade` function should return `\"A++\"` if the score is `100`.\n\n```js\nassert.strictEqual(getGrade(100), \"A++\");\n```\n\nYour `getGrade` function should return `\"A\"` if the score is `94`.\n\n```js\nassert.strictEqual(getGrade(94), \"A\");\n```\n\nYour `getGrade` function should return `\"B\"` if the score is between `80` and `89`.\n\n```js\nassert.strictEqual(getGrade(80), \"B\");\nassert.strictEqual(getGrade(83), \"B\");\nassert.strictEqual(getGrade(88), \"B\");\n```\n\nYour `getGrade` function should return `\"C\"` if the score is `78`.\n\n```js\nassert.strictEqual(getGrade(75), \"C\");\n```\n\nYour `getGrade` function should return `\"D\"` if the score is between `60` and `69`.\n\n```js\nassert.strictEqual(getGrade(60), \"D\");\nassert.strictEqual(getGrade(63), \"D\");\nassert.strictEqual(getGrade(68), \"D\");\n```\n\nYour `getGrade` function should return `\"F\"` if the score is `57`.\n\n```js\nassert.strictEqual(getGrade(57), \"F\");\n```\n\nYour `getGrade` function should return `\"F\"` if the score is between `0` and `59`.\n\n```js\nassert.strictEqual(getGrade(0), \"F\");\nassert.strictEqual(getGrade(30), \"F\");\nassert.strictEqual(getGrade(43), \"F\");\n```"
    },
    {
      "title": "Step 3",
      "description": "The teacher is really happy with the program you have created so far. But now they want to have an easy way to check if a student has a passing grade. A passing grade is anything that is not an `\"F\"`.\n\nComplete the function `hasPassingGrade` that takes a student score as a parameter. Your function should return `true` if the student has a passing grade and `false` if they do not.\n\n**Tips**\n\n- Use the `getGrade` function to get the student's grade. Then check if the grade is passing or not.",
      "files": [
        {
          "name": "script.js",
          "language": "js",
          "content": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\n--fcc-editable-region--\nfunction hasPassingGrade(score) {\n  \n}\n\n\nconsole.log(hasPassingGrade(100));\nconsole.log(hasPassingGrade(53));\nconsole.log(hasPassingGrade(87));\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `hasPassingGrade` function should return a boolean value.\n\n```js\nassert.strictEqual(typeof hasPassingGrade(100), \"boolean\");\n```\n\nYour `hasPassingGrade` function should return `true` if the grade is an `\"A\"`.\n\n```js\nassert.isTrue(hasPassingGrade(100));\n```\n\nYour `hasPassingGrade` function should return `false` if the grade is an `\"F\"`.\n\n```js\nassert.isFalse(hasPassingGrade(53));\n```\n\nYour `hasPassingGrade` function should return `true` for all passing grades.\n\n```js\nassert.isTrue(hasPassingGrade(87));\nassert.isTrue(hasPassingGrade(60));\nassert.isTrue(hasPassingGrade(73));\nassert.isTrue(hasPassingGrade(96));\n```"
    },
    {
      "title": "Step 4",
      "description": "Now that the teacher has all of the information they need, they want to be able to message the student with the results. \n\nComplete the `studentMsg` function with `totalScores` and `studentScore` for parameters. The function should return a string representing a message to the student.\n\nIf the student passed the course, the string should follow this format:\n\n```md\nClass average: average-goes-here. Your grade: grade-goes-here. You passed the course.\n```\n\nIf the student failed the course, the string should follow this format:\n\n```md\nClass average: average-goes-here. Your grade: grade-goes-here. You failed the course.\n```\n\nReplace `average-goes-here` with the average of the total scores. \nReplace `grade-goes-here` with the student's grade.\n\n**Tips**\n\n- Use the `getAverage` function to get the class average.\n- Use the `getGrade` function to get the student's grade.\n- Use string concatenation (`+`) to build the message. \n- Be careful with the punctuation and spaces in the message.",
      "files": [
        {
          "name": "script.js",
          "language": "js",
          "content": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\nfunction hasPassingGrade(score) {\n  return getGrade(score) !== \"F\";\n}\n\n--fcc-editable-region--\nfunction studentMsg(totalScores, studentScore) {\n\n}\nconsole.log(studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37));\n--fcc-editable-region--"
        }
      ],
      "testCode": "`studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37)` should return the following message: `\"Class average: 71.7. Your grade: F. You failed the course.\"`.\n\n```js\nassert.strictEqual(studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37), \"Class average: 71.7. Your grade: F. You failed the course.\");\n```\n\n`studentMsg([56, 23, 89, 42, 75, 11, 68, 34, 91, 19], 100)` should return the following message: `\"Class average: 50.8. Your grade: A++. You passed the course.\"`.\n\n```js\nassert.strictEqual(studentMsg([56, 23, 89, 42, 75, 11, 68, 34, 91, 19], 100), \"Class average: 50.8. Your grade: A++. You passed the course.\");\n```\n\nYour `studentMsg` function should return the correct message based on the student's score and the class average.\n\n```js\nassert.strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 92), \"Class average: 70.25. Your grade: A. You passed the course.\");\nassert.strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 57), \"Class average: 70.25. Your grade: F. You failed the course.\");\n```"
    }
  ]
}