{
  "title": "Learn Asynchronous Programming By Building An Fcc Forum Leaderboard",
  "description": "A project-based course on javascript imported from freeCodeCamp.",
  "language": "javascript",
  "lessons": [
    {
      "title": "Step 4",
      "description": "To populate the forum leaderboard with data, you will need to request the data from an API. This is known as an <dfn>asynchronous</dfn> operation, which means that tasks execute independently of the main program flow. \n\nYou can use the `async` keyword to create an asynchronous function, which returns a promise.\n\n```js\nconst example = async () => {\n  console.log(\"this is an example\");\n};\n```\n\nUse the `async` keyword to create an asynchronous arrow function called `fetchData`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `async` keyword to create an asynchronous arrow function called `fetchData`.\n\n```js\nassert.match(code, /const\\s+fetchData\\s*=\\s*async\\s*\\(\\s*\\)\\s*=>\\s*{\\s*[^}]*\\s*}/);\n```\n\n`fetchData` should be defined.\n\n```js\nassert.isDefined(fetchData);\n```\n\n`fetchData` should be a function.\n\n```js\nassert.isFunction(fetchData);\n```"
    },
    {
      "title": "Step 6",
      "description": "In the previous project, you used `fetch()` with the `.then()` method to perform logic after the promise was resolved. Now you will use the `await` keyword to handle the asynchronous nature of the `fetch()` method.\n\nThe `await` keyword waits for a promise to resolve and returns the result.\n\n```js\nconst example = async () => {\n  const data = await fetch(\"https://example.com/api\");\n  console.log(data);\n}\n```\n\nInside the `try` block, create a constant called `res` and assign it `await fetch()`. For the `fetch` call, pass in the `forumLatest` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst fetchData = async () => {\n  try {\n\n  } catch (err) {\n\n  }\n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should have a constant called `res` inside your `try` block.\n\n```js\nassert.match(code, /\\s*const\\s+res/)\n```\n\nYou should assign `await fetch()` to your `res` variable.\n\n```js\nassert.match(code, /\\s*const\\s+res\\s*=\\s*await\\s+fetch\\(\\s*(.*)\\s*\\)/);\n```\n\nYou should pass in the `forumLatest` constant to the `fetch` call.\n\n```js\nassert.match(code, /const\\s+fetchData\\s*=\\s*async\\s*\\(\\s*\\)\\s*=>\\s*{\\s*try\\s*{\\s*const\\s+res\\s*=\\s*await\\s+fetch\\(\\s*forumLatest\\s*\\)\\s*;?\\s*}\\s*catch\\s*\\(\\s*err\\s*\\)\\s*{\\s*}\\s*}/);\n```"
    },
    {
      "title": "Step 7",
      "description": "You want to get the response body as a JSON object. The `.json()` method of your `res` variable returns a promise, which means you will need to `await` it.\n\nCreate a constant called `data` and assign it the value of `await res.json()`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n\n  } catch (err) {\n\n  }\n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should have a `const` variable named `data`.\n\n```js\nassert.match(code, /const\\s+data/);\n```\n\nYou should assign `await res.json()` to the `data` variable.\n\n```js\nassert.match(code, /\\s*const\\s+data\\s*=\\s*await\\s+res\\.json\\(\\s*\\)\\s*;?\\s*/);\n```"
    },
    {
      "title": "Step 8",
      "description": "To view the data results, log the `data` variable to the console inside your `try` block. \n\nBelow your `fetchData` definition, call the function and open up the console to see the results.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    \n  } catch (err) {\n    \n  }\n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `console.log` to log the `data` variable to the console.\n\n```js\nassert.match(code, /\\s*console\\.log\\(\\s*data\\s*\\)/);\n```\n\nYour `console.log` should be inside the `try` block.\n\n```js\nassert.match(code, /\\s*try\\s*{[\\s\\S]*\\s*console\\.log\\(\\s*data\\s*\\)[\\s\\S]*}\\s*catch\\s*\\(\\s*err\\s*\\)\\s*{\\s*}/);\n```\n\nYou should call the `fetchData()` function, after the `fetchData()` function is defined.\n\n```js\nassert.match(code, /}\\s*;?\\s*fetchData\\(\\s*\\)/);\n```"
    },
    {
      "title": "Step 10",
      "description": "Now it is time to display the data on the page.\n\nStart by creating an arrow function called `showLatestPosts`, which takes a single `data` parameter.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should have an arrow function called `showLatestPosts`.\n\n```js\nassert.match(code, /const\\s+showLatestPosts\\s*=\\s*(\\([^)]*\\)|[^\\s()]+)\\s*=>\\s*/);\n```\n\nYour `showLatestPosts` function should have a `data` parameter.\n\n```js\nassert.match(code, /showLatestPosts\\s*=\\s*(\\(\\s*data\\s*\\)|data)\\s*=>/);\n```\n\n`showLatestPosts` should be defined.\n\n```js\nassert.isDefined(showLatestPosts);\n```\n\n`showLatestPosts` should be a function.\n\n```js\nassert.isFunction(showLatestPosts);\n```"
    },
    {
      "title": "Step 11",
      "description": "As you build out your `showLatestPosts()` function, you'll need to call it to see your changes.\n\nCall the `showLatestPosts()` function at the end of your `try` block and pass in `data` for the argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    \n  } catch (err) {\n    console.log(err);\n  }\n};\n--fcc-editable-region--\n\nfetchData();\n\nconst showLatestPosts = (data) => {};"
        }
      ],
      "testCode": "You should call `showLatestPosts()` at the end of your `try` block.\n\n```js\nassert.match(code, /\\s*showLatestPosts\\(.*\\)\\s*;?\\s*/);\n```\n\nYou should pass `data` as the argument to `showLatestsPosts()`.\n\n```js\nassert.match(code, /\\s*showLatestPosts\\(\\s*data\\s*\\)\\s*;?\\s*/);\n```"
    },
    {
      "title": "Step 12",
      "description": "Back in your `showLatestPosts()` function, use destructuring to get the `topic_list` and `users` properties from the `data` object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\n--fcc-editable-region--\nconst showLatestPosts = (data) => {\n\n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `const` to destructure `topic_list` and `users` from the `data` object.\n  \n```js\nassert.match(code, /const\\s*{\\s*(topic_list\\s*,\\s*users|users\\s*,\\s*topic_list)\\s*}\\s*=\\s*data/);\n```"
    },
    {
      "title": "Step 13",
      "description": "The `topic_list` object contains a `topics` array which contains the latest topics posted to the forum.\n\nDestructure the `topics` array from the `topic_list` object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\n--fcc-editable-region--\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  \n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `const` to destructure the `topics` variable from the `topic_list` object.\n\n```js\nassert(code.match(/\\s*const\\s*\\{\\s*topics\\s*\\}\\s*=\\s*topic_list\\s*;?\\s*/g));\n```"
    },
    {
      "title": "Step 14",
      "description": "Now it is time to start populating the data inside the `postsContainer`.\n\nStart by calling the `map()` method on your `topics` array. For the callback function, use an empty arrow function that takes `item` as a parameter.\n\nThen assign the result of the `map()` method to `postsContainer.innerHTML`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\n--fcc-editable-region--\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n  \n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `map()` method on the `topics` array.\n\n```js\nassert.match(code, /topics\\.map\\(.*/);\n```\n\nYou should add a callback function to the `map()` method that has `item` for the parameter name.\n\n```js\nassert.match(code, /topics\\.map\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>/g);\n```\n\nThe body of the callback function should be empty.\n\n```js\nassert.match(code, /topics\\.map\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*{\\s*}/g);\n```\n\nYou should assign the result of the `map()` method to `postsContainer.innerHTML`.\n\n```js\nassert.match(code, /postsContainer\\.innerHTML\\s*=\\s*topics\\.map\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*{\\s*}/g);\n```"
    },
    {
      "title": "Step 15",
      "description": "Inside the `map` method, destructure the following properties from the `item` object:\n\n* `id`\n* `title`\n* `views`\n* `posts_count`\n* `slug`\n* `posters`\n* `category_id`\n* `bumped_at`",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n  --fcc-editable-region--\n  postsContainer.innerHTML = topics.map((item) => {\n  \n  });\n  --fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should destructure the `id`, `title`, `views`, `posts_count`, `slug`, `posters`, `category_id`, `bumped_at` properties from the `item` object.\n\n```js\nassert.match(code, /const\\s*\\{\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,\\s*(id|title|views|posts_count|slug|posters|category_id|bumped_at)\\s*,?\\s*\\}\\s*=\\s*item/);\n```"
    },
    {
      "title": "Step 16",
      "description": "The next step is to build out the table which will display the forum data.\n\nBelow your destructuring assignment, add a `return` keyword followed by a set of template literals. Inside those template literals, add a table row `tr` element.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  --fcc-editable-region--\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n  });\n  --fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should return a set of template literals.\n\n```js\nassert.match(code, /return\\s*`[\\s\\S]*`/);\n```\n\nYour template literals should contain an empty `tr` element.\n\n```js\nassert.match(code, /return\\s*`\\s*<tr>\\s*<\\/tr>\\s*`/);\n```"
    },
    {
      "title": "Step 18",
      "description": "Inside your `tr` element, add five empty `td` elements.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n  --fcc-editable-region--\n    return `\n      <tr>\n      \n      </tr>\n    `;\n  --fcc-editable-region--\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "Your `tr` element should contain five `td` elements.\n\n```js\nassert(/return\\s*`\\s*<tr>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<\\/tr>\\s*`/.test(code));\n```"
    },
    {
      "title": "Step 19",
      "description": "To display the topic title, add a `p` element inside the first `td` element.\n\nBetween the paragraph tags, add an embedded expression that contains the  `title` variable. Then add a class called `\"post-title\"` inside the opening paragraph tag.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n  --fcc-editable-region--\n    return `\n    <tr>\n      <td>\n      \n      </td>\n  --fcc-editable-region--\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a `p` element inside the first `td` element.\n\n```js\nassert(/return\\s*`\\s*<tr>\\s*<td>\\s*\\S*\\s*<p.*>\\s*.*\\s*<\\/p>\\s*\\S*\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<td>.*<\\/td>\\s*<\\/tr>\\s*`/.test(code));\n```\n\nYou should have a class named `\"post-title\"` inside the opening `p` tag.\n\n```js\nassert(/return\\s*`\\s*<tr>\\s*<td>\\s*\\S*\\s*<p[^>]*class\\s*=\\s*('|\")\\s*post-title\\s*\\1[^>]*>.*<\\/p>\\s*\\S*\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<td>.*<\\/td>\\s*<\\/tr>\\s*`/.test(code));\n\n```\n\nYou should have the `title` variable between the paragraph tags.\n\n```js\nassert(/return\\s*`\\s*<tr>\\s*<td>\\s*\\S*\\s*<p[^>]*class\\s*=\\s*('|\")\\s*post-title\\s*\\1[^>]*>\\${title}\\s*<\\/p>\\s*\\S*\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<td>.*<\\/td>\\s*<\\/tr>\\s*`/.test(code));\n```"
    },
    {
      "title": "Step 20",
      "description": "Keep the second `td` element empty because you will add content to it later on. \n\nIn the third `td` element, add the following embedded expression: `${posts_count - 1}`.\n\nThis will display the number of replies to the topic.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    --fcc-editable-region--\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>\n      \n      </td>\n    --fcc-editable-region--\n      <td></td>\n      <td></td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have `${posts_count - 1}` inside the third `td` element.\n\n```js\nassert(/return\\s*`\\s*<tr>\\s*<td>\\s*<p[^>]*class\\s*=\\s*('|\")\\s*post-title\\s*\\1[^>]*>\\s*\\${title}\\s*<\\/p>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*\\${posts_count\\s*-\\s*1}\\s*<\\/td>\\s*<td>\\s*\\S*\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<\\/tr>\\s*`/.test(code));\n```"
    },
    {
      "title": "Step 21",
      "description": "In the fourth `td` element, add an embedded expression that contains the `views` variable. This will display the number of views the post has.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    --fcc-editable-region--\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>\n      \n      </td>\n    --fcc-editable-region--\n      <td></td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should add an embedded expression that contains the `views` variable.\n\n```js\nassert(/return\\s*`\\s*<tr>\\s*<td>\\s*<p[^>]*class\\s*=\\s*('|\")\\s*post-title\\s*\\1[^>]*>\\s*\\${title}\\s*<\\/p>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*\\${posts_count\\s*-\\s*1}\\s*<\\/td>\\s*<td>\\s*\\${views}\\s*<\\/td>\\s*<td>.*<\\/td>\\s*<\\/tr>\\s*`/.test(code));\n```"
    },
    {
      "title": "Step 22",
      "description": "To display data in the `Activity` column, you need to use the `bumped_at` property of each topic, which is a timestamp in the ISO 8601 format. You need to process this data before you can show how much time has passed since a topic had any activity.\n\nCreate a new `timeAgo` function with a `time` parameter.\n\nInside your `timeAgo` function, create two variables named `currentTime` and `lastPost` and set them to `new Date()` and `new Date(time)` respectively.\n\n`lastPost` will be the date of the last activity on a topic, and `currentTime` represents the current date and time.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${views}</td>\n      <td></td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should create a `timeAgo` function.\n\n```js\nassert.isFunction(timeAgo);\n```\n\nYour `timeAgo` function should have a `time` parameter.\n\n```js\nassert.match(timeAgo.toString(), /\\(time\\)/);\n```\n\nYou should have a `currentTime` variable inside your `timeAgo` function.\n\n```js\nassert.match(timeAgo.toString(), /currentTime\\s*=\\s*/);\n```\n\nYou should set the `currentTime` variable to `new Date()`.\n\n```js\nassert.match(timeAgo.toString(), /currentTime\\s*=\\s*new\\s*Date\\(\\)/);\n```\n\nYou should have a `lastPost` variable inside your `timeAgo` function.\n\n```js\nassert.match(timeAgo.toString(), /lastPost\\s*=\\s*/);\n```\n\nYou should set the `lastPost` variable to `new Date(time)`.\n\n```js\nassert.match(timeAgo.toString(), /lastPost\\s*=\\s*new\\s*Date\\(\\s*time\\s*\\)/);\n```"
    },
    {
      "title": "Step 23",
      "description": "For your `timeAgo` function, you will want to calculate the difference between the current time and the time of the last activity on a topic. This will allow you to display how much time has passed since a topic had any activity.\n\nComplete the `timeAgo` function that meets the following requirements:\n\n- If the amount of minutes that have passed is less than `60`, return the string `\"xm ago\"`. `x` will represent the minutes. \n- If the amount of hours that have passed is less than `24`, return the string `\"xh ago\"`. `x` will represent the hours. \n- Otherwise, return the string `\"xd ago\"`. `x` will represent the days. \n\nHere are some equations that will help you calculate the time difference:\n\n- `minutes = Math.floor((currentTime - lastPost) / 60000);`\n- `hours = Math.floor((currentTime - lastPost) / 3600000);`\n- `days = Math.floor((currentTime - lastPost) / 86400000);`",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n  \n  \n};\n--fcc-editable-region--\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${views}</td>\n      <td></td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should return the string `\"30m ago\"` when the amount of minutes that have passed is `30` minutes.\n\n```js\nconst currentTime = new Date();\nconst lastPostTime = new Date(currentTime.getTime() - 30 * 60 * 1000); \nconst result = timeAgo(lastPostTime.toISOString());\n\nassert.strictEqual(result, '30m ago');\n```\n\nYou should return the string `\"1h ago\"` when amount of hours that have passed is `1` hour.\n\n```js\nconst currentTime = new Date();\nconst lastPostTime = new Date(currentTime.getTime() - 60 * 60 * 1000);\nconst result = timeAgo(lastPostTime.toISOString());\n\nassert.strictEqual(result, '1h ago');\n```\n\nYou should return the string `\"1d ago\"` when the amount of days that have passed is `1` day.\n\n```js\nconst currentTime = new Date();\nconst lastPostTime = new Date(currentTime.getTime() - 24 * 60 * 60 * 1000);\nconst result = timeAgo(lastPostTime.toISOString());\n\nassert.strictEqual(result, '1d ago');\n```"
    },
    {
      "title": "Step 24",
      "description": "To display the time since the last post, call the `timeAgo` function and pass in the `bumped_at` variable for the argument. Place this function call inside the last `td` element.\n\nOnce you make those changes, scroll across the table to see the new values displayed in the `Activity` column.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n--fcc-editable-region--\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${views}</td>\n      <td>\n      \n      </td>\n    </tr>`;\n  }).join(\"\");\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should call the `timeAgo` function with the argument of `bumped_at` in the last `td` element.\n\n```js\nassert(code.match(/<tr>(?:.*<td>.*<\\/td>\\s*){2}<td>\\s*\\$\\{\\s*timeAgo\\(\\s*bumped_at\\s*\\)\\s*\\}\\s*<\\/td>\\s*<\\/tr>/s));\n```"
    },
    {
      "title": "Step 25",
      "description": "You need a function to convert view counts to a more readable format. For example, if the view count is `1000`, it should display as `1k` and if the view count is `100,000` it should display as `100k`.\n\nCreate a `viewCount` function with a `views` parameter. If `views` is greater than or equal to `1000`, return a string with the `views` value divided by `1000` and the letter `k` appended to it. Make sure to round `views / 1000` down to the nearest whole number.\n\nOtherwise, return the `views` value.\n\nFor example, if `views` is `1000` your return value should be the string `\"1k\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${views}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a function called `viewCount`.\n\n```js\nassert.isFunction(viewCount);\n```\n\nYour `viewCount` function should have a parameter called `views`.\n\n```js\nassert.match(viewCount.toString(), /\\(?views\\)?/);\n```\n\nYour `viewCount` function should return the string `\"1k\"` when `views` is `1000`.\n\n```js\nassert.strictEqual(viewCount(1000), \"1k\");\n```\n\nYour `viewCount` function should return the string `\"100k\"` when `views` is `100000`.\n\n```js\nassert.strictEqual(viewCount(100000), \"100k\");\n```\n\nYour `viewCount` function should return the correct string when `views` is greater than or equal to `1000`.\n\n```js\nassert.strictEqual(viewCount(10000), \"10k\");\nassert.strictEqual(viewCount(35000), \"35k\");\nassert.strictEqual(viewCount(99999), \"99k\");\n```\n\nYour `viewCount` function should return `views` when `views` is `200`.\n\n```js\nassert.strictEqual(viewCount(200), 200);\n```\n\nYour `viewCount` function should return `views` when `views` is less than `1000`.\n\n```js\nassert.strictEqual(viewCount(999), 999);\nassert.strictEqual(viewCount(500), 500);\nassert.strictEqual(viewCount(1), 1);\n```"
    },
    {
      "title": "Step 26",
      "description": "Inside the fourth `td` element, update the current value to instead call the `viewCount` function with the `views` variable as an argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n--fcc-editable-region--\n      <td>${views}</td>\n--fcc-editable-region--\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should call the `viewCount` function and pass in the `views` variable as an argument.\n  \n```js\nassert(code.match(/<tr>(?:.*<td>.*<\\/td>\\s*){3}<td>\\s*\\$\\{\\s*viewCount\\s*\\(\\s*views\\s*\\)\\s*\\}\\s*<\\/td>.*<\\/tr>/s));\n```"
    },
    {
      "title": "Step 31",
      "description": "The rest of the `allCategories` object has been completed for you.\n\nIn the next few steps, you will create a function to retrieve the category name from the `allCategories` object.\n\nStart by creating an arrow function named `forumCategory`, with `id` as the parameter name.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You need to create an empty function named `forumCategory`.\n\n```js\nassert.match(code, /\\s*const\\s+forumCategory\\s*=\\s*(\\([^)]*\\)|[^\\s()]+)\\s*=>\\s*{\\s*}\\s*/);\n```\n\nYou should have a parameter named `id` in the `forumCategory` function.\n\n```js\nassert.match(code, /\\s*const\\s+forumCategory\\s*=\\s*(\\(\\s*id\\s*\\)|id)\\s*=>\\s*{\\s*}/);\n```"
    },
    {
      "title": "Step 32",
      "description": "Inside your `forumCategory` function, create a new `let` variable named `selectedCategory` and assign it an empty object. This will be used to store the category name and class name for each category.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\n--fcc-editable-region--\nconst forumCategory = (id) => {\n  \n};\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should use `let` to declare a variable named `selectedCategory`. \n\n```js\nassert.match(code, /\\s*let\\s+selectedCategory\\s*/);\n```\n\nYou should assign an empty object to the `selectedCategory` variable.\n\n```js\nassert.match(code, /\\s*let\\s+selectedCategory\\s*=\\s*{\\s*}\\s*/);\n```"
    },
    {
      "title": "Step 33",
      "description": "Create an `if` statement to check if the `allCategories` object has a property of `id`. Remember, you can use the `hasOwnProperty()` method for this.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\n--fcc-editable-region--\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n  \n};\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have an `if` statement that checks if the `allCategories` object has a property of `id`\n\n```js\nassert(code.match(/if\\s*\\(\\s*allCategories\\s*\\.hasOwnProperty\\s*\\(\\s*id\\s*\\)\\s*\\)/));\n```"
    },
    {
      "title": "Step 34",
      "description": "Inside the `if` statement, destructure `className` and `category` from the `allCategories[id]` object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\n--fcc-editable-region--\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n  \n  }\n};\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should destructure `className` and `category` from the `allCategories[id]` object. The properties can be in any order.\n\n```js\nassert(code.match(/const\\s*\\{\\s*(className|category)\\s*,\\s*(className|category)\\s*\\}\\s*=\\s*allCategories\\s*\\[\\s*id\\s*\\]\\s*/g));\n```"
    },
    {
      "title": "Step 35",
      "description": "You now need to add the `className` and `category` properties to your `selectedCategory` object.\n\nStart by assigning the `className` variable to `selectedCategory.className`. Then assign the `category` variable to `selectedCategory.category`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  --fcc-editable-region--\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n  }\n  --fcc-editable-region--\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should use dot notation to target the `className` property of the `selectedCategory` object.\n\n```js\nassert.match(code, /selectedCategory\\.className/);\n```\n\nYou should assign the `className` property of the `allCategories` object to the `className` property of the `selectedCategory` object.\n\n```js\nassert.match(code, /selectedCategory\\.className\\s*=\\s*className/);\n```\n\nYou should use dot notation to target the `category` property of the `selectedCategory` object.\n\n```js\nassert.match(code, /selectedCategory\\.category/);\n```\n\nYou should assign the `category` property of the `allCategories` object to the `category` property of the `selectedCategory` object.\n\n```js\nassert.match(code, /selectedCategory\\.category\\s*=\\s*category/);\n```"
    },
    {
      "title": "Step 36",
      "description": "If the `id` is not in the `allCategories` object, you will need to display the `General` category.\n\nBelow your `if` statement, add an `else` clause.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  --fcc-editable-region--\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  }\n\n  --fcc-editable-region--\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have an `else` clause below your `if` statement.\n\n```js\nassert(code.match(/else/));\n```"
    },
    {
      "title": "Step 37",
      "description": "Inside your `else` clause, assign the string `\"general\"` to `selectedCategory.className`.\n\nBelow that, assign the string `\"General\"` to `selectedCategory.category`.\n\nLastly, assign the number `1` to `selectedCategory.id`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    --fcc-editable-region--\n\n    --fcc-editable-region--\n  }\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should assign the string `\"general\"` to `selectedCategory.className`.\n\n```js\nassert.match(code, /selectedCategory\\.className\\s*=\\s*('|\"|`)general\\1/);\n```\n\nYou should assign the string `\"General\"` to `selectedCategory.category`.\n\n```js\nassert.match(code, /selectedCategory\\.category\\s*=\\s*('|\"|`)General\\1/);\n```\n\nYou should assign the number `1` to `selectedCategory.id`.\n\n```js\nassert.match(code, /selectedCategory\\.id\\s*=\\s*1/);\n```"
    },
    {
      "title": "Step 38",
      "description": "Every category will have a URL that points to the category on the [freeCodeCamp forum](https://forum.freecodecamp.org/).\n\nCreate a constant called `url` and assign it a template literal. Inside that template literal, place the value of `${forumCategoryUrl}${selectedCategory.className}/${id}`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n--fcc-editable-region--\n  \n--fcc-editable-region--\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a constant called `url`.\n\n```js\nassert.match(code, /const\\s+url\\s*=/);\n```\n\nYou should assign template literals to your `url` variable.\n\n```js\nassert.match(code, /const\\s+url\\s*=\\s*`[\\s\\S]*`/);\n```\n\nYou should have the value of `${forumCategoryUrl}${selectedCategory.className}/${id}` inside your template literal. \n\n```js\nassert.match(code, /const\\s+url\\s*=\\s*`\\$\\{forumCategoryUrl\\}\\$\\{selectedCategory\\.className\\}\\/\\$\\{id\\}`/);\n```"
    },
    {
      "title": "Step 39",
      "description": "Create a constant called `linkText` and assign it the value of `selectedCategory.category`. This will display the name of the category in the anchor element.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n--fcc-editable-region--\n\n--fcc-editable-region--\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a constant called `linkText`.\n\n```js\nassert(code.match(/const\\s+linkText\\s*=/));\n```\n\nYou should assign `selectedCategory.category` to your `linkText` variable.\n\n```js\nassert(code.match(/const\\s+linkText\\s*=\\s*selectedCategory\\.category/));\n```"
    },
    {
      "title": "Step 40",
      "description": "Create a constant called `linkClass` and assign it a template literal. Inside that template literal, add the value of `category ${selectedCategory.className}`. \n\nThese class names will be used to apply styles for the anchor element.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n--fcc-editable-region--\n\n--fcc-editable-region--\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a constant named `linkClass`.\n\n```js\nassert(code.match(/const\\s+linkClass\\s*=/g));\n```\n\nYou should assign a template literal to your `linkClass` variable.\n\n```js\nassert(code.match(/const\\s+linkClass\\s*=\\s*`.*`\\s*/g));\n```\n\nYou should have the value of `category ${selectedCategory.className}` inside the template literal.\n\n```js\nconst regex = /const\\s+linkClass\\s*=\\s*`\\s*category\\s+\\$\\{selectedCategory\\.className\\}\\s*`/g;\nassert(code.match(regex));\n```"
    },
    {
      "title": "Step 41",
      "description": "Next, return an anchor element inside template literals. For the `href` attribute, assign the value of the `url` constant.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n--fcc-editable-region--\n\n--fcc-editable-region--\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should return an anchor element inside template literals.\n\n```js\nassert.match(code, /return\\s+`<a[^>]*>.*<\\/a>`/)\n```\n\nYou should add the `href` attribute inside the opening anchor tag.\n\n```js\nconst anchorTagWithHref = /return\\s+`<a[^>]*href\\s*=\\s*('|\")[^'\"]*\\1[^>]*>.*<\\/a>`/g;\nassert(code.match(anchorTagWithHref));\n```\n\nYou should set the value of the `href` attribute to `${url}`.\n\n```js\nconst hrefValue = /return\\s+`<a[^>]*href\\s*=\\s*('|\")\\s*\\${url}\\s*\\1[^>]*>.*<\\/a>`/g;\nassert(code.match(hrefValue));\n```"
    },
    {
      "title": "Step 42",
      "description": "After the `href` attribute, set the `class` attribute to the constant named `linkClass`. \n\nAfter the `class` attribute, set the `target` attribute to `\"_blank\"`. \n\nLastly, place the `linkText` constant in between the anchor tags to display the text in the link.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n--fcc-editable-region--\n  return `<a href=\"${url}\" ></a>`;\n--fcc-editable-region--\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a `class` attribute after the `href` attribute.\n\n```js\nconst anchorTagWithClass = /<a[^>]*(?:\\sclass\\s*=\\s*('|\")[^'\"]*\\1)[^>]*>/;\nassert(code.match(anchorTagWithClass));\n```\n\nYou should set the value of the `class` attribute to the constant named `linkClass`.\n\n```js\nconst classValue = /<a[^>]*class\\s*=\\s*('|\")\\s*\\${linkClass}\\s*\\1[^>]*>/g;\nassert(code.match(classValue));\n```\n\nYou should have a `target` attribute after the `class` attribute.\n\n```js\nconst anchorTagWithHrefClassAndTarget = /return\\s+`<a[^>]*href\\s*=\\s*('|\")[^'\"]*\\1[^>]*class\\s*=\\s*('|\")\\s*\\${linkClass}\\s*\\2[^>]*target\\s*=\\s*('|\")_blank\\3[^>]*>/g;\nassert(code.match(anchorTagWithHrefClassAndTarget));\n```\n\nYou should set the value of the `target` attribute to `\"_blank\"`.\n\n```js\nconst targetValue = /return\\s+`<a[^>]*target\\s*=\\s*('|\")_blank\\1[^>]*>/g;\nassert(code.match(targetValue));\n```\n\nYou should use place the `linkText` constant in between the anchor tags.\n\n```js\nconst linkTextValue = /return\\s+`<a[^>]*href\\s*=\\s*('|\")\\s*\\${url}\\s*\\1[^>]*class\\s*=\\s*('|\")\\s*\\${linkClass}\\s*\\2[^>]*target\\s*=\\s*('|\")_blank\\3[^>]*>\\s*\\${linkText}\\s*<\\/a>`/g;\nassert(code.match(linkTextValue));\n```"
    },
    {
      "title": "Step 43",
      "description": "Inside the first `td` element, add an embedded expression `${}`. Inside that expression, call the `forumCategory` function with the argument of `category_id`. \n\nNow, you should see a category displayed underneath each post topic.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n--fcc-editable-region--\n\n--fcc-editable-region--\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should call the `forumCategory` function with the argument of `category_id`\n\n```js\nconst forumCategoryValue = /\\s*\\${\\s*forumCategory\\(\\s*category_id\\s*\\)\\s*}/g;\nassert(code.match(forumCategoryValue));\n```"
    },
    {
      "title": "Step 44",
      "description": "Each forum post will include a list of user avatar images which represent all of the users participating in the conversation for that topic.\n\nStart by creating an arrow function called `avatars`, with two parameters called `posters` and `users`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have an empty arrow function called `avatars`.\n\n```js\nassert.match(code, /const\\s+avatars\\s*=\\s*\\([\\s\\S]*\\)\\s*=>\\s*{\\s*}/);\n```\n\nYou should have the parameters named `posters` and `users` in the function named `avatars`.\n\n```js\nassert.match(code, /const\\s+avatars\\s*=\\s*\\(\\s*(posters|users)\\s*,\\s*(posters|users)\\s*\\)\\s*=>\\s*{\\s*}/);\n```"
    },
    {
      "title": "Step 45",
      "description": "The next step is to loop through the `posters` array to get all of their avatars. \n\nStart by adding a `return` keyword followed by `posters.map()`. For the callback function, add a parameter called `poster`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\n--fcc-editable-region--\nconst avatars = (posters, users) => {\n\n};\n--fcc-editable-region--\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should return `posters.map()`.\n\n```js\nassert(code.match(/\\s*return\\s+posters\\.map\\(\\s*(\\.*)/));\n```\n\nYour callback function should have a parameter named `poster`.\n\n```js\nassert(code.match(/\\s*return\\s+posters\\.map\\(\\s*(\\(\\s*poster\\s*\\)|poster)\\s*=>\\s*{/g));\n```"
    },
    {
      "title": "Step 46",
      "description": "The next step is to find the correct user in the `users` array.\n\nStart by creating a constant called `user` and assign it `users.find()`. The `find` method should have a callback function with a parameter of `user`. \n\nInside the callback function of the `find` method, implicitly return the result of checking if `user.id` is strictly equal to `poster.user_id`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\n--fcc-editable-region--\nconst avatars = (posters, users) => {\n  return posters.map((poster) => {\n    \n  });\n};\n--fcc-editable-region--\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should create a constant named `user`.\n\n```js\nassert(code.match(/\\s*const\\s+user\\s*=/));\n```\n\nYou should assign `users.find()` to your `user` constant.\n\n```js\nassert(code.match(/\\s*const\\s+user\\s*=\\s*users\\.find\\(/g));\n```\n\nYour callback function should have a parameter called `user`.\n\n```js\nassert(code.match(/\\s*const\\s+user\\s*=\\s*users\\.find\\(\\s*(\\(\\s*user\\s*\\)|user)\\s*=>\\s*/g));\n```\n\nYou should implicitly return `user.id` strictly equal to `poster.user_id`.\n\n```js\nassert(code.match(/\\s*const\\s+user\\s*=\\s*users\\.find\\(\\s*(\\(\\s*user\\s*\\)|user)\\s*=>\\s*user\\.id\\s*===\\s*poster\\.user_id\\s*\\)/g));\n```"
    },
    {
      "title": "Step 47",
      "description": "Next, check if the user exists. Add an `if` statement with `user` for the condition.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters.map((poster) => {\n    const user = users.find((user) => user.id === poster.user_id);\n--fcc-editable-region--\n\n--fcc-editable-region--\n  });\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should create an `if` statement with the condition of `user`.\n\n```js\nassert(code.match(/if\\s*\\(\\s*user\\s*\\)\\s*{\\s*/));\n```"
    },
    {
      "title": "Step 48",
      "description": "To customize the avatar's size, you can set it to a value of `30`. \n\nStart by creating a constant called `avatar`. Then assign it the result of using the `replace` method on `user.avatar_template`.\n\nFor the `replace` method, use `/{size}/` for the first argument and the number `30` for the second argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters.map((poster) => {\n    const user = users.find((user) => user.id === poster.user_id);\n--fcc-editable-region--\n    if (user) {\n\n    }\n--fcc-editable-region--\n  });\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a constant called `avatar`.\n\n```js\nassert(code.match(/const\\s+avatar\\s*=/));\n```\n\nYou should assign `user.avatar_template.replace()` to your `avatar` constant.\n\n```js\nassert(code.match(/const\\s+avatar\\s*=\\s*user\\.avatar_template\\.replace\\(\\s*.*\\s*\\)/));\n```\n\nYou should have `/{size}/` for the first argument and the number `30` for the second argument for the `replace` method.\n\n```js\nassert(code.match(/const\\s+avatar\\s*=\\s*user\\.avatar_template\\.replace\\(\\s*([/'\"]){size}\\1\\s*,\\s*30\\s*\\)/));\n```"
    },
    {
      "title": "Step 49",
      "description": "Next, you will construct the `userAvatarUrl`.\n\nStart by creating a constant called `userAvatarUrl`. Then use a ternary operator to check if `avatar` starts with `\"/user_avatar/\"`. \n\nIf so, use the `concat` method to concatenate `avatar` to `avatarUrl`. Otherwise return `avatar`.\n\nThis will ensure the avatar URL is correctly formed whether it's a relative or absolute URL.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters.map((poster) => {\n    const user = users.find((user) => user.id === poster.user_id);\n    if (user) {\n      const avatar = user.avatar_template.replace(/{size}/, 30);\n--fcc-editable-region--\n\n--fcc-editable-region--\n    }\n  });\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a constant named `userAvatarUrl`. \n\n```js\nassert(code.match(/const\\s+userAvatarUrl\\s*=/));\n```\n\nYour `ternary` should check if `avatar` starts with `\"/user_avatar/\"` and return `avatarUrl.concat(avatar)` or `avatar`.\n\n```js\nassert(code.match(/const\\s+userAvatarUrl\\s*=\\s*(?:avatar\\.startsWith\\(\\s*('|\")\\/user_avatar\\/\\1\\s*\\)|\\/\\^\\\\\\/user_avatar\\\\\\/\\/\\.test\\(\\s*avatar\\s*\\))\\s*\\?\\s*avatarUrl\\.concat\\(\\s*avatar\\s*\\)\\s*:\\s*avatar/));\n```"
    },
    {
      "title": "Step 50",
      "description": "Lastly, you will need to return the image for the user avatar.\n\nStart by adding a `return` followed by a set of template literals. Inside the template literals, add an `img` element. \n\nInside the `img` tag, add a `src` attribute with the value of `${userAvatarUrl}`. For the `alt` attribute, add a value of `${user.name}`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters.map((poster) => {\n    const user = users.find((user) => user.id === poster.user_id);\n    if (user) {\n      const avatar = user.avatar_template.replace(/{size}/, 30);\n      const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n        ? avatarUrl.concat(avatar)\n        : avatar;\n--fcc-editable-region--\n\n--fcc-editable-region--\n    }\n  });\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should return a template literal.\n\n```js\nconst emptyTemplateLiteral = /return\\s*`(.*)`/;\nassert.match(getReturnCode(code), emptyTemplateLiteral);\n```\n\nYou should have an `img` element inside the template literal.\n\n```js\nconst imgTag = /return\\s*`<img[^>]*\\\\?>`/g;\nassert.match(getReturnCode(code), imgTag);\n```\n\nYou should have a `src` attribute inside the `img` tag.\n\n```js\nconst imgTagWithSrc = /return\\s*`<img[^>]*src\\s*=\\s*('|\")[^'\"]*\\1[^>]*\\\\?>`/g;\nassert.match(getReturnCode(code), imgTagWithSrc);\n```\n\nYou should set the value for the `src` attribute to the constant named `userAvatarUrl`.\n\n```js\nconst srcValue = /return\\s*`<img[^>]*src\\s*=\\s*('|\")\\s*\\${userAvatarUrl}\\s*\\1[^>]*\\\\?>`/g;\nassert.match(getReturnCode(code), srcValue);\n```\n\nYou should have an `alt` attribute after the `src` attribute.\n\n```js\nconst imageTagWithSrcAndAlt = /return\\s*`<img[^>]*src\\s*=\\s*('|\")[^'\"]*\\1[^>]*alt\\s*=\\s*('|\")[^'\"]*\\2[^>]*\\\\?>`/g;\nassert.match(getReturnCode(code), imageTagWithSrcAndAlt);\n```\n\nYou should set the value of the `alt` attribute to the constant named `user.name`.\n\n```js\nconst altValue = /return\\s*`<img[^>]*src\\s*=\\s*('|\")\\s*\\${userAvatarUrl}\\s*\\1[^>]*alt\\s*=\\s*('|\")\\s*\\${user\\.name}\\s*\\2[^>]*\\\\?>`/g;\nassert.match(getReturnCode(code), altValue);\n```"
    },
    {
      "title": "Step 51",
      "description": "At the end of your `map` method, chain the `join()` method. For the separator, pass in an empty string.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters.map((poster) => {\n    const user = users.find((user) => user.id === poster.user_id);\n    if (user) {\n      const avatar = user.avatar_template.replace(/{size}/, 30);\n      const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n        ? avatarUrl.concat(avatar)\n        : avatar;\n      return `<img src=\"${userAvatarUrl}\" alt=\"${user.name}\" />`;\n    }\n  })\n  --fcc-editable-region--\n\n  --fcc-editable-region--\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should chain the `join` method to the `map` method and use an empty string for the separator.\n\n```js\nconst joinTest = /\\.\\s*join\\s*\\(\\s*('|\")\\1\\s*\\)\\s*;?\\s*}\\s*;?\\s*const\\s+fetchData/g;\nassert(code.match(joinTest));\n```"
    },
    {
      "title": "Step 52",
      "description": "For the remaining steps, you will add the functionality to display the user avatars.\n\nInside the second `td` element, add a `div` element with a class name of `\"avatar-container\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters\n    .map((poster) => {\n      const user = users.find((user) => user.id === poster.user_id);\n      if (user) {\n        const avatar = user.avatar_template.replace(/{size}/, 30);\n        const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n          ? avatarUrl.concat(avatar)\n          : avatar;\n        return `<img src=\"${userAvatarUrl}\" alt=\"${user.name}\" />`;\n      }\n    })\n    .join(\"\");\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td>\n--fcc-editable-region--\n\n--fcc-editable-region--\n      </td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a `div` element inside the second `td` element.\n\n```js\nconst secondTd = code.split(/postsContainer\\.innerHTML = topics\\.map/)?.[1]?.split(/\\s*<\\/td>\\s*<td>/)?.[1];\nconst divTest =  /<div\\b[^>]*>([\\s\\S]*?)<\\/div>/gm;\nassert.match(secondTd?.split(/<\\/td>/)?.[0], divTest);\n```\n\nYour opening `div` tag should have a class attribute with the value of `\"avatar-container\"`.\n\n```js\nconst secondTd = code.split(/postsContainer\\.innerHTML = topics\\.map/)?.[1]?.split(/\\s*<\\/td>\\s*<td>/)?.[1];\nconst divRegexTest = /<div\\b[^>]*\\bclass\\s*=\\s*('|\")avatar-container\\1[^>]*>([\\s\\S]*?)<\\/div>/gm;\nassert.match(secondTd?.split(/<\\/td>/)?.[0], divRegexTest);\n```"
    },
    {
      "title": "Step 53",
      "description": "Inside the `div` element, call the `avatars` function and pass in the arguments of `posters` and `users`.\n\nNow you should see the avatars displayed on the page.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters\n    .map((poster) => {\n      const user = users.find((user) => user.id === poster.user_id);\n      if (user) {\n        const avatar = user.avatar_template.replace(/{size}/, 30);\n        const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n          ? avatarUrl.concat(avatar)\n          : avatar;\n        return `<img src=\"${userAvatarUrl}\" alt=\"${user.name}\" />`;\n      }\n    })\n    .join(\"\");\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td>\n--fcc-editable-region--\n        <div class=\"avatar-container\">\n\n        </div>\n--fcc-editable-region--\n      </td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should call the function named `avatars`.\n\n```js\nconst avatarsTest = /\\$\\{\\s*avatars\\s*\\(\\s*[^)]*\\s*\\)\\s*\\}/gm;\nassert(code.match(avatarsTest));\n```\n\nYour function call should have the arguments of `posters` and `users`.\n\n```js\nconst avatarsTest = /\\$\\{\\s*avatars\\s*\\(\\s*posters\\s*,\\s*users\\s*\\)\\s*\\}/gm;\nassert(code.match(avatarsTest));\n```"
    },
    {
      "title": "Step 54",
      "description": "Your project is almost complete. It is just missing one last piece.\n\nUsers should be able to click on any post title and be directed to the actual post on the [freeCodeCamp forum](https://forum.freecodecamp.org/).\n\nStart by changing the existing paragraph element inside the first `td` element to be an anchor element.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters\n    .map((poster) => {\n      const user = users.find((user) => user.id === poster.user_id);\n      if (user) {\n        const avatar = user.avatar_template.replace(/{size}/, 30);\n        const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n          ? avatarUrl.concat(avatar)\n          : avatar;\n        return `<img src=\"${userAvatarUrl}\" alt=\"${user.name}\" />`;\n      }\n    })\n    .join(\"\");\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n--fcc-editable-region--\n        <p class=\"post-title\">${title}</p>\n--fcc-editable-region--\n\n        ${forumCategory(category_id)}\n      </td>\n      <td>\n        <div class=\"avatar-container\">\n          ${avatars(posters, users)}\n        </div>\n      </td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should replace the `p` element with an `a` element.\n\n```js\nconst regex = /<a\\s+class\\s*=\\s*('|\")post-title\\1\\s*>(?:.|\\n)*?<\\/a>/;\nassert(code.match(regex));\n```"
    },
    {
      "title": "Step 55",
      "description": "For the opening `a` tag, set the `target` attribute to `\"_blank\"`. Then, set the `href` attribute to `${forumTopicUrl}${slug}/${id}`. \n\nAnd with those changes, your freeCodeCamp forum leaderboard project is now complete!",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters\n    .map((poster) => {\n      const user = users.find((user) => user.id === poster.user_id);\n      if (user) {\n        const avatar = user.avatar_template.replace(/{size}/, 30);\n        const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n          ? avatarUrl.concat(avatar)\n          : avatar;\n        return `<img src=\"${userAvatarUrl}\" alt=\"${user.name}\" />`;\n      }\n    })\n    .join(\"\");\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n--fcc-editable-region--\n        <a class=\"post-title\">${title}</a>\n--fcc-editable-region--\n\n        ${forumCategory(category_id)}\n      </td>\n      <td>\n        <div class=\"avatar-container\">\n          ${avatars(posters, users)}\n        </div>\n      </td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "Your opening anchor tag should have a `target` attribute set to `\"_blank\"`.\n\n```js\nconst firstTd = code.split(/postsContainer\\.innerHTML = topics\\.map/)?.[1]?.split(/\\s*<tr>\\s*<td>/)?.[1];\nassert.match(firstTd?.split(/<\\/td>/)?.[0], /<a\\s+(?:[^>]*\\s+)?target\\s*=\\s*('|\")_blank\\1(?:\\s+[^>]*)?>.*<\\/a>/s);\n```\n\nYour opening anchor tag should have an `href` attribute set to `${forumTopicUrl}${slug}/${id}`.\n\n```js\nconst firstTd = code.split(/postsContainer\\.innerHTML = topics\\.map/)?.[1]?.split(/\\s*<tr>\\s*<td>/)[1];\nassert.match(firstTd?.split(/<\\/td>/)?.[0], /<a\\s+(?:[^>]*\\s+)?href\\s*=\\s*('|\")\\${forumTopicUrl}\\${slug}\\/\\${id}\\1(?:\\s+[^>]*)?>.*<\\/a>/s);\n```"
    },
    {
      "title": "Step 5",
      "description": "In the last project, you used the `.catch()` method to handle errors. Here you'll use a `try...catch` statement instead.\n\nThe `try` block is designed to handle potential errors, and the code inside the `catch` block will be executed in case an error occurs.\n\n```js\ntry {\n  const name = \"freeCodeCamp\";\n  name = \"fCC\";\n} catch (err) {\n  console.log(err); // TypeError: Assignment to constant variable.\n}\n```\n\nInside your `fetchData` function, add a `try...catch` statement. The `catch` block should have an error parameter named `err`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst fetchData = async () => { \n  \n}\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should have a `try` block inside your `fetchData` function.\n\n```js\nassert.match(code, /const\\s+fetchData\\s*=\\s*async\\s*\\(\\s*\\)\\s*=>\\s*{\\s*try\\s*{[^}]*\\s*}/);\n```\n\nYou should have a `catch` block after your `try` block.\n\n```js\nassert.match(code, /const\\s+fetchData\\s*=\\s*async\\s*\\(\\s*\\)\\s*=>\\s*{\\s*try\\s*{[^}]*\\s*}\\s*catch\\s*\\(.*\\)\\s*{[^}]*\\s*}/);\n```\n\nYour `catch` block should have an `err` parameter.\n\n```js\nassert.match(code, /const\\s+fetchData\\s*=\\s*async\\s*\\(\\s*\\)\\s*=>\\s*{\\s*try\\s*{[^}]*\\s*}\\s*catch\\s*\\(\\s*err\\s*\\)\\s*{[^}]*\\s*}/);\n```"
    },
    {
      "title": "Step 17",
      "description": "In the preview window, you should see a column of commas. To fix this, you should chain the `join` method to your `map` method. For the separator, pass in an empty string.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n--fcc-editable-region--\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `<tr></tr>`;\n  })\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should chain the `join` method to the `map` method.\n\n```js\nassert(/topics\\s*\\.\\s*map\\s*\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*{[\\s\\S]*?}\\s*\\)\\s*\\.\\s*join\\s*\\(\\s*.*?\\s*\\)/.test(code));\n```\n\nYou should pass in an empty string for the separator.\n\n```js\nassert(/topics\\s*\\.\\s*map\\s*\\(\\s*(\\(\\s*item\\s*\\)|item)\\s*=>\\s*{[\\s\\S]*?}\\s*\\)\\s*\\.\\s*join\\s*\\(\\s*(\"\"|'')\\s*\\)/.test(code));\n```"
    },
    {
      "title": "Step 1",
      "description": "In this project, you will build a freeCodeCamp forum leaderboard that displays the latest topics, users, and replies from the [freeCodeCamp forum](https://forum.freecodecamp.org/). The HTML and CSS have been provided for you. Feel free to explore them.\n\nWhen you are ready, use `const` to declare a `forumLatest` variable and assign it the string `\"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\"`. \n\nBelow that, create another `const` variable called `forumTopicUrl` and assign it the string `\"https://forum.freecodecamp.org/t/\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare a `forumLatest` variable with `const`.\n\n```js\nassert.match(code, /const\\s+forumLatest\\s*=/);\n```\n\nYou should assign `\"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\"` to your `forumLatest` variable.\n\n```js\nassert.match(code, /const\\s+forumLatest\\s*=\\s*('|\")https:\\/\\/cdn\\.freecodecamp\\.org\\/curriculum\\/forum-latest\\/latest\\.json\\1\\s*/);\n```\n\nYou should declare a `forumTopicUrl` variable with `const`.\n\n```js\nassert.match(code, /const\\s+forumTopicUrl\\s*=/);\n```\n\nYou should assign `\"https://forum.freecodecamp.org/t/\"` to your `forumTopicUrl` variable.\n\n```js\nassert.match(code, /const\\s+forumTopicUrl\\s*=\\s*('|\")https:\\/\\/forum\\.freecodecamp\\.org\\/t\\/\\1\\s*/);\n```"
    },
    {
      "title": "Step 2",
      "description": "Next, create a `const` variable called `forumCategoryUrl` and assign it the string `\"https://forum.freecodecamp.org/c/\"`. \n\nBelow that, create another `const` variable called `avatarUrl` and assign it the string `\"https://sea1.discourse-cdn.com/freecodecamp\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\n\n--fcc-editable-region--\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare a `forumCategoryUrl` variable with `const`.\n\n```js\nassert.match(code, /const\\s+forumCategoryUrl\\s*=/);\n```\n\nYou should assign `\"https://forum.freecodecamp.org/c/\"` to your `forumCategoryUrl` variable.\n\n```js\nassert.match(code, /const\\s+forumCategoryUrl\\s*=\\s*('|\")https:\\/\\/forum\\.freecodecamp\\.org\\/c\\/\\1\\s*/);\n```\n\nYou should declare an `avatarUrl` variable with `const`.\n\n```js\nassert.match(code, /const\\s+avatarUrl\\s*=/);\n```\n\nYou should assign `\"https://sea1.discourse-cdn.com/freecodecamp\"` to your `avatarUrl` variable.\n\n```js\nassert.match(code, /const\\s+avatarUrl\\s*=\\s*('|\")https:\\/\\/sea1\\.discourse-cdn\\.com\\/freecodecamp\\1\\s*/);\n```"
    },
    {
      "title": "Step 9",
      "description": "If there is an error from the `fetch` call, the `catch` block will handle it. \n\nInside the `catch` block, add a `console.log` to log the `err` parameter.\n\nAlso, remove your `console.log(data);` from your `try` block now that you understand what is being returned from the `fetch` call.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    console.log(data);\n  } catch (err) {\n\n  }\n};\n\nfetchData();\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `console.log` to log the `err` variable.\n\n```js\nassert.match(code, /\\s*console\\.log\\(\\s*err\\s*\\)/);\n```\n\nYour `console.log` should be inside the `catch` block.\n\n```js\nassert.match(code, /\\s*try\\s*{[^}]*\\s*}\\s*catch\\s*\\(\\s*err\\s*\\)\\s*{[^}]*\\s*console\\.log\\(\\s*err\\s*\\)[^}]*}/);\n```\n\nYou should remove `console.log(data);` from the `try` block.\n\n```js\nassert.notMatch(code, /\\s*console\\.log\\(\\s*data\\s*\\)/);\n```"
    },
    {
      "title": "Step 3",
      "description": "Next, access the `#posts-container` element by using the `getElementById()` method. Assign it to a new constant called `postsContainer`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\n--fcc-editable-region--\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `const` to declare a `postsContainer` variable.\n\n```js\nassert.match(code, /const\\s+postsContainer\\s*=/);\n```\n\nYou should use `document.getElementById()` to get the `#posts-container` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)posts-container\\1\\s*\\)/);\n```\n\nYou should assign the `#posts-container` element to your `postsContainer` variable.\n\n```js\nassert(code.match(/const\\s+postsContainer\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)posts-container\\1\\s*\\)/g));\n```"
    },
    {
      "title": "Step 27",
      "description": "Each of the forum topics includes a category like Python or JavaScript. In the next few steps, you will build out a category object which holds all of the forum categories and `classNames` for the styling. \n\nStart by creating a new constant called `allCategories` and assign it the value of an empty object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "You should have a constant called `allCategories`.\n\n```js\nassert.match(code, /const\\s+allCategories\\s*=/)\n```\n\nYou should assign an empty object to the `allCategories` variable.\n\n```js\nassert.match(code, /const\\s+allCategories\\s*=\\s*{\\s*}\\s*/)\n```"
    },
    {
      "title": "Step 28",
      "description": "Inside your `allCategories` object, add a new key for the number `299` with a value of an empty object.\n\nInside that object, add a property with a key of `category` and a string value of `\"Career Advice\"`. Below that property, add another key called `className` with a string value of `\"career\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst allCategories = {\n\n};\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "Your `allCategories` object should have a `299` property.\n\n```js\nassert.property(allCategories, '299');\n```\n\nYour `299` value should be an object.\n\n```js\nassert.isObject(allCategories['299'])\n```\n\nYour `299` object should have a `category` property.\n\n```js\nassert.property(allCategories['299'], 'category');\n```\n\nYour `category` property should be set to the string `\"Career Advice\"`.\n\n```js\nassert.equal(allCategories[\"299\"].category, 'Career Advice');\n```\n\nYour `299` object should have a `className` property.\n\n```js\nassert.property(allCategories['299'], 'className');\n```\n\nYour `className` property should be set to the string `\"career\"`.\n\n```js\nassert.equal(allCategories[\"299\"].className, 'career');\n```"
    },
    {
      "title": "Step 29",
      "description": "Add a new key for the number `409` with a value of an empty object.\n\nInside that object, add a property with a key of `category` and a string value of `\"Project Feedback\"`. \n\nBelow that property, add another key called `className` with a string value of `\"feedback\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n\n};\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "Your `allCategories` object should have a `409` property.\n\n```js\nassert.property(allCategories, '409');\n```\n\nYour `409` value should be an object.\n\n```js\nassert.isObject(allCategories['409'])\n```\n\nYour `409` object should have a `category` property.\n\n```js\nassert.property(allCategories['409'], 'category');\n```\n\nYour `category` property should be set to the string `\"Project Feedback\"`.\n\n```js\nassert.equal(allCategories[\"409\"].category, 'Project Feedback');\n```\n\nYour `409` object should have a `className` property.\n\n```js\nassert.property(allCategories['409'], 'className');\n```\n\nYour `className` property should be set to the string `\"feedback\"`.\n\n```js\nassert.equal(allCategories[\"409\"].className, 'feedback');\n```"
    },
    {
      "title": "Step 30",
      "description": "Add a new key for the number `417` with a value of an empty object.\n\nInside that object, add a property with a key of `category` and a string value of `\"freeCodeCamp Support\"`. \n\nBelow that property, add another key called `className` with a string value of `\"support\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\n--fcc-editable-region--\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n\n};\n--fcc-editable-region--\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n      </td>\n      <td></td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};"
        }
      ],
      "testCode": "Your `allCategories` object should have a `417` property.\n\n```js\nassert.property(allCategories, '417');\n```\n\nYour `417` value should be an object.\n\n```js\nassert.isObject(allCategories['417'])\n```\n\nYour `417` object should have a `category` property.\n\n```js\nassert.property(allCategories['417'], 'category');\n```\n\nYour `category` property should be set to the string `\"freeCodeCamp Support\"`.\n\n```js\nassert.equal(allCategories[\"417\"].category, 'freeCodeCamp Support');\n```\n\nYour `417` object should have a `className` property.\n\n```js\nassert.property(allCategories['417'], 'className');\n```\n\nYour `className` property should be set to the string `\"support\"`.\n\n```js\nassert.equal(allCategories[\"417\"].className, 'support');\n```"
    }
  ]
}