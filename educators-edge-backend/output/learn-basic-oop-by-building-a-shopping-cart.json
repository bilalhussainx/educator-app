{
  "title": "Learn Basic Oop By Building A Shopping Cart",
  "description": "A project-based course on javascript imported from freeCodeCamp.",
  "language": "javascript",
  "lessons": [
    {
      "title": "Step 1",
      "description": "You will be building a shopping cart application. The HTML and CSS are already provided, but you will need to build the JavaScript to make the page interactive.\n\nTo start, you will need to get some of your elements from the DOM. Start by using `document.getElementById()` to get the`#cart-container`, `#products-container`, and `#dessert-card-container` elements. Store them in variables named `cartContainer`, `productsContainer`, and `dessertCards`, respectively.\n\nSince these will not change, remember to use `const` to declare them.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `document.getElementById()` to get the `#cart-container` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)cart-container\\1\\s*\\)/);\n```\n\nYou should assign the `#cart-container` element to a variable named `cartContainer`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+cartContainer\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)cart-container\\1\\s*\\)/);\n```\n\nYou should use `document.getElementById()` to get the `#products-container` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)products-container\\1\\s*\\)/);\n```\n\nYou should assign the `#products-container` element to a variable named `productsContainer`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+productsContainer\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)products-container\\1\\s*\\)/);\n```\n\nYou should use `document.getElementById()` to get the `#dessert-card-container` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)dessert-card-container\\1\\s*\\)/);\n```\n\nYou should assign the `#dessert-card-container` element to a variable named `dessertCards`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+dessertCards\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)dessert-card-container\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 2",
      "description": "Now you need to get your two buttons. Continuing the pattern, get the `#cart-btn` and `#clear-cart-btn` elements. Store them in variables named `cartBtn` and `clearCartBtn`, respectively.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `document.getElementById()` to get the `#cart-btn` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)cart-btn\\1\\s*\\)/);\n```\n\nYou should assign the `#cart-btn` element to a variable named `cartBtn`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+cartBtn\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)cart-btn\\1\\s*\\)/);\n```\n\nYou should use `document.getElementById()` to get the `#clear-cart-btn` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)clear-cart-btn\\1\\s*\\)/);\n```\n\nYou should assign the `#clear-cart-btn` element to a variable named `clearCartBtn`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+clearCartBtn\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)clear-cart-btn\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 3",
      "description": "Next is to get your totals. Get the `#total-items`, `#subtotal`, `#taxes`, and `#total` elements. Store them in variables named `totalNumberOfItems`, `cartSubTotal`, `cartTaxes`, and `cartTotal`, respectively.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `document.getElementById()` to get the `#total-items` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)total-items\\1\\s*\\)/);\n```\n\nYou should assign the `#total-items` element to a variable named `totalNumberOfItems`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+totalNumberOfItems\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)total-items\\1\\s*\\)/);\n```\n\nYou should use `document.getElementById()` to get the `#subtotal` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)subtotal\\1\\s*\\)/);\n```\n\nYou should assign the `#subtotal` element to a variable named `cartSubTotal`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+cartSubTotal\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)subtotal\\1\\s*\\)/);\n```\n\nYou should use `document.getElementById()` to get the `#taxes` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)taxes\\1\\s*\\)/);\n```\n\nYou should assign the `#taxes` element to a variable named `cartTaxes`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+cartTaxes\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)taxes\\1\\s*\\)/);\n```\n\nYou should use `document.getElementById()` to get the `#total` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)total\\1\\s*\\)/);\n```\n\nYou should assign the `#total` element to a variable named `cartTotal`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+cartTotal\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)total\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 4",
      "description": "The last element to get is the `#show-hide-cart` element. Store it in a variable named `showHideCartSpan`.\n\nThen, use `let` to declare a variable named `isCartShowing` and set it to `false`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `document.getElementById()` to get the `#show-hide-cart` element.\n\n```js\nassert.match(code, /document\\.getElementById\\(\\s*('|\"|`)show-hide-cart\\1\\s*\\)/);\n```\n\nYou should assign the `#show-hide-cart` element to a variable named `showHideCartSpan`. Remember to use `const` to declare the variable.\n\n```js\nassert.match(code, /const\\s+showHideCartSpan\\s*=\\s*document\\.getElementById\\(\\s*('|\"|`)show-hide-cart\\1\\s*\\)/);\n```\n\nYou should use `let` to declare a variable named `isCartShowing`.\n\n```js\nassert.match(code, /let\\s+isCartShowing/);\n```\n\nYou should set the `isCartShowing` variable to `false`.\n\n```js\nassert.match(code, /let\\s+isCartShowing\\s*=\\s*false/);\n```"
    },
    {
      "title": "Step 5",
      "description": "A shopping cart does not serve much purpose without products. Declare a `products` variable and set it to an empty array. Using an array will allow you to store multiple products.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare a `products` variable with `const`.\n\n```js\nassert.match(code, /const\\s+products\\b/);\n```\n\nYou should set the `products` variable to an empty array.\n\n```js\nassert.match(code, /const\\s+products\\s*=\\s*\\[\\s*\\]/);\n```"
    },
    {
      "title": "Step 6",
      "description": "You now need to start adding products. Before you do that, you need to consider the structure of your product data. A product will need a unique identifier to distinguish it from other products, a price so people know how much it costs, and a name so people know what they are buying. You should also add a category to each product.\n\nAdd an object to your `products` array. Give this object an `id` property set to the number `1`, a `name` property set to the string `\"Vanilla Cupcakes (6 Pack)\"`, a `price` property set to the number `12.99`, and a `category` property set to the string `\"Cupcake\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\n--fcc-editable-region--\nconst products = [\n\n];\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your products array should have one value.\n\n```js\nassert.equal(products.length, 1);\n```\n\nYour products array should have an object as its first value.\n\n```js\nassert.isObject(products[0]);\n```\n\nYour products array should have an object with an `id` property set to the number `1`.\n\n```js\nassert.equal(products[0].id, 1);\n```\n\nYour products array should have an object with a `name` property set to the string `\"Vanilla Cupcakes (6 Pack)\"`.\n\n```js\nassert.equal(products[0].name, 'Vanilla Cupcakes (6 Pack)');\n```\n\nYour products array should have an object with a `price` property set to the number `12.99`.\n\n```js\nassert.equal(products[0].price, 12.99);\n```\n\nYour products array should have an object with a `category` property set to the string `\"Cupcake\"`.\n\n```js\nassert.equal(products[0].category, 'Cupcake');\n```"
    },
    {
      "title": "Step 7",
      "description": "Following that same data structure, add the products from this table (in order) to your `products` array. Increment the `id` for each product, counting up.\n\n| `name`                         | `price` | `category`  |\n| ------------------------------ | ------- | ----------- |\n| `French Macaron`               | `3.99`  | `Macaron`   |\n| `Pumpkin Cupcake`              | `3.99`  | `Cupcake`   |\n| `Chocolate Cupcake`            | `5.99`  | `Cupcake`   |\n| `Chocolate Pretzels (4 Pack)`  | `10.99` | `Pretzel`   |\n| `Strawberry Ice Cream`         | `2.99`  | `Ice Cream` |\n| `Chocolate Macarons (4 Pack)`  | `9.99`  | `Macaron`   |\n| `Strawberry Pretzel`           | `4.99`  | `Pretzel`   |\n| `Butter Pecan Ice Cream`       | `2.99`  | `Ice Cream` |\n| `Rocky Road Ice Cream`         | `2.99`  | `Ice Cream` |\n| `Vanilla Macarons (5 Pack)`    | `11.99` | `Macaron`   |\n| `Lemon Cupcakes (4 Pack)`      | `12.99` | `Cupcake`   |",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\n--fcc-editable-region--\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n\n];\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your second object in the `products` array should have an `id` property set to the number `2`.\n\n```js\nassert.equal(products[1].id, 2);\n```\n\nYour second object in the `products` array should have a `name` property set to `French Macaron`.\n\n```js\nassert.equal(products[1].name, 'French Macaron');\n```\n\nYour second object in the `products` array should have a `price` property set to the number `3.99`.\n\n```js\nassert.equal(products[1].price, 3.99);\n```\n\nYour second object in the `products` array should have a `category` property set to `Macaron`.\n\n```js\nassert.equal(products[1].category, 'Macaron');\n```\n\nYour third object in the `products` array should have an `id` property set to the number `3`.\n\n```js\nassert.equal(products[2].id, 3);\n```\n\nYour third object in the `products` array should have a `name` property set to `Pumpkin Cupcake`.\n\n```js\nassert.equal(products[2].name, 'Pumpkin Cupcake');\n```\n\nYour third object in the `products` array should have a `price` property set to the number `3.99`.\n\n```js\nassert.equal(products[2].price, 3.99);\n```\n\nYour third object in the `products` array should have a `category` property set to `Cupcake`.\n\n```js\nassert.equal(products[2].category, 'Cupcake');\n```\n\nYour fourth object in the `products` array should have an `id` property set to the number `4`.\n\n```js\nassert.equal(products[3].id, 4);\n```\n\nYour fourth object in the `products` array should have a `name` property set to `Chocolate Cupcake`.\n\n```js\nassert.equal(products[3].name, 'Chocolate Cupcake');\n```\n\nYour fourth object in the `products` array should have a `price` property set to the number `5.99`.\n\n```js\nassert.equal(products[3].price, 5.99);\n```\n\nYour fourth object in the `products` array should have a `category` property set to `Cupcake`.\n\n```js\nassert.equal(products[3].category, 'Cupcake');\n```\n\nYour fifth object in the `products` array should have an `id` property set to the number `5`.\n\n```js\nassert.equal(products[4].id, 5);\n```\n\nYour fifth object in the `products` array should have a `name` property set to `Chocolate Pretzels (4 Pack)`.\n\n```js\nassert.equal(products[4].name, 'Chocolate Pretzels (4 Pack)');\n```\n\nYour fifth object in the `products` array should have a `price` property set to the number `10.99`.\n\n```js\nassert.equal(products[4].price, 10.99);\n```\n\nYour fifth object in the `products` array should have a `category` property set to `Pretzel`.\n\n```js\nassert.equal(products[4].category, 'Pretzel');\n```\n\nYour sixth object in the `products` array should have an `id` property set to the number `6`.\n\n```js\nassert.equal(products[5].id, 6);\n```\n\nYour sixth object in the `products` array should have a `name` property set to `Strawberry Ice Cream`.\n\n```js\nassert.equal(products[5].name, 'Strawberry Ice Cream');\n```\n\nYour sixth object in the `products` array should have a `price` property set to the number `2.99`.\n\n```js\nassert.equal(products[5].price, 2.99);\n```\n\nYour sixth object in the `products` array should have a `category` property set to `Ice Cream`.\n\n```js\nassert.equal(products[5].category, 'Ice Cream');\n```\n\nYour seventh object in the `products` array should have an `id` property set to the number `7`.\n\n```js\nassert.equal(products[6].id, 7);\n```\n\nYour seventh object in the `products` array should have a `name` property set to `Chocolate Macarons (4 Pack)`.\n\n```js\nassert.equal(products[6].name, 'Chocolate Macarons (4 Pack)');\n```\n\nYour seventh object in the `products` array should have a `price` property set to the number `9.99`.\n\n```js\nassert.equal(products[6].price, 9.99);\n```\n\nYour seventh object in the `products` array should have a `category` property set to `Macaron`.\n\n```js\nassert.equal(products[6].category, 'Macaron');\n```\n\nYour eighth object in the `products` array should have an `id` property set to the number `8`.\n\n```js\nassert.equal(products[7].id, 8);\n```\n\nYour eighth object in the `products` array should have a `name` property set to `Strawberry Pretzel`.\n\n```js\nassert.equal(products[7].name, 'Strawberry Pretzel');\n```\n\nYour eighth object in the `products` array should have a `price` property set to the number `4.99`.\n\n```js\nassert.equal(products[7].price, 4.99);\n```\n\nYour eighth object in the `products` array should have a `category` property set to `Pretzel`.\n\n```js\nassert.equal(products[7].category, 'Pretzel');\n```\n\nYour ninth object in the `products` array should have an `id` property set to the number `9`.\n\n```js\nassert.equal(products[8].id, 9);\n```\n\nYour ninth object in the `products` array should have a `name` property set to `Butter Pecan Ice Cream`.\n\n```js\nassert.equal(products[8].name, 'Butter Pecan Ice Cream');\n```\n\nYour ninth object in the `products` array should have a `price` property set to the number `2.99`.\n\n```js\nassert.equal(products[8].price, 2.99);\n```\n\nYour ninth object in the `products` array should have a `category` property set to `Ice Cream`.\n\n```js\nassert.equal(products[8].category, 'Ice Cream');\n```\n\nYour tenth object in the `products` array should have an `id` property set to the number `10`.\n\n```js\nassert.equal(products[9].id, 10);\n```\n\nYour tenth object in the `products` array should have a `name` property set to `Rocky Road Ice Cream`.\n\n```js\nassert.equal(products[9].name, 'Rocky Road Ice Cream');\n```\n\nYour tenth object in the `products` array should have a `price` property set to the number `2.99`.\n\n```js\nassert.equal(products[9].price, 2.99);\n```\n\nYour tenth object in the `products` array should have a `category` property set to `Ice Cream`.\n\n```js\nassert.equal(products[9].category, 'Ice Cream');\n```\n\nYour eleventh object in the `products` array should have an `id` property set to the number `11`.\n\n```js\nassert.equal(products[10].id, 11);\n```\n\nYour eleventh object in the `products` array should have a `name` property set to `Vanilla Macarons (5 Pack)`.\n\n```js\nassert.equal(products[10].name, 'Vanilla Macarons (5 Pack)');\n```\n\nYour eleventh object in the `products` array should have a `price` property set to the number `11.99`.\n\n```js\nassert.equal(products[10].price, 11.99);\n```\n\nYour eleventh object in the `products` array should have a `category` property set to `Macaron`.\n\n```js\nassert.equal(products[10].category, 'Macaron');\n```\n\nYour twelfth object in the `products` array should have an `id` property set to the number `12`.\n\n```js\nassert.equal(products[11].id, 12);\n```\n\nYour twelfth object in the `products` array should have a `name` property set to `Lemon Cupcakes (4 Pack)`.\n\n```js\nassert.equal(products[11].name, 'Lemon Cupcakes (4 Pack)');\n```\n\nYour twelfth object in the `products` array should have a `price` property set to the number `12.99`.\n\n```js\nassert.equal(products[11].price, 12.99);\n```\n\nYour twelfth object in the `products` array should have a `category` property set to `Cupcake`.\n\n```js\nassert.equal(products[11].category, 'Cupcake');\n```"
    },
    {
      "title": "Step 8",
      "description": "Now that you have your list of products, you can use JavaScript to insert them into the HTML. With this approach, if you decide to add more products, the HTML will automatically reflect that.\n\nStart by calling the `.forEach` method of your `products` array. Use arrow syntax to create an empty callback function.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should call the `.forEach` method of your `products` array.\n\n```js\nassert.match(code, /products\\.forEach\\(/);\n```\n\nYou should use arrow syntax to create an empty callback function.\n\n```js\nassert.match(code, /\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}/)\n```\n\nYou should pass your empty callback function to the `.forEach` method.\n\n```js\nassert.match(code, /products\\.forEach\\(\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}\\s*\\)/);\n```"
    },
    {
      "title": "Step 9",
      "description": "Remember that you can use destructuring to extract multiple values from an array or object in a single statement.\n\nFor the first parameter of your callback function, destructure the `name`, `id`, `price`, and `category` properties from the object passed in.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\n--fcc-editable-region--\nproducts.forEach(\n  () => {}\n);\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use destructuring to declare `name`, `id`, `price`, and `category` parameters. For this test, order matters.\n\n```js\nassert.match(code, /\\{\\s*name\\s*,\\s*id\\s*,\\s*price\\s*,\\s*category\\s*\\}/);\n```\n\nYour destructuring should be the first parameter of the callback function.\n\n```js\nassert.match(code, /products\\.forEach\\(\\s*\\(\\s*\\{\\s*name\\s*,\\s*id\\s*,\\s*price\\s*,\\s*category\\s*\\}\\s*\\)\\s*=>/);\n```"
    },
    {
      "title": "Step 10",
      "description": "You need to display the available products in your HTML. Start by using the addition assignment operator to add an empty template literal string to the `innerHTML` property of the `dessertCards` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\n--fcc-editable-region--\nproducts.forEach(\n  ({ name, id, price, category }) => {\n\n  }\n);\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use access the `innerHTML` property of the `dessertCards` variable.\n\n```js\nassert.match(code, /dessertCards\\.innerHTML/);\n```\n\nYou should use the addition assignment operator on the `innerHTML` property.\n\n```js\nassert.match(code, /dessertCards\\.innerHTML\\s*\\+=\\s*/);\n```\n\nYou should add an empty template literal string to the `innerHTML` property.\n\n```js\nassert.match(code, /dessertCards\\.innerHTML\\s*\\+=\\s*`\\s*`/);\n```"
    },
    {
      "title": "Step 11",
      "description": "In your template literal, create a `div` element with a class of `dessert-card`. In that `div`, create an `h2` element and give it the text of the `name` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\n--fcc-editable-region--\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n\n    `;\n  }\n);\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should create a `div` element.\n\n```js\nassert.isAtLeast(document.querySelectorAll('div')?.length, 12);\n```\n\nYour `div` element should have a class of `dessert-card`.\n\n```js\nassert.equal(document.querySelectorAll('.dessert-card')?.length, 12);\n```\n\nYou should create an `h2` element.\n\n```js\nassert.isAtLeast(document.querySelectorAll('h2')?.length, 12);\n```\n\nYour `h2` element should have the text of the `name` variable.\n\n```js\nassert.equal(document.querySelectorAll('h2')[0]?.textContent, 'Vanilla Cupcakes (6 Pack)');\n```\n\nYour `h2` element should be inside the `div` element.\n\n```js\nassert.equal(document.querySelectorAll('div h2')?.length, 12);\n```"
    },
    {
      "title": "Step 12",
      "description": "After your `h2` element, create two `p` elements. Give the first a `class` of `dessert-price`, and set the text to a dollar sign `\"$\"` followed by the value of the `price` variable. Give the second a `class` of `product-category`, and the text `\"Category: \"` followed by the value of the `category` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\n--fcc-editable-region--\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n\n      </div>\n    `;\n  }\n);\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should create two `p` elements.\n\n```js\nassert.equal(document.querySelector('.dessert-card')?.children.length, 3);\nassert.equal(document.querySelector('.dessert-card')?.querySelectorAll('p')?.length, 2)\n```\n\nYour `p` elements should come after your `h2` element.\n\n```js\nassert.equal(document.querySelector('.dessert-card')?.children[0].tagName, 'H2');\nassert.equal(document.querySelector('.dessert-card')?.children[1].tagName, 'P');\nassert.equal(document.querySelector('.dessert-card')?.children[2].tagName, 'P');\n```\n\nYour first `p` element should have a `class` of `dessert-price`.\n\n```js\nassert.equal(document.querySelector('.dessert-card')?.children[1].className, 'dessert-price');\n```\n\nYour first `p` element should have the dollar sign `\"$\"` followed by the value of the `price` variable.\n\n```js\nassert.equal(document.querySelector('.dessert-card')?.children[1].textContent, '$12.99');\n```\n\nYour second `p` element should have a `class` of `product-category`.\n\n```js\nassert.equal(document.querySelector('.dessert-card')?.children[2].className, 'product-category');\n```\n\nYour second `p` element should have the text `\"Category: \"` followed by the value of the `category` variable.\n\n```js\nassert.equal(document.querySelector('.dessert-card')?.children[2].textContent, 'Category: Cupcake');\n```"
    },
    {
      "title": "Step 13",
      "description": "Finally, after your `p` elements, create a `button` element. Give it an `id` set to the value of the `id` variable, a `class` of `btn add-to-cart-btn`, and use `\"Add to cart\"` for the text.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\n--fcc-editable-region--\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n\n      </div>\n    `;\n  }\n);\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should create a `button` element.\n\n```js\nassert.equal(document.querySelectorAll('.dessert-card button')?.length, 12);\n```\n\nYour `button` element should come after your `p` elements.\n\n```js\nassert.equal(document.querySelector('.dessert-card button')?.previousElementSibling?.tagName, 'P');\nassert.isNull(document.querySelector('.dessert-card button')?.nextElementSibling);\n```\n\nYour `button` element should have an `id` set to the value of the `id` variable.\n\n```js\nassert.equal(document.querySelector('.dessert-card button')?.id, '1');\n```\n\nYour `button` element should have a `class` of `btn add-to-cart-btn`.\n\n```js\nassert.include(document.querySelector('.dessert-card button')?.className, 'btn');\nassert.include(document.querySelector('.dessert-card button')?.className, 'add-to-cart-btn');\n```\n\nYour `button` element should have the text `\"Add to cart\"`.\n\n```js\nassert.equal(document.querySelector('.dessert-card button')?.textContent?.trim(), 'Add to cart');\n```"
    },
    {
      "title": "Step 14",
      "description": "You are already familiar with an HTML `class`, but JavaScript also has a <dfn>class</dfn>. In JavaScript, a class is like a blueprint for creating objects. It allows you to define a set of properties and methods, and instantiate (or create) new objects with those properties and methods.\n\nThe `class` keyword is used to declare a class. Here is an example of declaring a `Computer` class:\n\n```js\nclass Computer {};\n```\n\nDeclare a `ShoppingCart` class.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should declare a `ShoppingCart` variable.\n\n```js\nassert.match(code, /ShoppingCart/);\n```\n\nYou should use the `class` keyword to declare a `ShoppingCart` class.\n\n```js\nassert.match(code, /class\\s+ShoppingCart\\s*/);\n```\n\nYour `ShoppingCart` class should be empty.\n\n```js\nassert.match(code, /class\\s+ShoppingCart\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 15",
      "description": "Classes have a special `constructor` method, which is called when a new instance of the class is created. The `constructor` method is a great place to initialize properties of the class. Here is an example of a class with a `constructor` method:\n\n```js\nclass Computer {\n  constructor() {\n  }\n}\n```\n\nAdd an empty `constructor` method to the `ShoppingCart` class.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\n--fcc-editable-region--\nclass ShoppingCart {\n\n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should add a `constructor` method to the `ShoppingCart` class.\n\n```js\nassert.match(code,  /class\\s+ShoppingCart\\s*\\{\\s*constructor\\s*\\(\\s*\\)\\s*/)\n```\n\nYour `constructor` method should be empty.\n\n```js\nassert.match(code,  /class\\s+ShoppingCart\\s*\\{\\s*constructor\\s*\\(\\s*\\)\\s*\\{\\s*\\}\\s*\\}/)\n```"
    },
    {
      "title": "Step 16",
      "description": "The `this` keyword in JavaScript is used to refer to the current object. Depending on where `this` is used, what it references changes. In the case of a class, it refers to the instance of the object being constructed. You can use the `this` keyword to set the properties of the object being instantiated. Here is an example:\n\n```js\nclass Computer {\n  constructor() {\n    this.ram = 16;\n  }\n}\n```\n\nIn your constructor, use the `this` keyword to set the `items` property to an empty array. Also, set the `total` property to `0`, and the `taxRate` property to `8.25`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\n--fcc-editable-region--\nclass ShoppingCart {\n  constructor() {\n\n  }\n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the `this` keyword to set the `items` property of your class to an empty array.\n\n```js\nassert.match(code, /this\\.items/);\nconst cart = new ShoppingCart();\nassert.isArray(cart.items);\nassert.isEmpty(cart.items);\n```\n\nYou should use the `this` keyword to set the `total` property of your class to `0`.\n\n```js\nassert.match(code, /this\\.total/);\nconst cart = new ShoppingCart();\nassert.equal(cart.total, 0);\n```\n\nYou should use the `this` keyword to set the `taxRate` property of your class to `8.25`.\n\n```js\nassert.match(code, /this\\.taxRate/);\nconst cart = new ShoppingCart();\nassert.equal(cart.taxRate, 8.25);\n```"
    },
    {
      "title": "Step 17",
      "description": "Your `ShoppingCart` class needs the ability to add items. Create an empty `addItem` method, which takes two parameters: `id` and `products`. Creating a method might look like this:\n\n```js\nclass Computer {\n  constructor() {\n    this.ram = 16;\n  }\n\n  addRam(amount) {\n    this.ram += amount;\n  }\n}\n```\n\nThe first parameter, `id`, is the `id` of the product the user has added to their cart. The second parameter, `products`, is an array of product objects. By using a parameter instead of directly referencing your existing `products` array, this method will be more flexible if you wanted to add additional product lists in the future.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\n--fcc-editable-region--\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n\n};\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your `ShoppingCart` class should have an `addItem` method.\n\n```js\nconst cart = new ShoppingCart();\nassert.isFunction(cart.addItem);\n```\n\nYour `addItem` method should take two parameters: `id` and `products`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)/);\n```\n\nYour `addItem` method should be empty.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 18",
      "description": "You need to find the product that the user is adding to the cart. Remember that arrays have a `.find()` method. In your `addItem` function, declare a `product` variable, and assign it the value of calling the `.find()` method on the `products` array.\n\nFor the callback to `.find()`, pass a function that takes a single parameter `item`, and returns whether the `id` property of `item` is strictly equal to the `id` parameter passed to `addItem`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should declare a `product` variable in your `addItem` function.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /product\\s*=/);\n```\n\nYou should call the `.find()` method on your `products` array.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /products\\.find\\(/);\n```\n\nYou should pass a callback function to the `.find()` method.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /products\\.find\\(\\s*function\\s*\\(/);\n```\n\nThe callback function should take a single parameter.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /products\\.find\\(\\s*function\\s*\\(\\s*item\\s*\\)/);\n```\n\nThe callback function should return whether the `id` property of `item` is strictly equal to the `id` parameter passed to `addItem`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /products\\.find\\(\\s*function\\s*\\(\\s*item\\s*\\)\\s*\\{\\s*return\\s+item\\.id\\s*===\\s*id\\s*;?\\s*\\}/);\n```\n\nYou should assign the value of the `.find()` method to the `product` variable.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /product\\s*=\\s*products\\.find\\(/);\n```"
    },
    {
      "title": "Step 19",
      "description": "Use `const` and destructuring to extract `name` and `price` variables from `product`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should use destructuring to get the `name` and `price` variables.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /\\{\\s*name\\s*,\\s*price\\s*\\}/);\n```\n\nYou should use `const` to declare the `name` and `price` variables.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /const\\s*\\{\\s*name\\s*,\\s*price\\s*\\}/);\n```\n\nYou should use destructuring to get the `name` and `price` variables from `product`.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /const\\s*\\{\\s*name\\s*,\\s*price\\s*\\}\\s*=\\s*product\\s*;?\\b/);\n```"
    },
    {
      "title": "Step 20",
      "description": "Now you need to push the `product` into the cart's `items` array. Remember to use the `this` keyword.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should call the `push` method on the `items` array.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /items\\.push\\(/);\n```\n\nRemember you need to use the `this` keyword to access the `items` array.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /this\\.items\\.push\\(/);\n```\n\nYou should `push` the `product` variable to the `items` array.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nassert.deepEqual(cart.items, [products[0]]);\n```"
    },
    {
      "title": "Step 21",
      "description": "You now need a total count of each product that the user has in the cart. Declare a `totalCountPerProduct` variable, and assign it an empty object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should declare a `totalCountPerProduct` variable in your `addItem` function.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\s*=/);\n```\n\nYou should use `const` to declare `totalCountPerProduct`.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /const\\s+totalCountPerProduct\\s*=/);\n```\n\nYou should assign an empty object to `totalCountPerProduct`.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /const\\s+totalCountPerProduct\\s*=\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 22",
      "description": "Use the `.forEach()` method to loop through the `items` array. Pass an empty callback function that takes a single parameter `dessert`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should use the `.forEach()` method on your `items` array.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /items\\.forEach\\(/);\n```\n\nRemember to use the `this` keyword to access the `items` array.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /this\\.items\\.forEach\\(/);\n```\n\nYou should pass a callback function to the `.forEach()` method.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /this\\.items\\.forEach\\(\\s*function\\s*\\(/);\n```\n\nYour callback function should take a single parameter.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /this\\.items\\.forEach\\(\\s*function\\s*\\(\\s*dessert\\s*\\)/);\n```\n\nYour callback function should be empty.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /this\\.items\\.forEach\\(\\s*function\\s*\\(\\s*dessert\\s*\\)\\s*\\{\\s*\\}/);\n```"
    },
    {
      "title": "Step 23",
      "description": "You’re on the right track! However, let’s take a moment to address a common issue when working with objects in JavaScript.\n\nWhen you try to access an object property that doesn’t exist, JavaScript returns `undefined`. If you then attempt to perform arithmetic operations on `undefined`, it can lead to unexpected results, such as `NaN`.\n\nTo prevent this, you can use the `||` (logical OR) operator to provide a default value.\n\n```js\n  let scores = {}; \n  let players = [\"Alice\", \"Bob\", \"Charlie\"];\n\n  players.forEach(player => {\n    scores[player] = scores[player] || 0;\n  });\n```\n\nNow, let’s apply this concept to your `totalCountPerProduct` object in the `forEach` callback. Make sure that each `dessert.id` property is initialized properly.\n\nInitialize `totalCountPerProduct[dessert.id]` with a default value of `0` using the `||` operator.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      \n    })\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should use dot notation to access the `id` property of `dessert`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /dessert\\.id/);\n```\n\nYou should use bracket notation to access the property of `totalCountPerProduct` that corresponds to `dessert.id`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\.id\\s*\\]/);\n```\n\nYou should initialize `totalCountPerProduct[dessert.id]` with `0` as a default value using `||` operator at the end of the expression.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\.id\\s*\\]\\s*=\\s*totalCountPerProduct\\s*\\[\\s*dessert\\.id\\s*\\]\\s*\\|\\|\\s*0\\s*/);\n```"
    },
    {
      "title": "Step 24",
      "description": "In the `forEach` callback, wrap the right-hand assignment `totalCountPerProduct[dessert.id] || 0` in parentheses `()` to ensure proper evaluation, then increment the value by one.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = totalCountPerProduct[dessert.id] || 0\n    })\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should use dot notation to access the `id` property of `dessert`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /dessert\\.id/);\n```\n\nYou should use bracket notation to access the property of `totalCountPerProduct` that corresponds to `dessert.id`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\.id\\s*\\]/);\n```\n\nYou should use the assignment operator to update the value of the property of `totalCountPerProduct` that corresponds to `dessert.id`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\.id\\s*\\]\\s*=/);\n```\n\nYou should wrap `totalCountPerProduct[dessert.id] || 0` in parentheses `()` before incrementing it by one.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\.id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\s*\\[\\s*dessert\\.id\\s*\\]\\s*\\|\\|\\s*0\\s*\\)\\s*\\+\\s*1/);\n```"
    },
    {
      "title": "Step 25",
      "description": "Now you need to get prepared to update the display with the new product the user added. Declare a `currentProductCount` variable, and assign it the value of the `totalCountPerProduct` object's property matching the `id` of `product`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    \n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should declare a `currentProductCount` variable in your `addItem` function.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*=/);\n```\n\nYou should use `const` to declare `currentProductCount`.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /const\\s+currentProductCount\\s*=/);\n```\n\nYou should assign the value of `totalCountPerProduct[product.id]` to `currentProductCount`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*=\\s*totalCountPerProduct\\s*\\[\\s*product\\.id\\s*\\]/);\n```"
    },
    {
      "title": "Step 26",
      "description": "You haven't written the code to generate the HTML yet, but if a product has already been added to the user's cart then there will be a matching element which you'll need.\n\nUse `.getElementById()` to get the matching element - you'll be setting the `id` value to `product-count-for-id${product.id}`, so use a template literal to query that value.\n\nAssign your query to a `currentProductCountSpan` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should declare a `currentProductCountSpan` variable.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCountSpan\\s*=/);\n```\n\nYou should use `const` to declare `currentProductCountSpan`.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /const\\s+currentProductCountSpan\\s*=/);\n```\n\nYou should use `document.getElementById()` to get the matching element.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /document\\.getElementById\\(/);\n```\n\nYou should use a template literal to query the `id` value.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /document\\.getElementById\\(\\s*`product-count-for-id\\$\\{(product\\.)?id\\}`\\s*\\)/);\n```\n\nYou should assign the value of `document.getElementById()` to `currentProductCountSpan`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCountSpan\\s*=\\s*document\\.getElementById\\(/);\n```"
    },
    {
      "title": "Step 27",
      "description": "The behavior of the `addItem` method needs to change if the product is already in the cart or not. Create a ternary that checks if the current product is already in the cart. Use `undefined` for both the truthy and falsy expressions to avoid a syntax error.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should check if `currentProductCount` is greater than `1`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*>\\s*1/);\n```\n\nYou should use a ternary operator with your `currentProductCount > 1` condition.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*>\\s*1\\s*\\?/);\n```\n\nYou should use `undefined` as the truthy expression.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*>\\s*1\\s*\\?\\s*undefined/);\n```\n\nYou should use `undefined` as the falsy expression.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*>\\s*1\\s*\\?\\s*undefined\\s*:\\s*undefined/);\n```"
    },
    {
      "title": "Step 28",
      "description": "For your truthy expression, removing the `undefined`, you need to update the `textContent` of the `currentProductCountSpan` to be the `currentProductCount` followed by an `x`. Use a template literal to do so.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 ? undefined : undefined;\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should remove the `undefined` from your truthy expression.\n\n```js\nconst cart = new ShoppingCart();\nassert.notMatch(cart.addItem.toString(), /currentProductCount\\s*>\\s*1\\s*\\?\\s*undefined/);\n```\n\nYou should access the `textContent` property of `currentProductCountSpan`.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*>\\s*1\\s*\\?\\s*currentProductCountSpan\\.textContent/);\n```\n\nYou should use template literal syntax to update the `textContent` to be `${currentProductCount}x`.\n\n```js\nconst afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /currentProductCount\\s*>\\s*1\\s*\\?\\s*currentProductCountSpan\\.textContent\\s*=\\s*`\\$\\{currentProductCount\\}x`\\s*:/);\n```"
    },
    {
      "title": "Step 29",
      "description": "For your falsy expression, you'll need to add new HTML to your `productsContainer`. Start by removing the `undefined`, then use the addition assignment operator and template literal syntax to add a `div` with the `class` set to `product` and the `id` set to `dessert${id}` to the `innerHTML` property of the `productsContainer`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : undefined;\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should remove the `undefined` from your falsy expression.\n\n```js\nconst cart = new ShoppingCart();\nassert.notMatch(cart.addItem.toString(), /undefined/);\n```\n\nYou should use the addition assignment operator to add HTML to the `productsContainer`. Remember that HTML goes in the `innerHTML` property.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /productsContainer\\.innerHTML\\s*\\+=\\s*/);\n```\n\nYou should use template literal syntax to add HTML to the `productsContainer`.\n\n```js\nassert.match(code, /productsContainer\\.innerHTML\\s*\\+=\\s*`/);\n```\n\nYou should add a `div` to the `productsContainer`.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nassert.equal(productsContainer.children?.[0]?.tagName, \"DIV\");\n```\n\nYour `div` should have the `class` set to `product`.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nassert.equal(productsContainer.children?.[0]?.className, \"product\");\n```\n\nYour `div` should have the `id` set to `dessert${id}`.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nassert.equal(productsContainer.children?.[0]?.id, \"dessert1\");\n```"
    },
    {
      "title": "Step 30",
      "description": "Inside your `div`, add two `p` elements. Set the text of the second `p` element to be the value of the `price` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n\n      </div>\n      `;\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "You should add two `p` elements inside your `div` element.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nconst div = document.querySelector('.product');\nassert.equal(div?.children.length, 2);\nassert.equal(div?.children[0].tagName, 'P');\nassert.equal(div?.children[1].tagName, 'P');\n```\n\nYour second `p` element should have the text of the `price` variable.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nconst div = document.querySelector('.product');\nassert.equal(div?.children[1].textContent, '12.99');\n```"
    },
    {
      "title": "Step 31",
      "description": "In your first `p` element, add a `span` element. Give the `span` a class of `product-count` and an `id` of `product-count-for-id${id}`. Then, after the span, give your `p` element the text of the `name` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n--fcc-editable-region--\n};"
        }
      ],
      "testCode": "Your first `p` element should have a `span` element.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nconst div = document.querySelector('.product');\nconst p = div.querySelector('p');\nassert.equal(p.children.length, 1);\nassert.equal(p.children[0].tagName, 'SPAN');\n```\n\nYour `span` element should have a `class` of `product-count`.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nconst div = document.querySelector('.product');\nconst p = div.querySelector('p');\nassert.equal(p.children[0].className, 'product-count');\n```\n\nYour `span` element should have an `id` of `product-count-for-id${id}`.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nconst div = document.querySelector('.product');\nconst p = div.querySelector('p');\nassert.equal(p.children[0].id, 'product-count-for-id1');\n```\n\nYour first `p` element should have the text of the `name` variable. This should be outside the span.\n\n```js\nconst cart = new ShoppingCart();\ncart.addItem(1, products);\nconst div = document.querySelector('.product');\nconst p = div.querySelector('p');\nassert.equal(p.innerText.trim(), 'Vanilla Cupcakes (6 Pack)');\n```"
    },
    {
      "title": "Step 32",
      "description": "There is still more functionality that your `ShoppingCart` class needs, but first you need to be able to test the code you have currently written. You'll need to <dfn>instantiate</dfn> a new `ShoppingCart` object and assign it to a variable. Here is an example of instantiating the `Computer` class from earlier examples:\n\n```js\nconst myComputer = new Computer();\n```\n\nDeclare a `cart` variable, and assign it a new `ShoppingCart` object. Note the use of the `new` keyword when instantiating the object.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `const` to declare a `cart` variable.\n\n```js\nassert.match(code, /const\\s+cart\\s*=/);\n```\n\nYou should use the `new` keyword to instantiate a new `ShoppingCart` object.\n\n```js\nassert.match(code, /new\\s+ShoppingCart\\s*\\(\\s*\\)/);\n```\n\nYou should assign your new `ShoppingCart` object to the `cart` variable.\n\n```js\nassert.isTrue(cart instanceof ShoppingCart);\n```"
    },
    {
      "title": "Step 33",
      "description": "You need to get all of the `Add to cart` buttons that you added to the DOM earlier. Declare an `addToCartBtns` variable, and assign it the value of calling the `getElementsByClassName()` method on the `document` object, passing in the string `\"add-to-cart-btn\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use `const` to declare your `addToCartBtns` variable.\n\n```js\nassert.match(code, /const\\s+addToCartBtns\\s*=/);\n```\n\nYou should call the `getElementsByClassName()` method on the `document` object.\n\n```js\nassert.match(code, /document\\s*\\.\\s*getElementsByClassName\\s*\\(/);\n```\n\nYou should pass the string `\"add-to-cart-btn\"` to the `getElementsByClassName()` method.\n\n```js\nassert.match(code, /document\\s*\\.\\s*getElementsByClassName\\s*\\(\\s*('|\"|`)add-to-cart-btn\\1\\s*\\)/);\n```\n\nYou should assign the value returned by the `getElementsByClassName()` method to the `addToCartBtns` variable.\n\n```js\nassert.deepEqual(addToCartBtns, document.getElementsByClassName('add-to-cart-btn'));\n```"
    },
    {
      "title": "Step 34",
      "description": "You need to iterate through the buttons in your `addToCartBtns` variable. However, `.getElementsByClassName()` returns a Collection, which does not have a `forEach` method.\n\nUse the spread operator on the `addToCartBtns` variable to convert it into an array. Then, use the `forEach` method to iterate through the array. Do not pass a callback function yet.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the spread operator on the `addToCartBtns` variable.\n\n```js\nassert.match(code, /\\.\\.\\.addToCartBtns/);\n```\n\nYou should spread the `addToCartBtns` variable into an array.\n\n```js\nassert.match(code, /\\[\\s*\\.\\.\\.addToCartBtns\\s*\\]/);\n```\n\nYou should use the `forEach` method on the array you created.\n\n```js\nassert.match(code, /\\[\\s*\\.\\.\\.addToCartBtns\\s*\\]\\s*\\.\\s*forEach\\s*\\(/);\n```\n\nYou should not pass a callback function to the `forEach` method.\n\n```js\nassert.match(code, /\\[\\s*\\.\\.\\.addToCartBtns\\s*\\]\\s*\\.\\s*forEach\\s*\\(\\s*\\)/);\n```"
    },
    {
      "title": "Step 35",
      "description": "Add your callback function to the `forEach` method. It should take a `btn` parameter. Then, in the callback, add an event listener to the `btn`. The event listener should listen for a `click` event, and should take another callback with an `event` parameter. The second callback should be empty.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n--fcc-editable-region--\n[...addToCartBtns].forEach(\n\n);\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use arrow syntax to add a callback function to the `forEach` method which takes a `btn` parameter.\n\n```js\nassert.match(code, /\\[\\s*\\.\\.\\.addToCartBtns\\s*\\]\\s*\\.\\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*(?:\\{|\\s*)/);\n```\n\nYou should add an event listener to the `btn` variable.\n\n```js\nassert.match(code, /\\[\\s*\\.\\.\\.addToCartBtns\\s*\\]\\s*\\.\\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*(?:\\{\\s*btn\\s*\\.\\s*addEventListener\\s*\\(|\\s*btn\\s*\\.\\s*addEventListener\\s*\\()/);\n```\n\nYou should listen for a `click` event on the `btn` variable.\n\n```js\nassert.match(code, /\\[\\s*\\.\\.\\.addToCartBtns\\s*\\]\\s*\\.\\s*forEach\\s*\\(\\s*(?:\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*(?:\\{\\s*btn\\s*\\.\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*|\\s*btn\\s*\\.\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\2\\s*,\\s*)/);\n```\n\nYou should add an empty callback function to the event listener. Remember to give it an `event` parameter.\n\n```js\nassert.match(code, /\\[\\s*\\.\\.\\.addToCartBtns\\s*\\]\\s*\\.\\s*forEach\\s*\\(\\s*(?:\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*(?:\\{\\s*btn\\s*\\.\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;?\\s*\\}\\s*\\)|\\s*btn\\s*\\.\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\3\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;?\\s*\\))/);\n```"
    },
    {
      "title": "Step 36",
      "description": "In your event listener callback, call the `.addItem()` method of your `cart` object, and pass in the `event.target.id`. Remember that the `id` here will be a string, so you need to convert it to a number. \n\nPass your `products` array as the second argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n--fcc-editable-region--\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n\n    })\n  }\n);\n--fcc-editable-region--"
        }
      ],
      "testCode": "Your event listener callback should call the `.addItem()` method of your `cart` object.\n\n```js\nassert.match(code, /cart\\.addItem\\(/);\n```\n\nYour `.addItem()` method should be called with the `event.target.id` as the first argument. Remember to convert the `id` to a number using `Number()`.\n\n```js\nassert.match(code, /cart\\.addItem\\(\\s*Number\\(\\s*event\\.target\\.id\\s*\\)\\s*/);\n```\n\nYour `.addItem()` method should be called with the `products` array as the second argument.\n\n```js\nassert.match(code, /cart\\.addItem\\(\\s*Number\\(\\s*event\\.target\\.id\\s*\\)\\s*,\\s*products\\s*\\)/);\n```"
    },
    {
      "title": "Step 41",
      "description": "You need a way to access the total number of items in the cart. The best way to do this is to add another method to your `ShoppingCart` class, rather than accessing the `items` array directly.\n\nAdd a `getCounts` method to the `ShoppingCart` class. It should return the number of items in the `items` array.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "Your `ShoppingCart` class should have a `getCounts` method.\n\n```js\nassert.isFunction(cart.getCounts);\n```\n\nRemember to use the `this` keyword to access the `items` array.\n\n```js\nconst afterCounts = code.split('getCounts')[1];\nassert.match(afterCounts, /this\\s*\\.\\s*items\\s*\\.\\s*length/);\n```\n\nYour `getCounts` method should return the number of items in the `items` array.\n\n```js\nassert.equal(cart.getCounts(), 0);\ncart.addItem(1, products);\nassert.equal(cart.getCounts(), 1);\n```"
    },
    {
      "title": "Step 42",
      "description": "Now you can update the total number of items on the webpage. Assign the value of your `cart` object's `.getCounts()` method to the `textContent` of the `totalNumberOfItems` variable.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n--fcc-editable-region--\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n\n    })\n  }\n);\n--fcc-editable-region--\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should access the `textContent` property of the `totalNumberOfItems` variable.\n\n```js\nassert.match(code, /totalNumberOfItems\\s*\\.\\s*textContent/)\n```\n\nYou should assign the value of your `cart` object's `.getCounts()` method to the `textContent` property of the `totalNumberOfItems` variable.\n\n```js\nassert.match(code, /totalNumberOfItems\\s*\\.\\s*textContent\\s*=\\s*cart\\s*\\.\\s*getCounts\\(\\s*\\)/)\n```"
    },
    {
      "title": "Step 43",
      "description": "You also need to update the total price of the cart when the user adds an item. Create a `calculateTotal` method in the `ShoppingCart` class.\n\nIn that method, declare a `subTotal` variable and use the `reduce` method on the `items` array to calculate the sum of the `price` property of each item in the array. Use `total` and `item` as the parameters for your callback.\n\nRemember to set your initial value in the `reduce` method.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should create a `calculateTotal` method in the `ShoppingCart` class.\n\n```js\nassert.isFunction(cart.calculateTotal);\n```\n\nYour `calculateTotal` method should have a `subTotal` variable declared with `const`.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /const\\s+subTotal\\s*=/);\n```\n\nYour `calculateTotal` method should use the `reduce` method on the `items` array.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /this\\s*\\.\\s*items\\s*\\.\\s*reduce/);\n```\n\nYour `reduce` callback should use `total` and `item` as the first and second parameter. Remember to use arrow function syntax.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>/);\n```\n\nYour `reduce` callback should return the sum of `total` and `item.price`. Use an implicit return.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*(?:total\\s*\\+\\s*item\\.price|item\\.price\\s*\\+\\s*total)/);\n```\n\nYour `reduce` call should have an initial value of `0`.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /this\\s*\\.\\s*items\\s*\\.\\s*reduce\\s*\\(\\s*\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*(?:total\\s*\\+\\s*item\\.price|item\\.price\\s*\\+\\s*total)\\s*,\\s*0\\s*\\)/);\n```"
    },
    {
      "title": "Step 44",
      "description": "Part of the total cost will include the tax, so you need to calculate that as well. Create a `calculateTaxes` method in the `ShoppingCart` class. This method should take an `amount` parameter.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should create a `calculateTaxes` method in the `ShoppingCart` class.\n\n```js\nassert.isFunction(cart.calculateTaxes);\n```\n\nYour `calculateTaxes` method should take an `amount` parameter.\n\n```js\nassert.match(cart.calculateTaxes.toString(), /\\(\\s*amount\\s*\\)/);\n```"
    },
    {
      "title": "Step 45",
      "description": "Your `calculateTaxes` method should return the value of the `taxRate` (divided by 100, to convert it to a percent) multiplied by the `amount` parameter.\n\nFor clarity, wrap the `taxRate / 100` calculation in parentheses.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  calculateTaxes(amount) {\n\n  }\n--fcc-editable-region--\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should divide the `taxRate` by 100 in your `calculateTaxes` method. Remember to use the `this` keyword.\n\n```js\nconst afterCalculateTaxes = code.split('calculateTaxes')[1];\nassert.match(afterCalculateTaxes, /this\\s*\\.\\s*taxRate\\s*\\/\\s*100/);\n```\n\nYou should wrap the `this.taxRate / 100` calculation in parentheses.\n\n```js\nconst afterCalculateTaxes = code.split('calculateTaxes')[1];\nassert.match(afterCalculateTaxes, /\\(\\s*this\\s*\\.\\s*taxRate\\s*\\/\\s*100\\s*\\)/);\n```\n\nYou should multiply the `amount` parameter by the `taxRate` divided by 100 in your `calculateTaxes` method.\n\n```js\nconst afterCalculateTaxes = code.split('calculateTaxes')[1];\nassert.match(afterCalculateTaxes, /amount\\s*\\*\\s*\\(\\s*this\\s*\\.\\s*taxRate\\s*\\/\\s*100\\s*\\)|\\(\\s*this\\s*\\.\\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount/);\n```\n\nYour `calculateTaxes` method should return the value of the `taxRate` (divided by 100, to convert it to a percent) multiplied by the `amount` parameter.\n\n```js\nassert.equal(cart.calculateTaxes(10), (cart.taxRate / 100) * 10);\n```"
    },
    {
      "title": "Step 46",
      "description": "Because of the way computers store and work with numbers, calculations involving decimal numbers can result in some strange behavior. For example, `0.1 + 0.2` is not equal to `0.3`. This is because computers store decimal numbers as binary fractions, and some binary fractions cannot be represented exactly as decimal fractions.\n\nWe want to clean up the number result from your calculation. Wrap your calculation in parentheses (don't include the `return` statement!) and call the `.toFixed()` method on it. Pass the `.toFixed()` method the number `2` as an argument. This will round the number to two decimal places and return a string.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  calculateTaxes(amount) {\n    return (this.taxRate / 100) * amount;\n  }\n--fcc-editable-region--\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should wrap your calculation in parentheses.\n\n```js\nconst afterCalculateTaxes = code.split('calculateTaxes')[1];\nassert.match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\.\\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)/)\n```\n\nYou should call the `.toFixed()` method on your calculation.\n\n```js\nconst afterCalculateTaxes = code.split('calculateTaxes')[1];\nassert.match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\.\\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\.\\s*toFixed\\(/)\n```\n\nYou should pass the `.toFixed()` method the number `2` as an argument.\n\n```js\nconst afterCalculateTaxes = code.split('calculateTaxes')[1];\nassert.match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\.\\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\.\\s*toFixed\\s*\\(\\s*2\\s*\\)/)\n```"
    },
    {
      "title": "Step 47",
      "description": "The issue with `.toFixed()` returning a string is that you want to be able to perform calculations with the tax rate. To fix this, you can pass the `.toFixed()` call (including the calculation) to the `parseFloat()` function. This will convert the fixed string back into a number, preserving the existing decimal places.\n\nPass your `.toFixed()` call to `parseFloat()`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  calculateTaxes(amount) {\n    return ((this.taxRate / 100) * amount).toFixed(2);\n  }\n--fcc-editable-region--\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should pass your entire calculation (excluding the `return` statement) to `parseFloat()`.\n\n```js\nconst afterCalculateTaxes = code.split('calculateTaxes')[1];\nassert.match(afterCalculateTaxes, /return\\s*parseFloat\\(\\s*\\(\\s*\\(\\s*this\\s*\\.\\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\.\\s*toFixed\\s*\\(\\s*2\\s*\\)\\s*\\)/)\n```"
    },
    {
      "title": "Step 37",
      "description": "Your cart currently isn't visible on the webpage. To make it visible, start by adding an event listener to the `cartBtn` variable, listening for the click event. The callback does not need any parameters.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n    })\n  }\n);\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should add an event listener to the `cartBtn` variable.\n\n```js\nassert.match(code, /cartBtn\\s*\\.\\s*addEventListener\\s*\\(/);\n```\n\nYou should listen for a `click` event on the `cartBtn` variable.\n\n```js\nassert.match(code, /cartBtn\\s*\\.\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*/);\n```\n\nYou should add an empty callback function (using arrow syntax) to the event listener. Remember that it does not need any parameters.\n\n```js\nassert.match(code, /cartBtn\\s*\\.\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}\\s*\\)/);\n```"
    },
    {
      "title": "Step 38",
      "description": "Start by inverting the value of `isCartShowing`. Remember that you can use the logical not operator `!` to invert the value of a boolean. Assign the inverted value to `isCartShowing`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n    })\n  }\n);\n\n--fcc-editable-region--\ncartBtn.addEventListener(\"click\", () => {\n\n});\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should invert the value of `isCartShowing`.\n\n```js\nassert.match(code, /!isCartShowing/);\n```\n\nYou should assign the inverted value of `isCartShowing` to `isCartShowing`.\n\n```js\nassert.match(code, /isCartShowing\\s*=\\s*!isCartShowing/);\n```"
    },
    {
      "title": "Step 39",
      "description": "Now assign the `textContent` of the `showHideCartSpan` variable the result of a ternary expression which checks if `isCartShowing` is true. If it is, set the `textContent` to `\"Hide\"`, otherwise set it to `\"Show\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n    })\n  }\n);\n\n--fcc-editable-region--\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n\n});\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should use the assignment operator on the `textContent` property of the `showHideCartSpan` variable.\n\n```js\nassert.match(code, /showHideCartSpan\\s*\\.\\s*textContent\\s*=\\s*/)\n```\n\nYou should use ternary syntax to check if `isCartShowing` is true.\n\n```js\nassert.match(code, /showHideCartSpan\\s*\\.\\s*textContent\\s*=\\s*isCartShowing\\s*\\?\\s*/)\n```\n\nYou should set the `textContent` of the `showHideCartSpan` variable to `\"Hide\"` if `isCartShowing` is true.\n\n```js\nassert.match(code, /showHideCartSpan\\s*\\.\\s*textContent\\s*=\\s*isCartShowing\\s*\\?\\s*('|\"|`)Hide\\1\\s*:\\s*/)\n```\n\nYou should set the `textContent` of the `showHideCartSpan` variable to `\"Show\"` if `isCartShowing` is false.\n\n```js\nassert.match(code, /showHideCartSpan\\s*\\.\\s*textContent\\s*=\\s*isCartShowing\\s*\\?\\s*('|\"|`)Hide\\1\\s*:\\s*('|\"|`)Show\\2/)\n```"
    },
    {
      "title": "Step 40",
      "description": "Finally, update the `display` property of the `style` object of the `cartContainer` variable to another ternary which checks if `isCartShowing` is true. If it is, set the `display` property to `\"block\"`, otherwise set it to `\"none\"`.\n\nNow you should be able to see your cart and add items to it.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n    })\n  }\n);\n\n--fcc-editable-region--\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n\n});\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should access the `display` property of the `style` property of the `cartContainer` variable.\n\n```js\nassert.match(code, /cartContainer\\s*\\.\\s*style\\s*\\.\\s*display/)\n```\n\nYou should use the assignment operator on the `display` property of the `style` property of the `cartContainer` variable.\n\n```js\nassert.match(code, /cartContainer\\s*\\.\\s*style\\s*\\.\\s*display\\s*=\\s*/)\n```\n\nYou should use ternary syntax to check if `isCartShowing` is true.\n\n```js\nassert.match(code, /cartContainer\\s*\\.\\s*style\\s*\\.\\s*display\\s*=\\s*isCartShowing\\s*\\?\\s*/)\n```\n\nYou should set the `display` property of the `style` property of the `cartContainer` variable to `\"block\"` if `isCartShowing` is true.\n\n```js\nassert.match(code, /cartContainer\\s*\\.\\s*style\\s*\\.\\s*display\\s*=\\s*isCartShowing\\s*\\?\\s*('|\"|`)block\\1\\s*:\\s*/)\n```\n\nYou should set the `display` property of the `style` property of the `cartContainer` variable to `\"none\"` if `isCartShowing` is false.\n\n```js\nassert.match(code, /cartContainer\\s*\\.\\s*style\\s*\\.\\s*display\\s*=\\s*isCartShowing\\s*\\?\\s*('|\"|`)block\\1\\s*:\\s*('|\"|`)none\\2/)\n```"
    },
    {
      "title": "Step 48",
      "description": "Declare a variable `tax` and assign it the value of calling your new `.calculateTaxes()` method, passing `subTotal` as the argument.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n--fcc-editable-region--\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n\n  }\n--fcc-editable-region--\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "Use `const` to declare a variable named `tax`.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /const\\s+tax\\s*=/);\n```\n\nAssign the value of calling your new `.calculateTaxes()` method, passing `subTotal` as the argument, to the `tax` variable. Remember to use the `this` keyword.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /const\\s+tax\\s*=\\s*this\\s*\\.\\s*calculateTaxes\\s*\\(\\s*subTotal\\s*\\)/);\n```"
    },
    {
      "title": "Step 49",
      "description": "Update the `total` value to be the sum of the `subTotal` and `tax` values.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n--fcc-editable-region--\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n\n  }\n--fcc-editable-region--\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should update the `total` value. Remember to use the `this` keyword.\n\n```js\nassert.match(cart.calculateTotal.toString(), /this\\.total/);\n```\n\nYou should set the `total` value to be the sum of the `subTotal` and `tax` values.\n\n```js\nassert.match(cart.calculateTotal.toString(), /this\\.total\\s*=\\s*(subTotal\\s*\\+\\s*tax|tax\\s*\\+\\s*subTotal)/);\n```"
    },
    {
      "title": "Step 50",
      "description": "You're going to update the HTML in this method as well. Set the `textContent` of the `cartSubTotal` to be the value of `subTotal` to a fixed 2 decimal places. Use template literal syntax to add the dollar sign to the beginning of the value.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n--fcc-editable-region--\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n\n  }\n--fcc-editable-region--\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should access the `textContent` property of the `cartSubTotal` element.\n\n```js\nassert.match(cart.calculateTotal.toString(), /cartSubTotal\\.textContent/);\n```\n\nYou should call the `.toFixed()` method on the `subTotal` variable, passing `2` as the argument.\n\n```js\nassert.match(cart.calculateTotal.toString(), /subTotal\\.toFixed\\(\\s*2\\s*\\)/);\n```\n\nYou should use template literal syntax to add the dollar sign before your `.toFixed()` call.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /`\\$\\$\\{subTotal\\.toFixed\\(\\s*2\\s*\\)\\}\\`/);\n```\n\nYou should set the `textContent` of the `cartSubTotal` element to your template string.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /cartSubTotal\\.textContent\\s*=\\s*`\\$\\$\\{subTotal\\.toFixed\\(\\s*2\\s*\\)\\}\\`/);\n```"
    },
    {
      "title": "Step 51",
      "description": "Following the same pattern as your `cartSubTotal`, update the `cartTaxes` to display the `tax` value, and your `cartTotal` to display the `total` property.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n--fcc-editable-region--\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    \n  }\n--fcc-editable-region--\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should access the `textContent` property of the `cartTaxes` element.\n\n```js\nassert.match(cart.calculateTotal.toString(), /cartTaxes\\.textContent/);\n```\n\nYou should call the `.toFixed()` method on the `tax` variable, passing `2` as the argument.\n\n```js\nassert.match(cart.calculateTotal.toString(), /tax\\.toFixed\\(\\s*2\\s*\\)/);\n```\n\nYou should use template literal syntax to add the dollar sign before your `.toFixed()` call.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /`\\$\\$\\{tax\\.toFixed\\(\\s*2\\s*\\)\\}\\`/);\n```\n\nYou should set the `textContent` of the `cartTaxes` element to `tax.toFixed` template string.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /cartTaxes\\.textContent\\s*=\\s*`\\$\\$\\{tax\\.toFixed\\(\\s*2\\s*\\)\\}\\`/);\n```\n\nYou should access the `textContent` property of the `cartTotal` element.\n\n```js\nassert.match(cart.calculateTotal.toString(), /cartTotal\\.textContent/);\n```\n\nYou should call the `.toFixed()` method on the `total` variable, passing `2` as the argument. Remember to use the `this` keyword.\n\n```js\nassert.match(cart.calculateTotal.toString(), /this\\.total\\.toFixed\\(\\s*2\\s*\\)/);\n```\n\nYou should use template literal syntax to add the dollar sign before your `.toFixed()` call.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /`\\$\\$\\{this\\.total\\.toFixed\\(\\s*2\\s*\\)\\}\\`/);\n```\n\nYou should set the `textContent` of the `cartTotal` element to your `total.toFixed` template string.\n\n```js\nconst afterCalculateTotal = code.split('calculateTotal')[1];\nassert.match(afterCalculateTotal, /cartTotal\\.textContent\\s*=\\s*`\\$\\$\\{this\\.total\\.toFixed\\(\\s*2\\s*\\)\\}\\`/);\n```"
    },
    {
      "title": "Step 52",
      "description": "Finally, return the value of the `total` property. Remember your `this` keyword.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n--fcc-editable-region--\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n\n  }\n--fcc-editable-region--\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "Your `calculateTotal` method should return the value of the `total` property.\n\n```js\nassert.equal(cart.calculateTotal(), 0);\ncart.addItem(1, products);\nassert.approximately(cart.calculateTotal(), 14.06, 0.1);\n```"
    },
    {
      "title": "Step 54",
      "description": "Your last feature is to allow users to clear their cart. Add a `clearCart()` method to your `ShoppingCart` class.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "Your `ShoppingCart` class should have a `clearCart` method.\n\n```js\nassert.isFunction(cart.clearCart);\n```"
    },
    {
      "title": "Step 55",
      "description": "The first thing you should do is check if the `items` array is empty. If it is, display an `alert` to the user with the text `Your shopping cart is already empty`, then return from the function.\n\nRemember that `0` is a falsy value, so you can use the `!` operator to check if the array is empty.\n\nAfter displaying the alert, return from the function to stop execution.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  clearCart() {\n\n  }\n--fcc-editable-region--\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should create an `if` statement that checks if the `items` array is empty, using the negation operator.\n\n```js\nassert.match(cart.clearCart.toString(), /if\\s*\\(\\s*!\\s*this\\s*\\.\\s*items\\s*\\.\\s*length\\s*\\)/);\n```\n\nYour `if` statement should display an `alert` to the user with the text `Your shopping cart is already empty`.\n\n```js\nassert.match(cart.clearCart.toString(), /if\\s*\\(\\s*!\\s*this\\s*\\.\\s*items\\s*\\.\\s*length\\s*\\)\\s*\\{\\s*(?:window\\.|globalThis\\.)?alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*/);\n```\n\nYour `if` statement should return from the function.\n\n```js\nassert.match(cart.clearCart.toString(), /if\\s*\\(\\s*!\\s*this\\s*\\.\\s*items\\s*\\.\\s*length\\s*\\)\\s*\\{\\s*(?:window\\.|globalThis\\.)?alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*;?\\s*return\\s*;?\\s*\\}/);\n```"
    },
    {
      "title": "Step 56",
      "description": "Browsers have a built-in `confirm()` function which displays a confirmation prompt to the user. `confirm()` accepts a string, which is the message displayed to the user. It returns `true` if the user confirms, and `false` if the user cancels.\n\nDeclare a variable `isCartCleared` and assign it the value of calling `confirm()` with the string `\"Are you sure you want to clear all items from your shopping cart?\"`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  clearCart() {\n    if (!this.items.length) {\n      alert(\"Your shopping cart is already empty\");\n      return;\n    }\n\n\n  }\n--fcc-editable-region--\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should use `const` to declare the `isCartCleared` variable.\n\n```js\nconst afterClearCart = code.split('clearCart()')[1];\nassert.match(afterClearCart, /const\\s+isCartCleared\\s*=/);\n```\n\nYou should call the `confirm()` function.\n\n```js\nassert.match(cart.clearCart.toString(), /confirm\\s*\\(/);\n```\n\nYou should pass the string `Are you sure you want to clear all items from your shopping cart?` to the `confirm()` function.\n\n```js\nassert.match(cart.clearCart.toString(), /confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\?\\1\\s*\\)/);\n```\n\nYou should assign the value of the `confirm()` function to the `isCartCleared` variable.\n\n```js\nassert.match(cart.clearCart.toString(), /isCartCleared\\s*=\\s*confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\?\\1\\s*\\)/);\n```"
    },
    {
      "title": "Step 57",
      "description": "You only want to clear the cart if the user confirms the prompt. Create an `if` statement that checks if the user confirmed the prompt.\n\nIn the `if` statement, set the `items` property back to an empty array, then set the `total` property to `0`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  clearCart() {\n    if (!this.items.length) {\n      alert(\"Your shopping cart is already empty\");\n      return;\n    }\n\n    const isCartCleared = confirm(\n      \"Are you sure you want to clear all items from your shopping cart?\"\n    );\n\n\n  }\n--fcc-editable-region--\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should create an `if` statement that checks if the user confirmed the prompt. Remember that you can check the truthiness of `isCartCleared` directly.\n\n```js\nassert.match(cart.clearCart.toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)/);\n```\n\nYour `if` statement should set the `items` property back to an empty array.\n\n```js\nassert.match(cart.clearCart.toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\.\\s*items\\s*=\\s*\\[\\s*\\]/);\n```\n\nYour `if` statement should set the `total` property to `0`.\n\n```js\nassert.match(cart.clearCart.toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\.\\s*items\\s*=\\s*\\[\\s*\\]\\s*;?\\s*this\\s*\\.\\s*total\\s*=\\s*0\\s*;?\\s*}/);\n```"
    },
    {
      "title": "Step 58",
      "description": "You also need to start clearing the HTML. Set the `innerHTML` property of the `productsContainer` back to an empty string.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  clearCart() {\n    if (!this.items.length) {\n      alert(\"Your shopping cart is already empty\");\n      return;\n    }\n\n    const isCartCleared = confirm(\n      \"Are you sure you want to clear all items from your shopping cart?\"\n    );\n\n    if (isCartCleared) {\n      this.items = [];\n      this.total = 0;\n\n    }\n  }\n--fcc-editable-region--\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "In your `if` statement, you should set the `innerHTML` property of the `productsContainer` back to an empty string.\n\n```js\nassert.match(cart.clearCart.toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\.\\s*items\\s*=\\s*\\[\\s*\\]\\s*;?\\s*this\\s*\\.\\s*total\\s*=\\s*0\\s*;?\\s*productsContainer\\.innerHTML\\s*=\\s*('|\"|`)\\1\\s*;?\\s*}/);\n```"
    },
    {
      "title": "Step 59",
      "description": "Set the `textContent` of the `totalNumberOfItems`, `cartSubTotal`, `cartTaxes`, and `cartTotal` elements all to the number `0`.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n--fcc-editable-region--\n  clearCart() {\n    if (!this.items.length) {\n      alert(\"Your shopping cart is already empty\");\n      return;\n    }\n\n    const isCartCleared = confirm(\n      \"Are you sure you want to clear all items from your shopping cart?\"\n    );\n\n    if (isCartCleared) {\n      this.items = [];\n      this.total = 0;\n      productsContainer.innerHTML = \"\";\n\n    }\n  }\n--fcc-editable-region--\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should set the `textContent` of the `totalNumberOfItems` element to `0`.\n\n```js\nconst secondIf = cart.clearCart.toString().split('if')[2];\nconst inIf = secondIf.split('}')[0];\nassert.match(inIf, /totalNumberOfItems\\.textContent\\s*=\\s*0/);\n```\n\nYou should set the `textContent` of the `cartSubTotal` element to `0`.\n\n```js\nconst secondIf = cart.clearCart.toString().split('if')[2];\nconst inIf = secondIf.split('}')[0];\nassert.match(inIf, /cartSubTotal\\.textContent\\s*=\\s*0/);\n```\n\nYou should set the `textContent` of the `cartTaxes` element to `0`.\n\n```js\nconst secondIf = cart.clearCart.toString().split('if')[2];\nconst inIf = secondIf.split('}')[0];\nassert.match(inIf, /cartTaxes\\.textContent\\s*=\\s*0/);\n```\n\nYou should set the `textContent` of the `cartTotal` element to `0`.\n\n```js\nconst secondIf = cart.clearCart.toString().split('if')[2];\nconst inIf = secondIf.split('}')[0];\nassert.match(inIf, /cartTotal\\.textContent\\s*=\\s*0/);\n```"
    },
    {
      "title": "Step 60",
      "description": "Your final step is to make your clear button functional. Add a `click` event listener to the `clearCartBtn`. For the callback, you can pass in `cart.clearCart` directly.\n\nHowever, doing so will not work, because the context of `this` will be the `clearCartBtn` element. You need to bind the `clearCart` method to the `cart` object.\n\nYou can do this by passing `cart.clearCart.bind(cart)` as the callback.\n\nAnd with that, your shopping cart project is complete!",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  clearCart() {\n    if (!this.items.length) {\n      alert(\"Your shopping cart is already empty\");\n      return;\n    }\n\n    const isCartCleared = confirm(\n      \"Are you sure you want to clear all items from your shopping cart?\"\n    );\n\n    if (isCartCleared) {\n      this.items = [];\n      this.total = 0;\n      productsContainer.innerHTML = \"\";\n      totalNumberOfItems.textContent = 0;\n      cartSubTotal.textContent = 0;\n      cartTaxes.textContent = 0;\n      cartTotal.textContent = 0;\n    }\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});\n\n--fcc-editable-region--\n\n--fcc-editable-region--"
        }
      ],
      "testCode": "You should add an event listener to your `clearCartBtn` element.\n\n```js\nassert.match(code, /clearCartBtn\\.addEventListener\\(/);\n```\n\nYour event listener should listen for the `click` event.\n\n```js\nassert.match(code, /clearCartBtn\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,/);\n```\n\nYour event listener should take `cart.clearCart.bind(cart)` as the callback.\n\n```js\nassert.match(code, /clearCartBtn\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*cart\\.clearCart\\s*\\.bind\\(\\s*cart\\s*\\)\\s*\\)/);\n```"
    },
    {
      "title": "Step 53",
      "description": "Now call your `.calculateTotal()` method inside your `forEach` loop.",
      "files": [
        {
          "name": "index.html",
          "language": "html",
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
        },
        {
          "name": "styles.css",
          "language": "css",
          "content": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
        },
        {
          "name": "script.js",
          "language": "js",
          "content": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n--fcc-editable-region--\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n\n    })\n  }\n);\n--fcc-editable-region--\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});"
        }
      ],
      "testCode": "You should call `cart.calculateTotal()` inside your `forEach` loop.\n\n```js\nconst afterForEach = code.split('[...addToCartBtns].forEach(')[1];\nassert.match(afterForEach, /cart\\.calculateTotal\\(\\s*\\)/);\n```"
    }
  ]
}